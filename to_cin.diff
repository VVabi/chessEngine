diff --git a/Cpp/.cproject b/Cpp/.cproject
index 1882582..66f795f 100644
--- a/Cpp/.cproject
+++ b/Cpp/.cproject
@@ -443,6 +443,11 @@
 	</storageModule>
 	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
 	<storageModule moduleId="refreshScope" versionNumber="2">
+		<configuration configurationName="uciRelease"/>
+		<configuration configurationName="uciDefenderRelease"/>
+		<configuration configurationName="TestRelease"/>
+		<configuration configurationName="uciDebug"/>
+		<configuration configurationName="uciChallengeRelease"/>
 		<configuration configurationName="Debug">
 			<resource resourceType="PROJECT" workspacePath="/Vabi"/>
 		</configuration>
@@ -450,4 +455,5 @@
 			<resource resourceType="PROJECT" workspacePath="/Vabi"/>
 		</configuration>
 	</storageModule>
+	<storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
 </cproject>
diff --git a/Cpp/params.txt b/Cpp/params.txt
index 22223ab..ec459be 100644
--- a/Cpp/params.txt
+++ b/Cpp/params.txt
@@ -7,4 +7,8 @@ bishoppair  			50
 rookonopenfile 			15
 isolateddoublepawns 	-50
 nonisolateddoublepawns 	-20
-isolatedpawns   		-10
\ No newline at end of file
+isolatedpawns   		-10
+selfopenfiletoking       -30
+selfopenfilenexttoking    -20
+opponentopenfiletoking 	  -20
+opponentopenfilenexttoking  -10
\ No newline at end of file
diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
index 66f411c..41b1a0d 100644
--- a/Cpp/src/Search/moveOrdering.cpp
+++ b/Cpp/src/Search/moveOrdering.cpp
@@ -69,6 +69,7 @@ void calcCaptureSortEval(chessPosition* position, chessMove* mv, uint16_t hashed
 #define ILLEGAL -20000
 
 static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackTable* opponentAttackTable, AttackTable* ownAttackTable, uint16_t hashedMove, uint16_t killerA, uint16_t killerB, uint16_t refutationTarget) {
+	//TODO: add bonus for pawn pushes to 6th/7th row!
 	const evalParameters* evalPars 						= getEvalParameters(); //TODO: move outside
 	int16_t sortEval = 0;
 
@@ -176,6 +177,7 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
 		} /*else {
 			sortEval = sortEval+30;
 		}*/
+
 	}
 	if((position->madeMoves.length > 0) && (mv->captureType != none)){
 		chessMove previousMove = position->madeMoves[position->madeMoves.length-1];
diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
index 8ec31ee..9011b60 100644
--- a/Cpp/src/Search/negamax.cpp
+++ b/Cpp/src/Search/negamax.cpp
@@ -162,10 +162,10 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 		searchCounts.wentToQuiescence++;
 		return negamaxQuiescence(position, alpha, beta, 0);
 	}
-	uint64_t ownKing = position->pieceTables[position->toMove][king];
-	bool movingSideInCheck = isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing));
 
 	uint16_t refutationTarget = NO_REFUTATION; //invalid
+	uint64_t ownKing = position->pieceTables[position->toMove][king];
+	bool movingSideInCheck = isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing));
 	if(allowNullMove && !movingSideInCheck && (depth >= 2)){
 		if(check_nullmove(position, &refutationTarget, ply, max_ply, depth, beta)){
 			return beta;
@@ -177,19 +177,18 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 
 	//futility pruning
 	//-----------------
-	if(depth == 1){
-		if(!movingSideInCheck) {
-			searchCounts.futility_tried++;
-			int32_t base = evaluation(position, alpha-151, alpha);
-			if(base+150 < alpha){
-				searchCounts.futility_successful++;
-				//in this case, trying a silent move is pointless.
-				//std::cout << "Successful futility pruning" << std::endl;
-				return  negamaxQuiescence(position, alpha, beta, 0);
-			}
+	if(!movingSideInCheck) {
+		searchCounts.futility_tried++;
+		int32_t base = evaluation(position, alpha-151, alpha);
+		if(base+150 < alpha){
+			searchCounts.futility_successful++;
+			//in this case, trying a silent move is pointless.
+			//std::cout << "Successful futility pruning" << std::endl;
+			return  negamaxQuiescence(position, alpha, beta, 0);
 		}
 	}
 
+
 	uint16_t stackCounter = qmvStack.getCounter();
 	vdt_vector<chessMove> moves = qmvStack.getNext();
 	generateAllMoves(&moves, position);
@@ -220,9 +219,6 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 				assert(moves[ind].type != kingMove); //all king moves moving into check should be found by move ordering!
 			}
 		} else {
-
-
-
 			searchCounts.nodes[depth]++;
 			searchCounts.totalNodes++;
 			legalMovesAvailable = true;
@@ -231,12 +227,9 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
 			uint16_t reduction = 0;
 			uint16_t extension = 0;
-			if(!check && !isInCheck && (moves[ind].captureType == none) && (depth > 2)){
-				if((ind > 3) || foundGoodMove){
+			if(!check && !isInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
+				if((ind > 3)){
 					reduction = 1;
-					if(ind > 15) {
-						reduction = 2;
-					}
 				}
 			}
 
@@ -255,6 +248,14 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 				reduction = 0;
 			}
 
+
+			bool closeToPromotion = (moves[ind].type == pawnMove) && ( (moves[ind].targetField > 48) || (moves[ind].targetField < 16));
+
+			if( (closeToPromotion || (moves[ind].type == promotionQueen)) && (ply+depth+extension < max_ply-1)) {
+				extension++;
+				reduction = 0;
+			}
+
 			//PVSearch, currently a small gain for us with the > 3
 			//-------------------------------------------------
 			if(((ind > 3) || foundGoodMove )&& (depth > 2)) {
diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
index 7fa6e83..ebdaca3 100644
--- a/Cpp/src/Vabi.cpp
+++ b/Cpp/src/Vabi.cpp
@@ -86,7 +86,6 @@ int main() {
 		for(uint32_t t=0; t < 2; t++) {
 			for(uint32_t k=0; k < 64; k++) {
 				completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+evalPars->figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]/2+evalPars->figureValues[index])) << 16);
-
 			}
 		}
 	}
diff --git a/Cpp/src/lib/Defines/evalParameters.hpp b/Cpp/src/lib/Defines/evalParameters.hpp
index 1b0d6cc..a4e9379 100644
--- a/Cpp/src/lib/Defines/evalParameters.hpp
+++ b/Cpp/src/lib/Defines/evalParameters.hpp
@@ -13,5 +13,12 @@
 #define ISOLATEDPAWN   -10
 #define ISOLATEDDOUBLEPAWN -50
 #define NONISOLATEDDOUBLEPAWN -20
+#define SELFOPENFILETOKING -30
+#define SELFOPENFILENEXTTOKING -20
+#define OPPONENTOPENFILETOKING  -20
+#define OPPONENTOPENFILENEXTTOKING -10
+
+
+
 
 #endif /* LIB_DEFINES_EVALPARAMETERS_HPP_ */
diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
index 2aa12d0..1d29ffd 100644
--- a/Cpp/src/lib/Evaluation/evaluation.cpp
+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
@@ -18,6 +18,7 @@
 #include <fstream>
 #include <parameters/parameters.hpp>
 #include <logging/logger.hpp>
+#include <parameters/parameters.hpp>
 
 evaluationResult result;
 
@@ -25,8 +26,18 @@ evaluationResult getEvaluationResult(){
 	return result;
 }
 
-
-
+uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
+						       	 0,  0,  0,  0,  0,  0,  0,  0,
+								0, 2, 7, 12, 17, 22, 27, 33,
+								39, 45, 51, 57, 64, 71, 78, 85,
+								92, 99, 106, 113, 120, 127,134,141,
+							   148,155,162,168,174,180,186,192,
+							   197,202,206,210,214,218,222,226,
+							   229,232,235,238,241,244,247,256,
+							   256,256,256,256,256,256,256,256,
+							   256,256,256,256,256,256,256,256,256
+};
+/*
 uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
 						       	 0,  0,  0,  0,  0,  0,  0,  0,
 								0, 2, 7, 11, 14, 19, 24, 29,
@@ -38,7 +49,7 @@ uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
 							   256,256,256,256,256,256,256,256,
 							   256,256,256,256,256,256,256,256,256
 };
-
+*/
 static int32_t rookOpenFiles(const chessPosition* position, uint8_t* pawnOccupancy, const evalParameters* evalParams) {
 	int32_t ret = 0;
 
@@ -104,8 +115,7 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
 		return evalsigned;
 	}
 
-	uint8_t pawnColumnOccupancy[2];
-	eval = eval+pawnEvaluation(position, pawnColumnOccupancy, phase, evalPars);
+
 	int16_t mobilityScore = 0;
 	AttackTable whiteAttackTable = makeAttackTableWithMobility(position, white, &mobilityScore);
 	eval = eval+mobilityScore;
@@ -115,6 +125,8 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
 	eval = eval-mobilityScore;
 	result.mobility = result.mobility-mobilityScore;
 
+	uint8_t pawnColumnOccupancy[2];
+	eval = eval+pawnEvaluation(position, pawnColumnOccupancy, phase, evalPars, &whiteAttackTable, &blackAttackTable);
 
 	int16_t rookFiles = rookOpenFiles(position, pawnColumnOccupancy, evalPars);
 	eval = eval+rookFiles;
@@ -136,7 +148,7 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
 		result.bishoppair = result.bishoppair-evalPars->bishoppair;
 	}
 
-	int32_t kingSafetyComplete = kingSafety(position, pawnColumnOccupancy, &whiteAttackTable, &blackAttackTable);;
+	int32_t kingSafetyComplete = kingSafety(position, pawnColumnOccupancy, &whiteAttackTable, &blackAttackTable, &evalPars->kingSafetyParameters);
 	int32_t kingSafetyTapered = (taperingValues[phase]*kingSafetyComplete)/256;
 	eval = eval+kingSafetyTapered;
 	result.kingSafety = kingSafetyTapered;
diff --git a/Cpp/src/lib/Evaluation/evaluation.hpp b/Cpp/src/lib/Evaluation/evaluation.hpp
index 47210a1..33a946a 100644
--- a/Cpp/src/lib/Evaluation/evaluation.hpp
+++ b/Cpp/src/lib/Evaluation/evaluation.hpp
@@ -12,9 +12,9 @@
 #include <communication/gen/VDT.h>
 #include <parameters/parameters.hpp>
 int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta);
-int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, const evalParameters* evalPars);
+int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, const evalParameters* evalPars, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable);
 int32_t staticPawnEval(uint64_t pawns, playerColor color, const staticPawnEvalParameters* evalPars);
-int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccupancy, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable);
+int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccupancy, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable, const kingSafetyEvalParameters* par);
 int32_t debugPawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, VDTpawnEvaluation* pawnEval);
 int32_t debugEvaluation(const chessPosition* position, VDTevaluation* debugStruct);
 
diff --git a/Cpp/src/lib/Evaluation/kingsafety.cpp b/Cpp/src/lib/Evaluation/kingsafety.cpp
index 5eac76e..c5b6e37 100644
--- a/Cpp/src/lib/Evaluation/kingsafety.cpp
+++ b/Cpp/src/lib/Evaluation/kingsafety.cpp
@@ -15,9 +15,27 @@
 
 extern uint64_t kingmovetables[64];
 
-int32_t attacksCloseToKingEvals[] = {0, 10, 20, 40, 80, 150, 230, 350, 400, 500, 600};
+int32_t attacksCloseToKingEvals[] =
+{ 0, 0, 1, 2, 3,5,8,10,13,20,
+ 23,26,29,33,37,41,45,51,57,63,
+ 69,75,82,89,96,103,110,118,127, 136,
+ 145,154,163,172,181,190,199,208,217,216,
+ 226,236,246,256,266,276,286,296,306,316,
+ 326,336,346,356,366,376,386,395,404,413,
+ 421,429,437,441,450,450,450,450,450,450
 
-static int32_t kingSafetySinglePlayer(const chessPosition* position, const uint8_t* pawnColumnOccupancy, playerColor playingSide, const AttackTable* opponentAttackTable) {
+};
+
+int32_t attackScores[] = {1,3,3,4,7};
+
+
+
+
+//int32_t attacksCloseToKingEvals[] = {0, 10, 20, 40, 80, 150, 230, 350, 400, 500, 600};
+
+
+static int32_t kingSafetySinglePlayer(const chessPosition* position, const uint8_t* pawnColumnOccupancy,
+		playerColor playingSide, const AttackTable* opponentAttackTable, const kingSafetyEvalParameters* par) {
 
 	int32_t ret = 0;
 	//pawn shield
@@ -25,28 +43,28 @@ static int32_t kingSafetySinglePlayer(const chessPosition* position, const uint8
 	uint16_t kingFile = FILE(kingField);
 
 	if( !((1 << kingFile) & pawnColumnOccupancy[playingSide])) { // no pawn in front of king. TODO: check for pawn really in FRONT of king
-		ret = ret-30;
+		ret = ret+par->selfopenfiletoking;
 	}
 
 	if( !((1 << kingFile) & pawnColumnOccupancy[1-playingSide])) { // no opponent pawn
-		ret = ret-20;
+		ret = ret+par->opponentopenfiletoking;
 	}
 
 	if(kingFile > 0) {
 		if( !((1 << (kingFile-1)) & pawnColumnOccupancy[playingSide])) { // no pawn in front of king. TODO: check for pawn really in FRONT of king
-				ret = ret-20;
+				ret = ret+par->selfopenfilenexttoking;
 		}
 		if( !((1 << (kingFile-1)) & pawnColumnOccupancy[1-playingSide])) { // no opponent pawn
-			ret = ret-10;
+			ret = ret+par->opponentopenfilenexttoking;
 		}
 	}
 
 	if(kingFile < 7) {
 		if( !((1 << (kingFile+1)) & pawnColumnOccupancy[playingSide])) { // no pawn in front of king. TODO: check for pawn really in FRONT of king
-				ret = ret-20;
+			ret = ret+par->selfopenfilenexttoking;
 		}
 		if( !((1 << (kingFile+1)) & pawnColumnOccupancy[1-playingSide])) { // no opponent pawn
-			ret = ret-10;
+			ret = ret+par->opponentopenfilenexttoking;
 		}
 	}
 
@@ -66,18 +84,35 @@ static int32_t kingSafetySinglePlayer(const chessPosition* position, const uint8
 	uint64_t kingmoves = kingmovetables[kingField];
 	kingmoves = kingmoves | BIT64(kingField);
 
-	uint64_t attacks = opponentAttackTable->completeAttackTable & kingmoves;
 
-	ret = ret-attacksCloseToKingEvals[popcount(attacks)];
+	uint16_t kingAttackScore = 0;
+
+	for(uint16_t pieceType = 0; pieceType < 5; pieceType++ ) {
+		uint64_t attacks = opponentAttackTable->attackTables[pieceType] & kingmoves;
+		kingAttackScore = kingAttackScore+popcount(attacks)*attackScores[pieceType];
+	}
+
+	if(kingAttackScore >= 70) {
+		kingAttackScore = 69;
+	}
+
+	ret = ret-attacksCloseToKingEvals[kingAttackScore];
+
+
+	/*uint64_t attacks = opponentAttackTable->completeAttackTable & kingmoves;
+
+	ret = ret-attacksCloseToKingEvals[popcount(attacks)];*/
+
 	return (1-2*playingSide)*ret;
 
 }
 
 
-int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccupancy, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable) {
+int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccupancy,
+		const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable, const kingSafetyEvalParameters* par) {
 
-	int32_t whiteSafety =  kingSafetySinglePlayer(position, pawnColumnOccupancy, white, blackAttackTable);
-	int32_t blackSafety =  kingSafetySinglePlayer(position, pawnColumnOccupancy, black, whiteAttackTable);
+	int32_t whiteSafety =  kingSafetySinglePlayer(position, pawnColumnOccupancy, white, blackAttackTable, par);
+	int32_t blackSafety =  kingSafetySinglePlayer(position, pawnColumnOccupancy, black, whiteAttackTable, par);
 	int32_t ret =  whiteSafety+blackSafety;
 	return ret;
 
diff --git a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
index 7f1471c..750ec9d 100644
--- a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
+++ b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
@@ -44,35 +44,94 @@ static uint16_t distBetweenFields(uint16_t a, uint16_t b) {
 }
 
 
-static int32_t passedPawnEval(uint64_t whitePawns, uint64_t blackPawns, uint16_t blackKing, uint16_t whiteKing) {
-	//TODO: remove code duplication
+static int32_t passedPawnEval(int32_t* untaperedEval, uint64_t whitePawns, uint64_t blackPawns, uint16_t blackKing, uint16_t whiteKing, const evalParameters* evalPars, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable) {
+	//TODO: remove code duplication. Generally this code sucks - too many white/black diffs...
 	int32_t eval = 0;
 	uint64_t whitePawnBuffer = whitePawns;
+	int16_t coverage = 0;
 	while(whitePawnBuffer){
 		uint16_t field = popLSB(whitePawnBuffer);
 		if((passedPawnMasks[white][field] & blackPawns) == 0) {
-			eval = eval+passedPawnEvalValues[white][field];
-			uint16_t promotionField = FILE(field)+56;
+
+			uint16_t promotionField  = FILE(field)+56;
 			uint16_t distToPromotion = 7-ROW(field);
 			uint16_t kingDist        = distBetweenFields(promotionField, blackKing);
-			eval  = eval-kingToPromotionFieldDistance[distToPromotion][kingDist];
+			if(distToPromotion <= 2) {
+				*untaperedEval = *untaperedEval+7*passedPawnEvalValues[white][field];
+			} else {
+				eval = eval+passedPawnEvalValues[white][field];
+			}
+/*#ifdef EXPERIMENTAL
+			if(distToPromotion < 3) {
+				if(whiteAttackTable->attackTables[bishop] & BIT64(promotionField)) {
+					coverage = coverage+15;
+				}
+
+				uint64_t minorAttacks = blackAttackTable->attackTables[bishop] | blackAttackTable->attackTables[knight];
+
+				if(minorAttacks & BIT64(promotionField)) {
+					coverage = coverage-15;
+				}
+
+				if(blackAttackTable->attackTables[rook] & BIT64(promotionField)) {
+					coverage = coverage-10;
+				}
+
+				if(blackAttackTable->attackTables[queen] & BIT64(promotionField)) {
+					coverage = coverage-5;
+				}
+			}
+#endif*/
+
+			eval  					 = eval-kingToPromotionFieldDistance[distToPromotion][kingDist];
+
+
 		}
 	}
 	uint64_t blackPawnBuffer = blackPawns;
 	while(blackPawnBuffer){
 		uint16_t field = popLSB(blackPawnBuffer);
 		if((passedPawnMasks[black][field] & whitePawns) == 0) {
-			eval = eval-passedPawnEvalValues[black][field];
-			uint16_t promotionField = FILE(field);
+
+			uint16_t promotionField  = FILE(field);
 			uint16_t distToPromotion = ROW(field);
 			uint16_t kingDist        = distBetweenFields(promotionField, whiteKing);
-			eval  = eval+kingToPromotionFieldDistance[distToPromotion][kingDist];
+
+			if(distToPromotion <= 2) {
+				*untaperedEval = *untaperedEval-7*passedPawnEvalValues[black][field];
+			} else {
+				eval = eval-passedPawnEvalValues[black][field];
+			}
+
+		/*	#ifdef EXPERIMENTAL
+			if(distToPromotion < 3) {
+				if(blackAttackTable->attackTables[bishop] & BIT64(promotionField)) {
+					coverage = coverage-15;
+				}
+
+				uint64_t minorAttacks = whiteAttackTable->attackTables[bishop] | whiteAttackTable->attackTables[knight];
+
+				if(minorAttacks & BIT64(promotionField)) {
+					coverage = coverage+15;
+				}
+
+				if(whiteAttackTable->attackTables[rook] & BIT64(promotionField)) {
+					coverage = coverage+10;
+				}
+
+				if(whiteAttackTable->attackTables[queen] & BIT64(promotionField)) {
+					coverage = coverage+5;
+				}
+
+			}
+			#endif*/
+
+				eval  					 = eval+kingToPromotionFieldDistance[distToPromotion][kingDist];
 
 		}
 	}
 
-
-	return 7*eval;
+	return 7*eval+coverage;
 
 }
 
@@ -117,7 +176,7 @@ int32_t staticPawnEval(uint64_t pawns, playerColor color, uint8_t* pawnColumnOcc
 
 extern evaluationResult result;
 
-int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, const evalParameters* evalPars) {
+int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, const evalParameters* evalPars, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable) {
 
 	uint32_t eval=0;
 	uint64_t whitePawns = position->pieceTables[white][pawn];
@@ -126,25 +185,32 @@ int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupan
 	int16_t staticPawn = staticPawnEval(whitePawns, white, pawnColumnOccupancy,&evalPars->staticPawnParameters)+staticPawnEval(blackPawns, black,  pawnColumnOccupancy+1,&evalPars->staticPawnParameters);
 	eval = eval+staticPawn;
 	result.staticPawn = staticPawn;
-	int32_t passedPawns = passedPawnEval(whitePawns, blackPawns, findLSB(position->pieceTables[black][king]), findLSB(position->pieceTables[white][king]));
-	passedPawns = ((256-taperingValues[phase])*passedPawns)/256;
-	eval = eval+passedPawns;
-	result.passedPawn = passedPawns;
+	int32_t untapered = 0;
+	int32_t passedPawns = passedPawnEval(&untapered, whitePawns, blackPawns, findLSB(position->pieceTables[black][king]), findLSB(position->pieceTables[white][king]), evalPars, whiteAttackTable, blackAttackTable);
+/*#ifdef EXPERIMENTAL
+	int16_t passedPawnPhase = std::max(phase-10, 0);
+#else*/
 
+//#endif
+	int16_t passedPawnPhase = std::max((int32_t) phase, 0);
+	passedPawns = ((256-taperingValues[passedPawnPhase])*passedPawns)/256;
+	eval = eval+passedPawns+untapered;
+	result.passedPawn = passedPawns+untapered;
 
-/*#ifdef EXPERIMENTAL  looks like very small gain (~ 5-6 elo), but I was hoping for more...
+
+#ifdef NDEF //EXPERIMENTAL  //looks like very small gain (~ 5-6 elo), but I was hoping for more...
 	//backwards pawn
-	//int64_t wpawns = position->pieceTables[white][pawn];
+	/*int64_t wpawns = position->pieceTables[white][pawn];
 
-	//uint64_t wtakesRight =  wpawns << 9 & NOTFILEA;
-	//uint64_t wtakesLeft =   wpawns << 7 & NOTFILEH;
-	//uint64_t wtakes     = wtakesLeft | wtakesRight;
+	uint64_t wtakesRight =  wpawns << 9 & NOTFILEA;
+	uint64_t wtakesLeft =   wpawns << 7 & NOTFILEH;
+	uint64_t wtakes     = wtakesLeft | wtakesRight;
 
-	//uint64_t bpawns = position->pieceTables[black][pawn];
+	uint64_t bpawns = position->pieceTables[black][pawn];
 
-	//uint64_t btakesRight =  bpawns >> 7  & NOTFILEA;
-	//uint64_t btakesLeft  =  bpawns >> 9  & NOTFILEH;
-	//uint64_t btakes      =  btakesLeft | btakesRight;
+	uint64_t btakesRight =  bpawns >> 7  & NOTFILEA;
+	uint64_t btakesLeft  =  bpawns >> 9  & NOTFILEH;
+	uint64_t btakes      =  btakesLeft | btakesRight;*/
 
 	uint64_t buffer = position->pieceTables[white][pawn];
 	while(buffer){
@@ -152,22 +218,22 @@ int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupan
 		if(!(passedPawnMasks[black][n] & (position->pieceTables[white][pawn] & ~(1UL << (n-8)))) && !(position->pieceTables[black][pawn] & files[FILE(n)])){
 			eval = eval-15;
 
-			//if(btakes & BIT64(n)){
-			//	eval = eval-10;
-			//}
+			/*if(btakes & BIT64(n)){
+				eval = eval-10;
+			}*/
 		}
 	}
 
 	buffer = position->pieceTables[black][pawn];
 	while(buffer){
 		uint16_t n = popLSB(buffer)-8;
-		if(!(passedPawnMasks[white][n] & (position->pieceTables[black][pawn] & ~(1UL << (n+8)))) && !(position->pieceTables[black][pawn] & files[FILE(n)])){
+		if(!(passedPawnMasks[white][n] & (position->pieceTables[black][pawn] & ~(1UL << (n+8)))) && !(position->pieceTables[white][pawn] & files[FILE(n)])){
 			eval = eval+15;
-			//if(wtakes & BIT64(n)){
-			//	eval = eval+10;
-			//}
+			/*if(wtakes & BIT64(n)){
+				eval = eval+10;
+			}*/
 		}
 	}
-#endif*/
+#endif
 	return eval;
 }
diff --git a/Cpp/src/parameters/externalParamReader.cpp b/Cpp/src/parameters/externalParamReader.cpp
index d79e048..ec9bc97 100644
--- a/Cpp/src/parameters/externalParamReader.cpp
+++ b/Cpp/src/parameters/externalParamReader.cpp
@@ -25,6 +25,10 @@ parameterReader::parameterReader() {
 	parameterFields.insert(std::make_pair("isolateddoublepawns", 7));
 	parameterFields.insert(std::make_pair("nonisolateddoublepawns", 8));
 	parameterFields.insert(std::make_pair("isolatedpawns", 9));
+	parameterFields.insert(std::make_pair("selfopenfiletoking", 10));
+	parameterFields.insert(std::make_pair("selfopenfilenexttoking", 11));
+	parameterFields.insert(std::make_pair("opponentopenfiletoking", 12));
+	parameterFields.insert(std::make_pair("opponentopenfilenexttoking", 13));
 }
 
 
diff --git a/Cpp/src/parameters/parameters.cpp b/Cpp/src/parameters/parameters.cpp
index 3424b18..c16d1d7 100644
--- a/Cpp/src/parameters/parameters.cpp
+++ b/Cpp/src/parameters/parameters.cpp
@@ -27,6 +27,10 @@ void paramDefaultInit(preParameters* par) {
 	par->isolatedpawns  = ISOLATEDPAWN;
 	par->isolateddoublepawns = ISOLATEDDOUBLEPAWN;
 	par->nonisolateddoublepawns = NONISOLATEDDOUBLEPAWN;
+	par->opponentopenfilenexttoking = OPPONENTOPENFILENEXTTOKING;
+	par->opponentopenfiletoking     = OPPONENTOPENFILETOKING;
+	par->selfopenfilenexttoking   	= SELFOPENFILENEXTTOKING;
+	par->selfopenfiletoking     	= SELFOPENFILETOKING;
 }
 
 staticPawnEvalParameters  initializeStaticPawnParameters(const preParameters par) {
@@ -38,6 +42,15 @@ staticPawnEvalParameters  initializeStaticPawnParameters(const preParameters par
 }
 
 
+kingSafetyEvalParameters initializeKingSafetyParameters(const preParameters par) {
+	kingSafetyEvalParameters ret;
+	ret.opponentopenfilenexttoking = par.opponentopenfilenexttoking;
+	ret.opponentopenfiletoking     = par.opponentopenfiletoking;
+	ret.selfopenfilenexttoking     = par.selfopenfilenexttoking;
+	ret.selfopenfiletoking         = par.selfopenfiletoking;
+	return ret;
+}
+
 void initializeDependentParameters(preParameters par) {
 	evaluationParameters.figureValues[pawn] 		= par.pawnValue;
 	evaluationParameters.figureValues[knight] 		= par.knightValue;
@@ -49,6 +62,7 @@ void initializeDependentParameters(preParameters par) {
 	evaluationParameters.bishoppair                 = par.bishoppair;
 	evaluationParameters.rookOnOpenFile				= par.rookonopenfile;
 	evaluationParameters.staticPawnParameters       = initializeStaticPawnParameters(par);
+	evaluationParameters.kingSafetyParameters       = initializeKingSafetyParameters(par);
 }
 
 void initializeParameters() {
diff --git a/Cpp/src/parameters/parameters.hpp b/Cpp/src/parameters/parameters.hpp
index 697cf78..ecb232e 100644
--- a/Cpp/src/parameters/parameters.hpp
+++ b/Cpp/src/parameters/parameters.hpp
@@ -15,11 +15,19 @@ struct staticPawnEvalParameters{
 	int16_t nonIsolatedDoublePawn;
 };
 
+struct kingSafetyEvalParameters{
+	int16_t selfopenfiletoking;
+	int16_t selfopenfilenexttoking;
+	int16_t opponentopenfiletoking;
+	int16_t opponentopenfilenexttoking;
+};
+
 struct evalParameters{
 	int16_t figureValues[7];
 	int16_t bishoppair;
 	int16_t rookOnOpenFile;
 	staticPawnEvalParameters staticPawnParameters;
+	kingSafetyEvalParameters kingSafetyParameters;
 };
 
 extern evalParameters evaluationParameters;
diff --git a/Cpp/src/parameters/parametersPrivate.hpp b/Cpp/src/parameters/parametersPrivate.hpp
index 4aab104..d7415b4 100644
--- a/Cpp/src/parameters/parametersPrivate.hpp
+++ b/Cpp/src/parameters/parametersPrivate.hpp
@@ -20,6 +20,10 @@ struct preParameters{
 	int64_t isolateddoublepawns;
 	int64_t nonisolateddoublepawns;
 	int64_t isolatedpawns;
+	int64_t selfopenfiletoking;
+	int64_t selfopenfilenexttoking;
+	int64_t opponentopenfiletoking;
+	int64_t opponentopenfilenexttoking;
 };
 
 
diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
index e331694..7a5b209 100644
--- a/Cpp/src/userInterface/UIfunctions.cpp
+++ b/Cpp/src/userInterface/UIfunctions.cpp
@@ -704,7 +704,7 @@ bool checkAndMakeMove(chessPosition& position, std::string move){
 }
 
 void runPerformanceTests(){
-	for(int depth = 3; depth < 12; depth++){
+	for(int depth = 3; depth < 11; depth++){
 		std::ifstream file;
 		file.open("chesspositionsfixed.txt");
 		std::string line;
diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
index 00e24b1..a05667f 100644
--- a/chessGui/.idea/workspace.xml
+++ b/chessGui/.idea/workspace.xml
@@ -59,11 +59,21 @@
   </component>
   <component name="FileEditorManager">
     <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
+      <file leaf-file-name="params.txt" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/params1/params.txt">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="135">
+              <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
+              <folding />
+            </state>
+          </provider>
+        </entry>
+      </file>
       <file leaf-file-name="uciEngineHandler.java" pinned="false" current-in-tab="false">
         <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="555">
-              <caret line="38" column="0" selection-start-line="38" selection-start-column="0" selection-end-line="38" selection-end-column="0" />
+            <state relative-caret-position="330">
+              <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
               <folding />
             </state>
           </provider>
@@ -72,38 +82,38 @@
       <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="2025">
-              <caret line="145" column="0" selection-start-line="145" selection-start-column="0" selection-end-line="145" selection-end-column="0" />
+            <state relative-caret-position="1230">
+              <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
               <folding />
             </state>
           </provider>
         </entry>
       </file>
-      <file leaf-file-name="Main.java" pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
+      <file leaf-file-name="Core.java" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/core/Core.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="735">
-              <caret line="65" column="99" selection-start-line="65" selection-start-column="99" selection-end-line="65" selection-end-column="99" />
+            <state relative-caret-position="195">
+              <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
               <folding />
             </state>
           </provider>
         </entry>
       </file>
-      <file leaf-file-name="params.txt" pinned="false" current-in-tab="true">
-        <entry file="file://$PROJECT_DIR$/params2/params.txt">
+      <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
+        <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="75">
-              <caret line="5" column="0" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
+            <state relative-caret-position="134">
+              <caret line="71" column="26" selection-start-line="71" selection-start-column="26" selection-end-line="71" selection-end-column="26" />
               <folding />
             </state>
           </provider>
         </entry>
       </file>
       <file leaf-file-name="params.txt" pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/params1/params.txt">
+        <entry file="file://$PROJECT_DIR$/params2/params.txt">
           <provider selected="true" editor-type-id="text-editor">
             <state relative-caret-position="0">
-              <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
+              <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
               <folding />
             </state>
           </provider>
@@ -174,11 +184,11 @@
         <option value="$PROJECT_DIR$/src/core/events/EvalDebugEvent.java" />
         <option value="$PROJECT_DIR$/src/core/Core.java" />
         <option value="$PROJECT_DIR$/src/PlayingGUI/PlayingController.java" />
-        <option value="$PROJECT_DIR$/params2/params.txt" />
         <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
+        <option value="$PROJECT_DIR$/params2/params.txt" />
+        <option value="$PROJECT_DIR$/params1/params.txt" />
         <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
         <option value="$PROJECT_DIR$/src/sample/Main.java" />
-        <option value="$PROJECT_DIR$/params1/params.txt" />
       </list>
     </option>
   </component>
@@ -191,6 +201,7 @@
   </component>
   <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
   <component name="ProjectFrameBounds">
+    <option name="x" value="1920" />
     <option name="y" value="24" />
     <option name="width" value="1920" />
     <option name="height" value="1056" />
@@ -225,6 +236,7 @@
       <foldersAlwaysOnTop value="true" />
     </navigator>
     <panes>
+      <pane id="Scratches" />
       <pane id="ProjectPane">
         <subPane>
           <PATH>
@@ -267,6 +279,24 @@
               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
             </PATH_ELEMENT>
             <PATH_ELEMENT>
+              <option name="myItemId" value="src" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="uciClient" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+          </PATH>
+          <PATH>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="chessGui" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="chessGui" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
               <option name="myItemId" value="params2" />
               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
             </PATH_ELEMENT>
@@ -289,7 +319,6 @@
       </pane>
       <pane id="PackagesPane" />
       <pane id="Scope" />
-      <pane id="Scratches" />
     </panes>
   </component>
   <component name="PropertiesComponent">
@@ -570,13 +599,13 @@
     <option name="totallyTimeSpent" value="1302000" />
   </component>
   <component name="ToolWindowManager">
-    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
+    <frame x="1920" y="24" width="1920" height="1056" extended-state="6" />
     <editor active="false" />
     <layout>
       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
       <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
-      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
+      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.060020346" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
@@ -597,7 +626,7 @@
       <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
       <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
-      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.5045778" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
+      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
       <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
@@ -625,26 +654,42 @@
     <option name="FILTER_TARGETS" value="false" />
   </component>
   <component name="editorHistoryManager">
+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
     <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="555">
-          <caret line="38" column="0" selection-start-line="38" selection-start-column="0" selection-end-line="38" selection-end-column="0" />
+        <state relative-caret-position="330">
+          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
           <folding />
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="2025">
-          <caret line="145" column="0" selection-start-line="145" selection-start-column="0" selection-end-line="145" selection-end-column="0" />
+        <state relative-caret-position="1230">
+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
           <folding />
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="735">
-          <caret line="65" column="99" selection-start-line="65" selection-start-column="99" selection-end-line="65" selection-end-column="99" />
+        <state relative-caret-position="825">
+          <caret line="71" column="26" selection-start-line="71" selection-start-column="26" selection-end-line="71" selection-end-column="26" />
           <folding />
         </state>
       </provider>
@@ -659,8 +704,56 @@
     </entry>
     <entry file="file://$PROJECT_DIR$/params1/params.txt">
       <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="330">
+          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1230">
+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
         <state relative-caret-position="0">
-          <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
           <folding />
         </state>
       </provider>
@@ -675,31 +768,185 @@
     </entry>
     <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
       <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1230">
+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="915">
+          <caret line="77" column="36" selection-start-line="77" selection-start-column="36" selection-end-line="77" selection-end-column="36" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
         <state relative-caret-position="0">
           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
           <folding />
         </state>
       </provider>
     </entry>
+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="345">
+          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1230">
+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="510">
-          <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="330">
+          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1230">
+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
           <folding />
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/src/core/Core.java">
       <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
+      <provider selected="true" editor-type-id="text-editor">
         <state relative-caret-position="1035">
-          <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
+          <caret line="85" column="35" selection-start-line="85" selection-start-column="35" selection-end-line="85" selection-end-column="35" />
+          <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingController.java">
+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="1290">
-          <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="345">
+          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1230">
+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
+          <folding />
         </state>
       </provider>
     </entry>
@@ -711,34 +958,74 @@
         </state>
       </provider>
     </entry>
+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1605">
+          <caret line="117" column="26" selection-start-line="117" selection-start-column="26" selection-end-line="117" selection-end-column="26" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="735">
-          <caret line="65" column="99" selection-start-line="65" selection-start-column="99" selection-end-line="65" selection-end-column="99" />
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
           <folding />
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="2025">
-          <caret line="145" column="0" selection-start-line="145" selection-start-column="0" selection-end-line="145" selection-end-column="0" />
+        <state relative-caret-position="1230">
+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
           <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="0">
-          <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
+        <state relative-caret-position="330">
+          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
           <folding />
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/params2/params.txt">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="75">
-          <caret line="5" column="0" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
+        <state relative-caret-position="0">
+          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="134">
+          <caret line="71" column="26" selection-start-line="71" selection-start-column="26" selection-end-line="71" selection-end-column="26" />
           <folding />
         </state>
       </provider>
diff --git a/chessGui/params1/params.txt b/chessGui/params1/params.txt
index 2228ca3..0572c93 100644
--- a/chessGui/params1/params.txt
+++ b/chessGui/params1/params.txt
@@ -1,6 +1,11 @@
-queenvalue 900
+queenvalue 975
 pawnvalue  100
 rookvalue  500
 knightvalue 320
 bishopvalue 330
+bishoppair  			50
+rookonopenfile 			15
+isolateddoublepawns 	-50
+nonisolateddoublepawns 	-20
+isolatedpawns   		-10
 
diff --git a/chessGui/params2/params.txt b/chessGui/params2/params.txt
index c4c72b3..8395449 100644
--- a/chessGui/params2/params.txt
+++ b/chessGui/params2/params.txt
@@ -3,3 +3,8 @@ pawnvalue  100
 rookvalue  500
 knightvalue 320
 bishopvalue 330
+bishoppair  			50
+rookonopenfile 			15
+isolateddoublepawns 	-50
+nonisolateddoublepawns 	-20
+isolatedpawns   		-10
\ No newline at end of file
diff --git a/chessGui/src/sample/Main.java b/chessGui/src/sample/Main.java
index 7af4e58..ebf0f54 100644
--- a/chessGui/src/sample/Main.java
+++ b/chessGui/src/sample/Main.java
@@ -56,23 +56,58 @@ public class Main extends Application {
             System.out.println(st);
         }*/
 
+       UciProcessing processesList[] = new UciProcessing[3];
+
+        for(int ind=0; ind < 3; ind++) {
+            processesList[ind] = new UciProcessing("/home/vabi/code/chessEngine/Cpp/uciChallengeRelease/Vabi", "params1", "/home/vabi/code/chessEngine/Cpp/uciDefenderRelease/Vabi", "params2", 10000);
+            //final Core cor = new Core(primaryStage);
+            final int index = ind;
+            Thread.sleep(1523);
+            Runnable r = new Runnable() {
+                @Override
+                public void run() {
+                    try {
+                        double res =  processesList[index].play();
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
 
-        final Core cor = new Core(primaryStage);
-        Runnable r = new Runnable() {
-            @Override
-            public void run() {
-                UciProcessing matchup = null;
-                try {
-                    matchup = new UciProcessing("/home/vabi/code/chessEngine/Cpp/uciDefenderRelease/Vabi", "params1", "/home/vabi/code/chessEngine/Cpp/uciDefenderRelease/Vabi", "params2", 20000);
-                    double res =  matchup.play();
-                } catch (IOException e) {
-                    e.printStackTrace();
                 }
+            };
+
+            (new Thread(r)).start();
+
+        }
+
+        int wins = 0;
+        int draws = 0;
+        int losses = 0;
+
+        while(wins+draws+losses < 30000) {
 
+            wins = 0;
+            draws = 0;
+            losses = 0;
+
+            for(int ind=0; ind < 3; ind++) {
+                int[] res = processesList[ind].getCurrentResult();
+                wins = wins+res[0];
+                draws = draws+res[1];
+                losses = losses+res[2];
             }
-        };
-        System.out.println("Starting...");
-        (new Thread(r)).start();
+
+            double numGames = wins+draws+losses;
+            double total = wins+0.5*((double) draws);
+            double elo_diff = 400*(Math.log10(1-total/((double) numGames))-Math.log10(total/(double) numGames));
+            System.out.println(" ");
+            System.out.println("Total games "+numGames);
+            System.out.println("Wins "+wins+ " Draws "+draws+ " Losses "+losses);
+            System.out.println("Elo difference is " +elo_diff);
+            System.out.println(" ");
+
+
+            Thread.sleep(10000);
+        }
 
 
 
diff --git a/chessGui/src/uciClient/UciProcessing.java b/chessGui/src/uciClient/UciProcessing.java
index b8c0bb1..8bfb448 100644
--- a/chessGui/src/uciClient/UciProcessing.java
+++ b/chessGui/src/uciClient/UciProcessing.java
@@ -11,6 +11,7 @@ import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  * Created by vabi on 02.10.16.
@@ -28,6 +29,11 @@ public class UciProcessing {
     String engine2;
     String params2;
 
+    AtomicInteger wins = new AtomicInteger(0);
+    AtomicInteger draws = new AtomicInteger(0);
+    AtomicInteger losses = new AtomicInteger(0);
+
+
     int numGames = 0;
     ArrayList<String> openingPositions;
 
@@ -52,6 +58,14 @@ public class UciProcessing {
 
     }
 
+    public int[] getCurrentResult() {
+        int[] ret = new int[3];
+        ret[0] = wins.get();
+        ret[1] = draws.get();
+        ret[2] = losses.get();
+        return ret;
+    }
+
 
     private void readOpeningPositions() throws IOException {
         FileReader fileReader = new FileReader("openingPositions.txt");
@@ -71,9 +85,7 @@ public class UciProcessing {
 
         double total = 0;
 
-        int wins = 0;
-        int draws = 0;
-        int losses = 0;
+
         int index = 0;
         String startPos = " ";
         for(int k=0; k < numGames; k++) {
@@ -88,7 +100,7 @@ public class UciProcessing {
                 }
             }
 
-            System.out.println("Started engines");
+            //System.out.println("Started engines");
             List<String> moves = new ArrayList<>();
             int ret = 0;
             int eval = 0;
@@ -145,28 +157,26 @@ public class UciProcessing {
 
 
             if (ret == 0) {
-                System.out.println("Draw");
-                total = total+0.5;
-                draws++;
+                /*System.out.println("Draw");
+                total = total+0.5;*/
+                draws.incrementAndGet();
             } else if (ret == 1) {
-                System.out.println("Vabi won");
-                total = total+1;
-                wins++;
+               /* System.out.println("Vabi won");
+                total = total+1;*/
+                wins.incrementAndGet();
             } else {
-                System.out.println("Vabi lost");
-                losses++;
+                //System.out.println("Vabi lost");
+                losses.incrementAndGet();
             }
             stockFishHandler.close();
             vabiHandler.close();
-            System.out.println("Wins "+wins + " Draws "+draws+" Losses "+losses);
-            double elo_diff = 400*(Math.log10(1-total/((double) (k+1)))-Math.log10(total/(double) (k+1)));
-            System.out.println("Elo difference is " +elo_diff);
+
         }
 
-        System.out.println("Final result: " + total);
+        /*ystem.out.println("Final result: " + total);
         System.out.println("Wins "+wins + " Draws "+draws+" Losses "+losses);
         double elo_diff = 400*(Math.log10(1-total/((double) numGames))-Math.log10(total/(double) numGames));
-        System.out.println("Elo difference is " +elo_diff);
+        System.out.println("Elo difference is " +elo_diff);*/
         res = total;
         return total;
 
diff --git a/output b/output
deleted file mode 100644
index e69de29..0000000
