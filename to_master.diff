diff --git a/Cpp/.cproject b/Cpp/.cproject
index f3182ef..1882582 100644
--- a/Cpp/.cproject
+++ b/Cpp/.cproject
@@ -313,7 +313,7 @@
 							<builder buildPath="${workspace_loc:/Vabi}/Release" id="cdt.managedbuild.target.gnu.builder.exe.release.2079116869" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.target.gnu.builder.exe.release"/>
 							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1461088385" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
 							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.2040082738" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
-								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.1158817688" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
+								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.1158817688" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.none" valueType="enumerated"/>
 								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.1580316627" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
 								<option id="gnu.cpp.compiler.option.include.paths.1287685795" name="Include paths (-I)" superClass="gnu.cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
 									<listOptionValue builtIn="false" value="/home/vabi/code/chessEngine/Cpp/src"/>
@@ -392,6 +392,8 @@
 									<listOptionValue builtIn="false" value="FIXEDDEPTH"/>
 									<listOptionValue builtIn="false" value="RANDOMEVAL"/>
 								</option>
+								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1843942148" name="Extra warnings (-Wextra)" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="false" valueType="boolean"/>
+								<option id="gnu.cpp.compiler.option.warnings.pedantic.1518046007" name="Pedantic (-pedantic)" superClass="gnu.cpp.compiler.option.warnings.pedantic" useByScannerDiscovery="false" value="false" valueType="boolean"/>
 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.524822445" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
 							</tool>
 							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.1904175036" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
index 12e53ab..8ec31ee 100644
--- a/Cpp/src/Search/negamax.cpp
+++ b/Cpp/src/Search/negamax.cpp
@@ -190,7 +190,6 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 		}
 	}
 
-
 	uint16_t stackCounter = qmvStack.getCounter();
 	vdt_vector<chessMove> moves = qmvStack.getNext();
 	generateAllMoves(&moves, position);
@@ -222,6 +221,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 			}
 		} else {
 
+
+
 			searchCounts.nodes[depth]++;
 			searchCounts.totalNodes++;
 			legalMovesAvailable = true;
@@ -230,8 +231,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
 			uint16_t reduction = 0;
 			uint16_t extension = 0;
-			if((ind > 3) && (moves[ind].captureType == none) && (depth > 2) && !isInCheck) { //LMR
-				if(!check){
+			if(!check && !isInCheck && (moves[ind].captureType == none) && (depth > 2)){
+				if((ind > 3) || foundGoodMove){
 					reduction = 1;
 					if(ind > 15) {
 						reduction = 2;
@@ -239,6 +240,16 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 				}
 			}
 
+			/*if(reduction != fake_reduction){
+				std::cout << "Different reductions found " << reduction << " " << fake_reduction <<std::endl;
+			}*/
+
+			/*if((ind > 3) &&  && (depth > 2) && !isInCheck) { //LMR
+				if(!check){
+
+				}
+			}*/
+
 			if(check && ((ply+depth < max_ply-1) || ((depth == 1) && (ply+depth < max_ply)) )){
 				extension = 1;
 				reduction = 0;
@@ -246,7 +257,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 
 			//PVSearch, currently a small gain for us with the > 3
 			//-------------------------------------------------
-			if((ind > 3) && (depth > 2)) {
+			if(((ind > 3) || foundGoodMove )&& (depth > 2)) {
 				int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &mv);
 				if(value < alpha+1){
 					undoMove(position);
@@ -317,7 +328,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
 	if(foundGoodMove) {
 		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
 	} else { //we failed low, remember as well
-			setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
+		setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
 	}
 
 	qmvStack.release();
diff --git a/Cpp/src/Search/search.hpp b/Cpp/src/Search/search.hpp
index fa070e6..1097bb6 100644
--- a/Cpp/src/Search/search.hpp
+++ b/Cpp/src/Search/search.hpp
@@ -56,12 +56,12 @@ struct searchDebugData{
 
 
 class moveStack {
-	chessMove moveArray[5000];
+	chessMove moveArray[6000];
 	uint16_t counter = 0;
 
 public:
 	vdt_vector<chessMove> getNext(){
-		assert(counter < 33);
+		assert(counter < 35);
 		counter++;
 		//std::cout << counter << std::endl;
 		return vdt_vector<chessMove>(moveArray+(counter-1)*150,150);
diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
index 4953c77..a07d8c0 100644
--- a/Cpp/src/Vabi.cpp
+++ b/Cpp/src/Vabi.cpp
@@ -87,8 +87,8 @@ int main() {
 		latexOutput(line, out);
 	}*/
 
-	/*runPerformanceTests();
-	return 0;*/
+	runPerformanceTests();
+	return 0;
 	/*std::cout << testPerftTestSuite().passed << std::endl;
 	return 0;*/
 	UIloop();
diff --git a/Cpp/src/lib/DebugFunctions/pieceTableCalc.cpp b/Cpp/src/lib/DebugFunctions/pieceTableCalc.cpp
index c2847a8..2132c09 100644
--- a/Cpp/src/lib/DebugFunctions/pieceTableCalc.cpp
+++ b/Cpp/src/lib/DebugFunctions/pieceTableCalc.cpp
@@ -37,12 +37,12 @@ int16_t calcEndGamePieceTableValue(const chessPosition* position) {
 		uint64_t whitePieces = position->pieceTables[white][ind];
 		while(whitePieces){
 			uint16_t field = popLSB(whitePieces);
-			val = val+endGamepieceTables[ind][white][field];
+			val = val+endGamepieceTables[ind][white][field]/2;
 		}
 		uint64_t blackPieces = position->pieceTables[black][ind];
 		while(blackPieces){
 			uint16_t field = popLSB(blackPieces);
-			val = val-endGamepieceTables[ind][black][field];
+			val = val-endGamepieceTables[ind][black][field]/2;
 		}
 	}
 	return val;
diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
index dfbea67..8057ad2 100644
--- a/Cpp/src/lib/Evaluation/evaluation.cpp
+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
@@ -53,8 +53,6 @@ static int32_t rookOpenFiles(const chessPosition* position, uint8_t* pawnOccupan
 
 }
 
-extern int16_t endGamepieceTables[7][2][64];
-
 static uint32_t counter = 0;
 
 int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
@@ -101,7 +99,6 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
 		return evalsigned;
 	}
 
-
 	uint8_t pawnColumnOccupancy[2];
 	eval = eval+pawnEvaluation(position, pawnColumnOccupancy, phase);
 	int16_t mobilityScore = 0;
@@ -145,6 +142,23 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
 		eval = eval-10;
 	}
 
+/*#ifdef EXPERIMENTAL
+	//connected Rooks
+	//-----------------
+	uint64_t whiteRookAttack = whiteAttackTable.attackTables[rook];
+	uint64_t whiteRooks      = position->pieceTables[white][rook];
+	if(whiteRookAttack & whiteRooks) {
+		eval = eval+10;
+	}
+	uint64_t blackRookAttack = blackAttackTable.attackTables[rook];
+	uint64_t blackRooks      = position->pieceTables[black][rook];
+	if(blackRookAttack & blackRooks) {
+		eval = eval-10;
+	}
+
+#endif*/
+
+
 #ifdef RANDOMEVAL
 	eval = eval+(rand() & 7)-3; //TODO: how is this performance-wise?
 #endif
diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
index a7b750c..c65a8af 100644
--- a/Cpp/src/userInterface/UImainLoop.cpp
+++ b/Cpp/src/userInterface/UImainLoop.cpp
@@ -92,7 +92,6 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
 		try{
 			chessMove localBestMove;
 			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
-
 			if(doAspiration) {
 				if ((*eval <= alpha) || (*eval >= beta)) {
 					//std::cout << "Aspiration window search failed, researching..." <<std::endl;
diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
index 046b6ff..9f8311c 100644
--- a/chessGui/.idea/workspace.xml
+++ b/chessGui/.idea/workspace.xml
@@ -95,8 +95,8 @@
       <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="510">
-              <caret line="47" column="168" selection-start-line="47" selection-start-column="168" selection-end-line="47" selection-end-column="168" />
+            <state relative-caret-position="165">
+              <caret line="24" column="18" selection-start-line="24" selection-start-column="18" selection-end-line="24" selection-end-column="18" />
               <folding />
             </state>
           </provider>
@@ -269,6 +269,7 @@
       <foldersAlwaysOnTop value="true" />
     </navigator>
     <panes>
+      <pane id="PackagesPane" />
       <pane id="ProjectPane">
         <subPane>
           <PATH>
@@ -321,9 +322,8 @@
           </PATH>
         </subPane>
       </pane>
-      <pane id="Scratches" />
       <pane id="Scope" />
-      <pane id="PackagesPane" />
+      <pane id="Scratches" />
     </panes>
   </component>
   <component name="PropertiesComponent">
@@ -600,7 +600,7 @@
     <option name="totallyTimeSpent" value="1302000" />
   </component>
   <component name="ToolWindowManager">
-    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
+    <frame x="0" y="24" width="1920" height="1056" extended-state="7" />
     <editor active="false" />
     <layout>
       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
@@ -964,8 +964,8 @@
     </entry>
     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="510">
-          <caret line="47" column="168" selection-start-line="47" selection-start-column="168" selection-end-line="47" selection-end-column="168" />
+        <state relative-caret-position="165">
+          <caret line="24" column="18" selection-start-line="24" selection-start-column="18" selection-end-line="24" selection-end-column="18" />
           <folding />
         </state>
       </provider>
diff --git a/output b/output
deleted file mode 100644
index e69de29..0000000
diff --git a/to_master.diff b/to_master.diff
index ce191aa..0814877 100644
--- a/to_master.diff
+++ b/to_master.diff
@@ -1,444 +0,0 @@
-diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
-index f031a98..84e7db5 100644
---- a/Cpp/src/Search/negamax.cpp
-+++ b/Cpp/src/Search/negamax.cpp
-@@ -127,6 +127,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
- 	}
- 
- 	hashEntry hashVal      = getHashTableEntry(position->zobristHash);
-+
- 	uint32_t zobristHigher = (uint32_t) (position->zobristHash >> 32);
- 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (position->zobristHash & 0xFFFFFFFF)) >> 16);
- 	if(doHashProbe){ //TODO: we should check whether another move leads to 3fold rep draw!
-@@ -154,6 +155,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
- 			}
- 		}
- 	}
-+
- 	//go to quiescence on depth 0
- 	//---------------------------
- 	if(depth <= 0) {
-diff --git a/Cpp/src/Search/quiescence.cpp b/Cpp/src/Search/quiescence.cpp
-index c153d16..b761b0f 100644
---- a/Cpp/src/Search/quiescence.cpp
-+++ b/Cpp/src/Search/quiescence.cpp
-@@ -67,8 +67,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
- 
- 	assert(alpha < beta);
- //#ifdef EXPERIMENTAL
--	uint64_t ownKing = position->pieceTables[position->toMove][king]; //TODO: need to fix move stack first!!
--
-+	uint64_t ownKing = position->pieceTables[position->toMove][king];
- 	if(isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing))) {
- 		chessMove mv;
- 		return negamax(position, 30,31, 1, alpha, beta, &mv, false, false);
-diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
-index d61ad68..4b03588 100644
---- a/Cpp/src/Vabi.cpp
-+++ b/Cpp/src/Vabi.cpp
-@@ -72,12 +72,22 @@ int main() {
- 		}
- 	}
- 
--	srand (time(NULL));
-+	/*srand (time(NULL));
- 	fillZobristHash();
--	/*runPerformanceTests();
--	return 0;*/
--	std::cout << testPerftTestSuite().passed << std::endl;
-+	std::ofstream out("/home/vabi/TeX/Chess/positions.tex");
-+	std::ifstream in("/home/vabi/code/chessEngine/chessGui/openingPositions.txt");
-+	std::string line;
-+	while(getline(in, line)){
-+		if(line.at(0) == '%'){
-+			continue;
-+		}
-+		latexOutput(line, out);
-+	}*/
-+
-+	runPerformanceTests();
- 	return 0;
-+	/*std::cout << testPerftTestSuite().passed << std::endl;
-+	return 0;*/
- 	UIloop();
- 	//00000BNR00000PKQ00000NPR00000N0P000000000000000p0qpN0npnN000000kw0000
- }
-diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
-index f233fa1..e7954dd 100644
---- a/Cpp/src/lib/Defines/pieceTables.cpp
-+++ b/Cpp/src/lib/Defines/pieceTables.cpp
-@@ -292,6 +292,28 @@ int16_t endGamepieceTables[7][2][64] = {
- 				}
- 		},
- 		{
-+#ifdef EXPERIMENTAL
-+				{ //white kings
-+						-100,-70,-40,-25,-25,-40,-70,-100,
-+						-70,-50,-30,-10,-10,-30,-50,-70,
-+						-40,-30,-10, 10, 10,-10,-30,-40,
-+						-25,-10, 10, 30, 30, 10,-10,-25,
-+						-25,-10, 10, 30, 30, 10,-10,-25,
-+						-40,-30,-10, 10, 10,-10,-30,-40,
-+						-70,-50,-30,-10,-10,-30,-50,-70,
-+						-100,-70,-40,-25,-25,-40,-70,-100,
-+				},
-+				{ //black kings
-+						-100,-70,-40,-25,-25,-40,-70,-100,
-+						-70,-50,-30,-10,-10,-30,-50,-70,
-+						-40,-30,-10, 10, 10,-10,-30,-40,
-+						-25,-10, 10, 30, 30, 10,-10,-25,
-+						-25,-10, 10, 30, 30, 10,-10,-25,
-+						-40,-30,-10, 10, 10,-10,-30,-40,
-+						-70,-50,-30,-10,-10,-30,-50,-70,
-+						-100,-70,-40,-25,-25,-40,-70,-100,
-+				}
-+#else
- 				{ //white kings
- 						-50,-40,-30,-25,-25,-30,-40,-50,
- 						-40,-30,-20,-10,-10,-20,-30,-40,
-@@ -312,6 +334,7 @@ int16_t endGamepieceTables[7][2][64] = {
- 						-40,-30,-20,-10,-10,-20,-30,-40,
- 						-50,-40,-30,-25,-25,-30,-40,-50
- 				}
-+#endif
- 
- 		},
- 		{			//non-captures
-diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
-index b419102..b61e7ca 100644
---- a/Cpp/src/lib/Evaluation/evaluation.cpp
-+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
-@@ -13,13 +13,30 @@
- #include <stdlib.h>     /* srand, rand */
- #include <lib/Attacks/attacks.hpp>
- #include <lib/bitfiddling.h>
--
-+#include <userInterface/UIlayer.hpp>
-+#include <iostream>
-+#include <fstream>
- evaluationResult result;
- 
- evaluationResult getEvaluationResult(){
- 	return result;
- }
- 
-+std::ofstream out("/home/vabi/TeX/Chess/positions.tex");
-+
-+#ifdef EXPERIMENTAL
-+uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
-+						       	 0,  0,  0,  0,  0,  0,  0,  0,
-+								0, 2, 7, 11, 14, 19, 24, 29,
-+								33, 37, 41, 48, 54, 60, 65, 70,
-+								75, 80,86,92,97,102,108,112,
-+							   118,124,129,134,140,145,150,155,
-+							   161,166,173,178,183,189,194,20,
-+							   206,212,221,230,236,242,248,254,
-+							   256,256,256,256,256,256,256,256,
-+							   256,256,256,256,256,256,256,256,256
-+};
-+#else
- uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
- 						       	 0,  0,  0,  0,  0,  0,  0,  5,
- 								10, 15, 20, 25, 30, 35, 40, 45,
-@@ -31,7 +48,7 @@ uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
- 							   256,256,256,256,256,256,256,256,
- 							   256,256,256,256,256,256,256,256,256
- };
--
-+#endif
- static int32_t rookOpenFiles(const chessPosition* position, uint8_t* pawnOccupancy) {
- 	int32_t ret = 0;
- 
-@@ -51,6 +68,8 @@ static int32_t rookOpenFiles(const chessPosition* position, uint8_t* pawnOccupan
- 
- extern int16_t endGamepieceTables[7][2][64];
- 
-+//static uint32_t counter = 0;
-+
- int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
- 
- 
-@@ -138,6 +157,12 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
- #ifdef RANDOMEVAL
- 	eval = eval+(rand() & 7)-3; //TODO: how is this performance-wise?
- #endif
-+	/*counter++;
-+	if(counter > 500000){
-+		counter = 0;
-+		latexOutput(chessPositionToFenString(*position, false), out);
-+	}*/
-+
- 	return (1-2*position->toMove)*eval;
- 
- }
-diff --git a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
-index e201a27..fdc99fc 100644
---- a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
-+++ b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
-@@ -15,11 +15,10 @@ extern uint64_t files[];
- extern uint64_t  passedPawnMasks[2][64];
- extern uint16_t taperingValues[81];
- 
--static short const passedPawnEvalValues[2][64] = {{ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 9, 9, 9, 9, 9, 9, 9, 9, 13, 13, 13, 13, 13, 13, 13, 13,0,0,0,0,0,0,0,0 },
-+static int16_t const passedPawnEvalValues[2][64] = {{ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 9, 9, 9, 9, 9, 9, 9, 9, 13, 13, 13, 13, 13, 13, 13, 13,0,0,0,0,0,0,0,0 },
- { 0, 0, 0, 0, 0, 0, 0, 0, 13, 13, 13, 13, 13, 13, 13, 13, 9, 9, 9, 9, 9, 9, 9, 9, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,0,0,0,0,0,0,0,0 }};
- 
- 
--
- int32_t passedPawnEval(uint64_t whitePawns, uint64_t blackPawns) {
- 
- 	int32_t eval = 0;
-diff --git a/Cpp/src/lib/moveMaking/moveMaking.cpp b/Cpp/src/lib/moveMaking/moveMaking.cpp
-index b66eb47..8842131 100644
---- a/Cpp/src/lib/moveMaking/moveMaking.cpp
-+++ b/Cpp/src/lib/moveMaking/moveMaking.cpp
-@@ -10,6 +10,7 @@
- #include <iostream>
- #include <lib/DebugFunctions/debugFunctions.hpp>
- #include <hashTables/hashTables.hpp>
-+#include <assert.h>
- 
- extern int16_t figureValues[];
- extern int32_t completePieceTables[7][2][64];
-@@ -29,6 +30,11 @@ void makeNullMove(chessPosition* position){
- 	position->zobristHash = position->zobristHash^movingSideHash[0];
- 	position->toMove = (playerColor) (1-position->toMove);
- 	chessMove move;
-+	/*move.move = 0;
-+
-+	if(position->madeMoves.length > 0) {
-+		assert(position->madeMoves[position->madeMoves.length-1].move != 0);
-+	}*/
- 	position->madeMoves.add(&move);
- }
- 
-diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
-index 5217532..716d72a 100644
---- a/Cpp/src/userInterface/UIfunctions.cpp
-+++ b/Cpp/src/userInterface/UIfunctions.cpp
-@@ -19,11 +19,46 @@
- #include <lib/moveMaking/moveMaking.hpp>
- #include <lib/moveGeneration/moveGeneration.hpp>
- #include <algorithm>
--
-+#include <lib/Evaluation/evaluation.hpp>
- static char figureNames[2][6] = {{'P', 'N', 'B', 'R', 'Q', 'K'},
- 		{'p', 'n', 'b', 'r', 'q', 'k'},
- };
- 
-+void putTableLine(std::ostream& out, int16_t value, std::string name) {
-+	out << name << " & " << value << "\\\\ \\hline" << std::endl;
-+}
-+
-+void latexOutput(std::string FEN, std::ostream& out) {
-+	chessPosition pos = FENtoChessPosition(FEN);
-+	int16_t eval = evaluation(&pos, -32000, 32000);
-+	evaluationResult ev = getEvaluationResult();
-+	int16_t figureVal = calcFigureEvaluation(&pos);
-+
-+	out << "\\begin{figure}" << std::endl;
-+	out << "\\newgame" << std::endl;
-+	out << "\\fenboard{"+FEN+"}" << std::endl;
-+
-+	out << "\\begin{tabular}{ll}" << std::endl;
-+	out << "\\raisebox{-.5\\height}{\\showboard}&   \\begin{tabular}{ l | c  }" << std::endl;
-+
-+	putTableLine(out, eval, "Total");
-+	putTableLine(out, figureVal, "Material");
-+	putTableLine(out, ev.PSQ-figureVal, "Piece Square Tables");
-+	putTableLine(out, ev.mobility, "Mobility");
-+	putTableLine(out, ev.kingSafety, "King Safety");
-+	putTableLine(out, ev.bishoppair, "Bishop pair");
-+	putTableLine(out, ev.staticPawn, "Pawn structure");
-+	putTableLine(out, ev.passedPawn, "Passed pawns");
-+	putTableLine(out, ev.rookOpenFiles, "Rooks on open files");
-+	out << "\\end{tabular}" << std::endl;
-+	out << "\\end{tabular}" << std::endl;
-+	out << "\\end{figure}" << std::endl;
-+
-+
-+
-+
-+}
-+
- 
- uint8_t searchId = 0;
- 
-@@ -125,7 +160,7 @@ void outputTestResults() { //TODO: integrate properly so that we do not need the
- 
- }
- 
--std::string chessPositionToString(chessPosition position) {
-+std::string chessPositionToString(const chessPosition position) {
- 	//Not performance-critical
- 	//---------------------------
- 	std::string ret = "";
-@@ -185,7 +220,7 @@ std::string chessPositionToString(chessPosition position) {
- 	return ret;
- }
- 
--std::string chessPositionToOutputString(chessPosition position){
-+std::string chessPositionToOutputString(const chessPosition position){
- 	//Not performance-critical
- 	//---------------------------
- 	std::string ret = "";
-@@ -529,7 +564,7 @@ uint64_t stringToMove(std::string mv){
- }
- 
- 
--std::string chessPositionToFenString(chessPosition position, bool EPD){
-+std::string chessPositionToFenString(const chessPosition position, bool EPD){
- 
- 	std::string str = chessPositionToString(position);
- 	std::string FEN = "";
-diff --git a/Cpp/src/userInterface/UIlayer.hpp b/Cpp/src/userInterface/UIlayer.hpp
-index 24da972..821e444 100644
---- a/Cpp/src/userInterface/UIlayer.hpp
-+++ b/Cpp/src/userInterface/UIlayer.hpp
-@@ -12,8 +12,8 @@
- #include <userInterface/interfaceStructs.hpp>
- void UIloop();
- uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maximal_time, uint32_t* nodeCount, uint64_t* mtime, int32_t* eval, bool doAspiration, searchParameters params);
--std::string chessPositionToString(chessPosition position);
--std::string chessPositionToOutputString(chessPosition position);
-+std::string chessPositionToString(const chessPosition position);
-+std::string chessPositionToOutputString(const chessPosition position);
- chessPosition stringToChessPosition(std::string strposition);
- chessPosition FENtoChessPosition(std::string fen);
- std::string chessPositionToFenString(chessPosition position, bool EPD=false);
-@@ -22,5 +22,6 @@ uint64_t stringToMove(std::string mv);
- bool checkAndMakeMove(chessPosition& position, std::string move);
- void runPerformanceTests();
- uint64_t get_timestamp();
-+void latexOutput(std::string FEN, std::ostream& out);
- std::string moveToExtendedString(chessMove move, chessPosition position);
- #endif /* USERINTERFACE_UILAYER_HPP_ */
-diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
-index 49f2d2a..7151040 100644
---- a/chessGui/.idea/workspace.xml
-+++ b/chessGui/.idea/workspace.xml
-@@ -95,8 +95,8 @@
-       <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
-         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
-           <provider selected="true" editor-type-id="text-editor">
--            <state relative-caret-position="315">
--              <caret line="34" column="35" selection-start-line="34" selection-start-column="35" selection-end-line="34" selection-end-column="35" />
-+            <state relative-caret-position="510">
-+              <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
-               <folding />
-             </state>
-           </provider>
-@@ -105,8 +105,8 @@
-       <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
-         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-           <provider selected="true" editor-type-id="text-editor">
--            <state relative-caret-position="2310">
--              <caret line="164" column="59" selection-start-line="164" selection-start-column="59" selection-end-line="164" selection-end-column="59" />
-+            <state relative-caret-position="406">
-+              <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
-               <folding />
-             </state>
-           </provider>
-@@ -228,8 +228,8 @@
-         <option value="$PROJECT_DIR$/src/core/Core.java" />
-         <option value="$PROJECT_DIR$/src/PlayingGUI/PlayingController.java" />
-         <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
--        <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
-         <option value="$PROJECT_DIR$/src/sample/Main.java" />
-+        <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
-       </list>
-     </option>
-   </component>
-@@ -270,7 +270,7 @@
-     </navigator>
-     <panes>
-       <pane id="Scratches" />
--      <pane id="Scope" />
-+      <pane id="PackagesPane" />
-       <pane id="ProjectPane">
-         <subPane>
-           <PATH>
-@@ -323,7 +323,7 @@
-           </PATH>
-         </subPane>
-       </pane>
--      <pane id="PackagesPane" />
-+      <pane id="Scope" />
-     </panes>
-   </component>
-   <component name="PropertiesComponent">
-@@ -962,22 +962,6 @@
-         </state>
-       </provider>
-     </entry>
--    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
--      <provider selected="true" editor-type-id="text-editor">
--        <state relative-caret-position="315">
--          <caret line="34" column="35" selection-start-line="34" selection-start-column="35" selection-end-line="34" selection-end-column="35" />
--          <folding />
--        </state>
--      </provider>
--    </entry>
--    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
--      <provider selected="true" editor-type-id="text-editor">
--        <state relative-caret-position="2310">
--          <caret line="164" column="59" selection-start-line="164" selection-start-column="59" selection-end-line="164" selection-end-column="59" />
--          <folding />
--        </state>
--      </provider>
--    </entry>
-     <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
-       <provider selected="true" editor-type-id="text-editor">
-         <state relative-caret-position="855">
-@@ -1018,6 +1002,22 @@
-         </state>
-       </provider>
-     </entry>
-+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-+      <provider selected="true" editor-type-id="text-editor">
-+        <state relative-caret-position="406">
-+          <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
-+          <folding />
-+        </state>
-+      </provider>
-+    </entry>
-+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
-+      <provider selected="true" editor-type-id="text-editor">
-+        <state relative-caret-position="510">
-+          <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
-+          <folding />
-+        </state>
-+      </provider>
-+    </entry>
-   </component>
-   <component name="masterDetails">
-     <states>
-diff --git a/chessGui/src/uciClient/UciProcessing.java b/chessGui/src/uciClient/UciProcessing.java
-index 460514f..fe78cc7 100644
---- a/chessGui/src/uciClient/UciProcessing.java
-+++ b/chessGui/src/uciClient/UciProcessing.java
-@@ -103,8 +103,8 @@ public class UciProcessing {
- 
-                 vabiHandler.setPosition(startPos, moves);
-                 String current = vabiHandler.getCurrentPosition();
--                VMPchessPosition position = new VMPchessPosition(new VDTstring(current.getBytes()));
--                //server.send(position, 0);
-+               /* VMPchessPosition position = new VMPchessPosition(new VDTstring(current.getBytes()));
-+                server.send(position, 0);*/
-                 vabiHandler.startSearch();
- 
- 
-@@ -122,8 +122,8 @@ public class UciProcessing {
-                 moves.add(mv[0]);
-                 vabiHandler.setPosition(startPos, moves);
-                 current = vabiHandler.getCurrentPosition();
--                position = new VMPchessPosition(new VDTstring(current.getBytes()));
--               // server.send(position, 0);
-+                /*position = new VMPchessPosition(new VDTstring(current.getBytes()));
-+                server.send(position, 0);*/
-                 //System.out.println(mv[0]);
-                 stockFishHandler.setPosition(startPos, moves);
-                 stockFishHandler.startSearch();
-diff --git a/output b/output
-deleted file mode 100644
-index e69de29..0000000
