diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
index ee4381a..7de96b7 100644
--- a/Cpp/src/Search/moveOrdering.cpp
+++ b/Cpp/src/Search/moveOrdering.cpp
@@ -222,15 +222,15 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
 	mv->sortEval = sortEval;
 }
 
-bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t depth, uint16_t hashedMove) {
+bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove) {
 
 	AttackTable opponentAttackTable = makeAttackTable(position, (playerColor) (1-position->toMove));
 	AttackTable ownAttackTable 		= makeAttackTable(position, position->toMove);
 	bool isInCheck      = ((opponentAttackTable.completeAttackTable & position->pieceTables[position->toMove][king]) != 0);
 	int16_t bestEval = INT16_MIN;
 	uint16_t bestIndex = 0;
-	uint16_t killerMoveA = killerMoves[depth][0];
-	uint16_t killerMoveB = killerMoves[depth][1];
+	uint16_t killerMoveA = killerMoves[ply][0];
+	uint16_t killerMoveB = killerMoves[ply][1];
 	for (uint16_t ind=0; ind < moves->length; ind++) {
 		calcSortEval(position, &(*moves)[ind], &opponentAttackTable, &ownAttackTable, hashedMove, killerMoveA, killerMoveB);
 		if((*moves)[ind].sortEval > bestEval){
diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
index 659ecf0..5804387 100644
--- a/Cpp/src/Search/negamax.cpp
+++ b/Cpp/src/Search/negamax.cpp
@@ -34,7 +34,7 @@ void resetSearchData(){
 }
 
 
-uint16_t killerMoves[20][2];
+uint16_t killerMoves[40][2];
 
 static chessMove buffer[5000];
 
@@ -55,13 +55,16 @@ static inline bool backtrack_position_for_repetition(chessPosition* position) {
 	return false;
 }
 
-static inline bool check_nullmove(chessPosition* position, int16_t depth, int32_t beta){
+static inline bool check_nullmove(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int32_t beta){
 
 
 	if(beta > 10000){ //TODO: more dynamic condition here?
 		return false;
 	}
 
+	/*if(ply > max_ply-2){
+		return false;
+	}*/
 	int32_t eval = evaluation(position, beta-1, beta);
 
 	if(eval < beta){
@@ -76,7 +79,7 @@ static inline bool check_nullmove(chessPosition* position, int16_t depth, int32_
 	makeNullMove(position);
 	chessMove mv;
 	searchCounts.nullMovePruningTried++;
-	int32_t value = -negamax(position, depth-3, -beta, -beta+1, &mv, false);
+	int32_t value = -negamax(position, ply+1, max_ply, depth-3, -beta, -beta+1, &mv, false);
 	undoNullMove(position);
 	if(value < beta) {
 		return false; //didnt manage a cutoff :(
@@ -85,9 +88,10 @@ static inline bool check_nullmove(chessPosition* position, int16_t depth, int32_
 	return true;
 }
 
-int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe) {
+int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe) {
 
 	assert(alpha < beta);
+	assert(ply+depth <= max_ply);
 	searchCounts.called++;
 	if(position->data.fiftyMoveRuleCounter >= 100){
 		return 0;
@@ -138,7 +142,7 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
 	}
 
 	if((depth >= 2) && allowNullMove){
-		if(check_nullmove(position, depth, beta)){
+		if(check_nullmove(position, ply, max_ply, depth, beta)){
 			return beta;
 		}
 	}
@@ -161,9 +165,9 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
 		}
 	}
 
-	vdt_vector<chessMove> moves = vdt_vector<chessMove>(buffer+depth*100,100);
+	vdt_vector<chessMove> moves = vdt_vector<chessMove>(buffer+ply*100,100);
 	generateAllMoves(&moves, position);
-	bool isInCheck = orderStandardMoves(position, &moves, depth, hashVal.bestMove);
+	bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove);
 
 
 	bool legalMovesAvailable = false;
@@ -193,29 +197,32 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
 			searchCounts.totalNodes++;
 			legalMovesAvailable = true;
 			chessMove mv;
-
+			uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
+			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
 			uint16_t reduction = 0;
-
+			uint16_t extension = 0;
 			if((ind > 5) && (moves[ind].captureType == none) && (depth > 2) && !isInCheck) { //LMR
-				uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
-				bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField);
 				if(!check){
 					reduction = 1;
 				}
 			}
 
+			/*if(check && 		( (ply+depth < max_ply-1) || ((depth == 1) && (ply+depth < max_ply)) )){
+				extension = 1;
+				reduction = 0;
+			}*/
 
 			//PVSearch, currently a small gain for us with the > 5
 			//-------------------------------------------------
 			if((ind > 5) && (depth > 2)) {
-				int32_t value = -negamax(position, depth-1-reduction, -alpha-1, -alpha, &mv);
+				int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &mv);
 				if(value < alpha+1){
 					undoMove(position);
 					continue;
 				}
 			}
 
-			int32_t value = -negamax(position, depth-1, -beta, -alpha, &mv);
+			int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
 
 			if(value > alpha){
 				foundGoodMove = true;
@@ -236,9 +243,9 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
 			if(bestMove->captureType == none){
 				uint16_t toRemember = (bestMove->sourceField | (bestMove->targetField << 8));
 
-				if ( (killerMoves[depth][0] != toRemember)) {
-					killerMoves[depth][1] = killerMoves[depth][0];
-					killerMoves[depth][0] = toRemember;
+				if ( (killerMoves[ply][0] != toRemember)) {
+					killerMoves[ply][1] = killerMoves[ply][0];
+					killerMoves[ply][0] = toRemember;
 				}
 			}
 			//moves.free_array();
diff --git a/Cpp/src/Search/search.hpp b/Cpp/src/Search/search.hpp
index e9974a5..f169451 100644
--- a/Cpp/src/Search/search.hpp
+++ b/Cpp/src/Search/search.hpp
@@ -11,10 +11,10 @@
 #define HISTORY_CUTOFF (1UL << 12)
 
 void rescaleHistoryTable();
-int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
+int16_t negamax(chessPosition* position,  uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
 int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta, uint16_t depth);
 void resetNodes();
-bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t depth, uint16_t hashedMove);
+bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove);
 void orderCaptureMoves(chessPosition* position, vdt_vector<chessMove>* moves);
 uint32_t getNodes();
 
diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
index 8dfc9fd..f3a19ee 100644
--- a/Cpp/src/Vabi.cpp
+++ b/Cpp/src/Vabi.cpp
@@ -74,8 +74,8 @@ int main() {
 
 	srand (time(NULL));
 	fillZobristHash();
-	/*runPerformanceTests();
-	return 0;*/
+	runPerformanceTests();
+	return 0;
 	UIloop();
 	//00000BNR00000PKQ00000NPR00000N0P000000000000000p0qpN0npnN000000kw0000
 }
diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
index 766416a..d633e9e 100644
--- a/Cpp/src/lib/Evaluation/evaluation.cpp
+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
@@ -114,7 +114,7 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
 
 	eval = eval+kingSafetyTapered;*/
 
-	//eval = eval+(rand() & 7)-3; //TODO: how is this performance-wise?
+	eval = eval+(rand() & 7)-3; //TODO: how is this performance-wise?
 	return (1-2*position->toMove)*eval;
 
 }
diff --git a/Cpp/src/selfPlaying/selfPlaying.cpp b/Cpp/src/selfPlaying/selfPlaying.cpp
index db93cbc..a3bdb1f 100644
--- a/Cpp/src/selfPlaying/selfPlaying.cpp
+++ b/Cpp/src/selfPlaying/selfPlaying.cpp
@@ -26,7 +26,7 @@ int32_t selfPlayMakeMove(chessPosition* position, uint16_t whitedepth, uint16_t
 		depth = blackdepth;
 	}
 	chessMove bestMove;
-	int32_t eval = negamax(position, depth, -32000, 32000, &bestMove);
+	int32_t eval = negamax(position, 0, depth+3, depth, -32000, 32000, &bestMove);
 	if(position->toMove == black) {
 		eval = -eval;
 	}
diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
index 5f820c4..8db27e3 100644
--- a/Cpp/src/userInterface/UIfunctions.cpp
+++ b/Cpp/src/userInterface/UIfunctions.cpp
@@ -56,7 +56,7 @@ uint64_t runSinglePositionPerformanceTest(std::string position, uint16_t depth,
 	while(searchdepth <= depth && (searchdepth < 14)) {
 
 		bool succeeded = false;
-		int32_t eval = negamax(&c, searchdepth, alpha, beta, &bestMove);
+		int32_t eval = negamax(&c, 0, depth+3, searchdepth, alpha, beta, &bestMove);
 
 		if(useAspiration) {
 			if ((eval <= alpha)) {
diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
index d56de05..50cf68d 100644
--- a/Cpp/src/userInterface/UImainLoop.cpp
+++ b/Cpp/src/userInterface/UImainLoop.cpp
@@ -39,12 +39,12 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
 	/*uint64_t goalNodes = 1800*maximal_time;
 	while((searchedNodes < goalNodes) && (depth < 31)) {*/
 	while(depth < 7){ //hacked to get repeatable results - there is a major bug hiding somewhere
-		*eval = negamax(position, depth, alpha, beta, bestMove, true, false);
+		*eval = negamax(position, 0, depth+3, depth, alpha, beta, bestMove, true, false);
 
 		if(doAspiration) {
 			if ((*eval <= alpha) || (*eval >= beta)) {
 				//std::cout << "Aspiration window search failed, researching..." <<std::endl;
-				*eval = negamax(position, depth, -32000, 32000, bestMove, true, false);
+				*eval = negamax(position, 0, depth+3, depth, -32000, 32000, bestMove, true, false);
 			}
 
 			alpha = *eval-50;
diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
index 408adf7..66d42fa 100644
--- a/chessGui/.idea/workspace.xml
+++ b/chessGui/.idea/workspace.xml
@@ -92,21 +92,21 @@
           </provider>
         </entry>
       </file>
-      <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
+      <file leaf-file-name="Main.java" pinned="false" current-in-tab="false">
         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="0">
-              <caret line="0" column="15" selection-start-line="0" selection-start-column="15" selection-end-line="42" selection-end-column="8" />
+            <state relative-caret-position="170">
+              <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
               <folding />
             </state>
           </provider>
         </entry>
       </file>
-      <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
+      <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="true">
         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="181">
-              <caret line="26" column="11" selection-start-line="26" selection-start-column="11" selection-end-line="26" selection-end-column="11" />
+            <state relative-caret-position="206">
+              <caret line="115" column="37" selection-start-line="115" selection-start-column="37" selection-end-line="115" selection-end-column="37" />
               <folding />
             </state>
           </provider>
@@ -228,17 +228,16 @@
         <option value="$PROJECT_DIR$/src/core/Core.java" />
         <option value="$PROJECT_DIR$/src/PlayingGUI/PlayingController.java" />
         <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
-        <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
         <option value="$PROJECT_DIR$/src/sample/Main.java" />
+        <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
       </list>
     </option>
   </component>
   <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
   <component name="ProjectFrameBounds">
-    <option name="x" value="229" />
-    <option name="y" value="99" />
-    <option name="width" value="1910" />
-    <option name="height" value="998" />
+    <option name="y" value="24" />
+    <option name="width" value="1920" />
+    <option name="height" value="1056" />
   </component>
   <component name="ProjectLevelVcsManager" settingsEditedManually="false">
     <OptionsSetting value="true" id="Add" />
@@ -601,7 +600,7 @@
     <option name="totallyTimeSpent" value="1302000" />
   </component>
   <component name="ToolWindowManager">
-    <frame x="229" y="99" width="1910" height="998" extended-state="1" />
+    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
     <editor active="false" />
     <layout>
       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
@@ -611,10 +610,10 @@
       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
-      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.4172973" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
+      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15445027" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
+      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
@@ -995,26 +994,26 @@
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="181">
-          <caret line="26" column="11" selection-start-line="26" selection-start-column="11" selection-end-line="26" selection-end-column="11" />
+        <state relative-caret-position="1035">
+          <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
           <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="1035">
-          <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
+        <state relative-caret-position="170">
+          <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
           <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="0">
-          <caret line="0" column="15" selection-start-line="0" selection-start-column="15" selection-end-line="42" selection-end-column="8" />
+        <state relative-caret-position="206">
+          <caret line="115" column="37" selection-start-line="115" selection-start-column="37" selection-end-line="115" selection-end-column="37" />
           <folding />
         </state>
       </provider>
diff --git a/chessGui/src/uciClient/UciProcessing.java b/chessGui/src/uciClient/UciProcessing.java
index c0ed5c1..5a5f47e 100644
--- a/chessGui/src/uciClient/UciProcessing.java
+++ b/chessGui/src/uciClient/UciProcessing.java
@@ -110,10 +110,10 @@ public class UciProcessing {
 
 
                 eval = vabiHandler.readBestmove(mv);
-                if (eval > 25000) {
+                if (eval > 300) {
                     ret = 1;
                     break;
-                } else if (eval < -25000) {
+                } else if (eval < -300) {
                     ret = -1;
                     break;
                 }
diff --git a/output b/output
deleted file mode 100644
index e69de29..0000000
