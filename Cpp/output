Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 21.24     16.71    16.71 45872084     0.36     0.40  orderStandardMoves(chessPosition const*, vdt_vector<chessMove>*, unsigned short)
 11.73     25.94     9.23 538387964     0.02     0.02  makeAttackTable(chessPosition const*, playerColor)
 11.45     34.95     9.01 159083155     0.06     0.06  orderCaptureMoves(chessPosition*, vdt_vector<chessMove>*)
  9.66     42.55     7.60 223321898     0.03     0.03  pawnEvaluation(chessPosition const*, unsigned char*)
  5.16     46.61     4.06 294254939     0.01     0.01  makeMove(chessMove*, chessPosition*)
  3.93     49.70     3.09 279582464     0.01     0.07  evaluation(chessPosition const*, int, int)
  3.80     52.69     2.99 49750960     0.06     0.75  negamax(chessPosition*, unsigned short, int, int, chessMove*)
  3.72     55.62     2.93 309970568     0.01     0.01  generateRookCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType)
  3.43     58.32     2.70 294254939     0.01     0.01  undoMove(chessPosition*)
  3.30     60.92     2.60 309970568     0.01     0.01  generateBishopCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType)
  3.15     63.39     2.48 309970568     0.01     0.01  generateNonSliderCaptureMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType)
  3.10     65.83     2.44 91744168     0.03     0.03  generateRookMoves(vdt_vector<chessMove>*, chessPosition*, figureType)
  3.08     68.25     2.42 89688923     0.03     0.46  negamaxQuiescence(chessPosition*, int, int, unsigned short)
  2.19     69.97     1.72 91744168     0.02     0.02  generateNonSliderMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType)
  2.10     71.62     1.65 304788923     0.01     0.01  isFieldAttacked(chessPosition const*, playerColor, unsigned short)
  1.88     73.10     1.48 45872084     0.03     0.03  generatePawnMoves(vdt_vector<chessMove>*, chessPosition*)
  1.87     74.58     1.48 91744168     0.02     0.02  generateBishopMoves(vdt_vector<chessMove>*, chessPosition*, figureType)
  1.72     75.94     1.36 154985284     0.01     0.01  generatePawnCaptureMoves(vdt_vector<chessMove>*, chessPosition*)
  1.35     77.00     1.06  4107531     0.26     0.26  getNodes()
  0.85     77.66     0.67 154985284     0.00     0.06  generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*)
  0.39     77.97     0.31 45872084     0.01     0.16  generateAllMoves(vdt_vector<chessMove>*, chessPosition*)
  0.27     78.18     0.21 49730255     0.00     0.00  resetSortqCalled()
  0.11     78.27     0.09     9660     9.32     9.32  calcEndGamePieceTableValue(chessPosition const*)
  0.11     78.36     0.09                             debugPawnEvaluation(chessPosition const*, unsigned char*, VDTpawnEvaluation*)
  0.11     78.45     0.09 45872084     0.00     0.00  generateCastling(vdt_vector<chessMove>*, chessPosition*)
  0.11     78.54     0.09  9716818     0.01     0.01  makeNullMove(chessPosition*)
  0.10     78.62     0.08                             staticPawnEval(unsigned long, playerColor, unsigned char*)
  0.06     78.67     0.05  9716818     0.00     0.00  undoNullMove(chessPosition*)
  0.03     78.69     0.02                             calcCaptureSortEval(chessPosition*, chessMove*, unsigned short)
  0.01     78.70     0.01    14490     0.69     0.69  calcZobristHash(chessPosition const*)
  0.00     78.70     0.00     9660     0.00     0.00  getQuiescenceNodes()
  0.00     78.70     0.00     9660     0.00     0.00  calcPieceTableValue(chessPosition const*)
  0.00     78.70     0.00     9660     0.00     0.00  calcFigureEvaluation(chessPosition const*)
  0.00     78.70     0.00     9660     0.00     0.00  calcTotalFigureEvaluation(chessPosition const*)
  0.00     78.70     0.00     4830     0.00     0.00  resetNodes()
  0.00     78.70     0.00     4830     0.00     0.69  zeroInitPosition(chessPosition*)
  0.00     78.70     0.00     4830     0.00     0.00  resetQuiescenceNodes()
  0.00     78.70     0.00     4830     0.00    20.71  stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00     78.70     0.00     4830     0.00    10.01  debug_incremental_calculations(chessPosition const*)
  0.00     78.70     0.00      769     0.00     0.00  getRandUint64()
  0.00     78.70     0.00      769     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()()
  0.00     78.70     0.00        2     0.00     0.00  _GLOBAL__sub_I_attacksCloseToKingEvals
  0.00     78.70     0.00        2     0.00     0.00  _GLOBAL__sub_I_moveOrderingHashTable
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I_UI
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10perftNodesP13chessPositiont
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12makeNullMoveP13chessPosition
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12testMakeMovev
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12undoNullMoveP13chessPosition
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13getRandUint64v
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13get_timestampv
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13resetqIndicesv
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z14passedPawnEvalmm
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z15debugEvaluationPK13chessPositionP13VDTevaluation
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z15getZeroPositionB5cxx11v
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z15isFieldAttackedPK13chessPosition11playerColort
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z16selfPlayMakeMoveP13chessPositiontt
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z16zeroInitPositionP13chessPosition
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z17generateRookMovesP10vdt_vectorI9chessMoveEP13chessPosition10figureType
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z18initialize_networkPKci
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z19calcPieceTableValuePK13chessPosition
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z19debugPassedPawnEvalmm
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z20calcFigureEvaluationPK13chessPosition
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z23generateBishopMoveTabletm
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z24generateRookCaptureMovesP10vdt_vectorI9chessMoveEP13chessPosition10figureType
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z27generateRookReachableFieldsB5cxx11v
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z28generateRookMoveTablesStringB5cxx11v
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z29generateBishopReachableFieldsB5cxx11v
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6inputsB5cxx11
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z9getCalledv
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN13ClientHandlerD2Ev
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN20networkUserInterface10initializeEv
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SocketC2EPKci
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN9VMPServer11get_messageEj
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I_enablePawnEval
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I_kingBlockers
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00     78.70     0.00        1     0.00     0.00  _GLOBAL__sub_I_numTests

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.01% of 78.70 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.8    0.00   78.51                 runPerformanceTests() [1]
                5.41   72.99   20705/20705       negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                0.00    0.10    4830/4830        stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
                0.00    0.00    9660/4107531     getNodes() [23]
                0.00    0.00    9660/9660        getQuiescenceNodes() [43]
                0.00    0.00    4830/4830        resetQuiescenceNodes() [48]
                0.00    0.00    4830/4830        resetNodes() [47]
-----------------------------------------------
[2]     99.6    5.41   72.99   20705+139419178 <cycle 1 as a whole> [2]
                2.42   38.88 89688923+146411065     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
                2.99   34.12 49750960+135540302     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
-----------------------------------------------
                             146411065             negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
                             89688923             negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
[3]     52.5    2.42   38.88 89688923+146411065 negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
                2.61   12.89 236099988/279582464     evaluation(chessPosition const*, int, int) [5]
                0.67    9.36 154985284/154985284     generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [7]
                8.78    0.00 154985284/159083155     orderCaptureMoves(chessPosition*, vdt_vector<chessMove>*) [9]
                2.12    0.00 153891075/294254939     makeMove(chessMove*, chessPosition*) [12]
                1.41    0.00 153891075/294254939     undoMove(chessPosition*) [14]
                0.83    0.00 153891075/304788923     isFieldAttacked(chessPosition const*, playerColor, unsigned short) [19]
                0.21    0.00 49730255/49730255     resetSortqCalled() [24]
                             49730255             negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                             146411065             negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
-----------------------------------------------
                             135540302             negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                             49730255             negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
                5.41   72.99   20705/20705       runPerformanceTests() [1]
[4]     47.2    2.99   34.12 49750960+135540302 negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
               16.71    1.57 45872084/45872084     orderStandardMoves(chessPosition const*, vdt_vector<chessMove>*, unsigned short) [6]
                0.31    7.21 45872084/45872084     generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [11]
                0.48    2.37 43482476/279582464     evaluation(chessPosition const*, int, int) [5]
                1.94    0.00 140363864/294254939     makeMove(chessMove*, chessPosition*) [12]
                1.29    0.00 140363864/294254939     undoMove(chessPosition*) [14]
                1.06    0.00 4097871/4107531     getNodes() [23]
                0.82    0.00 150897848/304788923     isFieldAttacked(chessPosition const*, playerColor, unsigned short) [19]
                0.23    0.00 4097871/159083155     orderCaptureMoves(chessPosition*, vdt_vector<chessMove>*) [9]
                0.09    0.00 9716818/9716818     makeNullMove(chessPosition*) [29]
                0.05    0.00 9716818/9716818     undoNullMove(chessPosition*) [32]
                             89688923             negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
                             135540302             negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
-----------------------------------------------
                0.48    2.37 43482476/279582464     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                2.61   12.89 236099988/279582464     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
[5]     23.3    3.09   15.26 279582464         evaluation(chessPosition const*, int, int) [5]
                7.66    0.00 446643796/538387964     makeAttackTable(chessPosition const*, playerColor) [8]
                7.60    0.00 223321898/223321898     pawnEvaluation(chessPosition const*, unsigned char*) [10]
-----------------------------------------------
               16.71    1.57 45872084/45872084     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
[6]     23.2   16.71    1.57 45872084         orderStandardMoves(chessPosition const*, vdt_vector<chessMove>*, unsigned short) [6]
                1.57    0.00 91744168/538387964     makeAttackTable(chessPosition const*, playerColor) [8]
-----------------------------------------------
                0.67    9.36 154985284/154985284     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
[7]     12.7    0.67    9.36 154985284         generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [7]
                2.93    0.00 309970568/309970568     generateRookCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [13]
                2.60    0.00 309970568/309970568     generateBishopCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [15]
                2.48    0.00 309970568/309970568     generateNonSliderCaptureMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType) [16]
                1.36    0.00 154985284/154985284     generatePawnCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [22]
-----------------------------------------------
                1.57    0.00 91744168/538387964     orderStandardMoves(chessPosition const*, vdt_vector<chessMove>*, unsigned short) [6]
                7.66    0.00 446643796/538387964     evaluation(chessPosition const*, int, int) [5]
[8]     11.7    9.23    0.00 538387964         makeAttackTable(chessPosition const*, playerColor) [8]
-----------------------------------------------
                0.23    0.00 4097871/159083155     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                8.78    0.00 154985284/159083155     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
[9]     11.4    9.01    0.00 159083155         orderCaptureMoves(chessPosition*, vdt_vector<chessMove>*) [9]
-----------------------------------------------
                7.60    0.00 223321898/223321898     evaluation(chessPosition const*, int, int) [5]
[10]     9.7    7.60    0.00 223321898         pawnEvaluation(chessPosition const*, unsigned char*) [10]
-----------------------------------------------
                0.31    7.21 45872084/45872084     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
[11]     9.6    0.31    7.21 45872084         generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [11]
                2.44    0.00 91744168/91744168     generateRookMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [17]
                1.72    0.00 91744168/91744168     generateNonSliderMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType) [18]
                1.48    0.00 45872084/45872084     generatePawnMoves(vdt_vector<chessMove>*, chessPosition*) [20]
                1.48    0.00 91744168/91744168     generateBishopMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [21]
                0.09    0.00 45872084/45872084     generateCastling(vdt_vector<chessMove>*, chessPosition*) [28]
-----------------------------------------------
                1.94    0.00 140363864/294254939     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                2.12    0.00 153891075/294254939     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
[12]     5.2    4.06    0.00 294254939         makeMove(chessMove*, chessPosition*) [12]
-----------------------------------------------
                2.93    0.00 309970568/309970568     generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [7]
[13]     3.7    2.93    0.00 309970568         generateRookCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [13]
-----------------------------------------------
                1.29    0.00 140363864/294254939     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                1.41    0.00 153891075/294254939     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
[14]     3.4    2.70    0.00 294254939         undoMove(chessPosition*) [14]
-----------------------------------------------
                2.60    0.00 309970568/309970568     generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [7]
[15]     3.3    2.60    0.00 309970568         generateBishopCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [15]
-----------------------------------------------
                2.48    0.00 309970568/309970568     generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [7]
[16]     3.1    2.48    0.00 309970568         generateNonSliderCaptureMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType) [16]
-----------------------------------------------
                2.44    0.00 91744168/91744168     generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [11]
[17]     3.1    2.44    0.00 91744168         generateRookMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [17]
-----------------------------------------------
                1.72    0.00 91744168/91744168     generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [11]
[18]     2.2    1.72    0.00 91744168         generateNonSliderMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType) [18]
-----------------------------------------------
                0.82    0.00 150897848/304788923     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
                0.83    0.00 153891075/304788923     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
[19]     2.1    1.65    0.00 304788923         isFieldAttacked(chessPosition const*, playerColor, unsigned short) [19]
-----------------------------------------------
                1.48    0.00 45872084/45872084     generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [11]
[20]     1.9    1.48    0.00 45872084         generatePawnMoves(vdt_vector<chessMove>*, chessPosition*) [20]
-----------------------------------------------
                1.48    0.00 91744168/91744168     generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [11]
[21]     1.9    1.48    0.00 91744168         generateBishopMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [21]
-----------------------------------------------
                1.36    0.00 154985284/154985284     generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [7]
[22]     1.7    1.36    0.00 154985284         generatePawnCaptureMoves(vdt_vector<chessMove>*, chessPosition*) [22]
-----------------------------------------------
                             9194859             getNodes() [23]
                0.00    0.00    9660/4107531     runPerformanceTests() [1]
                1.06    0.00 4097871/4107531     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
[23]     1.3    1.06    0.00 4107531+9194859 getNodes() [23]
                             9194859             getNodes() [23]
-----------------------------------------------
                0.21    0.00 49730255/49730255     negamaxQuiescence(chessPosition*, int, int, unsigned short) <cycle 1> [3]
[24]     0.3    0.21    0.00 49730255         resetSortqCalled() [24]
-----------------------------------------------
                0.00    0.10    4830/4830        runPerformanceTests() [1]
[25]     0.1    0.00    0.10    4830         stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
                0.00    0.05    4830/4830        debug_incremental_calculations(chessPosition const*) [31]
                0.05    0.00    4830/9660        calcEndGamePieceTableValue(chessPosition const*) [26]
                0.00    0.00    4830/4830        zeroInitPosition(chessPosition*) [35]
                0.00    0.00    4830/14490       calcZobristHash(chessPosition const*) [34]
                0.00    0.00    4830/9660        calcTotalFigureEvaluation(chessPosition const*) [46]
                0.00    0.00    4830/9660        calcFigureEvaluation(chessPosition const*) [45]
                0.00    0.00    4830/9660        calcPieceTableValue(chessPosition const*) [44]
-----------------------------------------------
                0.05    0.00    4830/9660        stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
                0.05    0.00    4830/9660        debug_incremental_calculations(chessPosition const*) [31]
[26]     0.1    0.09    0.00    9660         calcEndGamePieceTableValue(chessPosition const*) [26]
-----------------------------------------------
                                                 <spontaneous>
[27]     0.1    0.09    0.00                 debugPawnEvaluation(chessPosition const*, unsigned char*, VDTpawnEvaluation*) [27]
-----------------------------------------------
                0.09    0.00 45872084/45872084     generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [11]
[28]     0.1    0.09    0.00 45872084         generateCastling(vdt_vector<chessMove>*, chessPosition*) [28]
-----------------------------------------------
                0.09    0.00 9716818/9716818     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
[29]     0.1    0.09    0.00 9716818         makeNullMove(chessPosition*) [29]
-----------------------------------------------
                                                 <spontaneous>
[30]     0.1    0.08    0.00                 staticPawnEval(unsigned long, playerColor, unsigned char*) [30]
-----------------------------------------------
                0.00    0.05    4830/4830        stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
[31]     0.1    0.00    0.05    4830         debug_incremental_calculations(chessPosition const*) [31]
                0.05    0.00    4830/9660        calcEndGamePieceTableValue(chessPosition const*) [26]
                0.00    0.00    4830/14490       calcZobristHash(chessPosition const*) [34]
                0.00    0.00    4830/9660        calcFigureEvaluation(chessPosition const*) [45]
                0.00    0.00    4830/9660        calcTotalFigureEvaluation(chessPosition const*) [46]
                0.00    0.00    4830/9660        calcPieceTableValue(chessPosition const*) [44]
-----------------------------------------------
                0.05    0.00 9716818/9716818     negamax(chessPosition*, unsigned short, int, int, chessMove*) <cycle 1> [4]
[32]     0.1    0.05    0.00 9716818         undoNullMove(chessPosition*) [32]
-----------------------------------------------
                                                 <spontaneous>
[33]     0.0    0.02    0.00                 calcCaptureSortEval(chessPosition*, chessMove*, unsigned short) [33]
-----------------------------------------------
                0.00    0.00    4830/14490       stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
                0.00    0.00    4830/14490       zeroInitPosition(chessPosition*) [35]
                0.00    0.00    4830/14490       debug_incremental_calculations(chessPosition const*) [31]
[34]     0.0    0.01    0.00   14490         calcZobristHash(chessPosition const*) [34]
-----------------------------------------------
                0.00    0.00    4830/4830        stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
[35]     0.0    0.00    0.00    4830         zeroInitPosition(chessPosition*) [35]
                0.00    0.00    4830/14490       calcZobristHash(chessPosition const*) [34]
-----------------------------------------------
                0.00    0.00    9660/9660        runPerformanceTests() [1]
[43]     0.0    0.00    0.00    9660         getQuiescenceNodes() [43]
-----------------------------------------------
                0.00    0.00    4830/9660        stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
                0.00    0.00    4830/9660        debug_incremental_calculations(chessPosition const*) [31]
[44]     0.0    0.00    0.00    9660         calcPieceTableValue(chessPosition const*) [44]
-----------------------------------------------
                0.00    0.00    4830/9660        stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
                0.00    0.00    4830/9660        debug_incremental_calculations(chessPosition const*) [31]
[45]     0.0    0.00    0.00    9660         calcFigureEvaluation(chessPosition const*) [45]
-----------------------------------------------
                0.00    0.00    4830/9660        stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [25]
                0.00    0.00    4830/9660        debug_incremental_calculations(chessPosition const*) [31]
[46]     0.0    0.00    0.00    9660         calcTotalFigureEvaluation(chessPosition const*) [46]
-----------------------------------------------
                0.00    0.00    4830/4830        runPerformanceTests() [1]
[47]     0.0    0.00    0.00    4830         resetNodes() [47]
-----------------------------------------------
                0.00    0.00    4830/4830        runPerformanceTests() [1]
[48]     0.0    0.00    0.00    4830         resetQuiescenceNodes() [48]
-----------------------------------------------
                0.00    0.00     769/769         fillZobristHash() [113]
[49]     0.0    0.00    0.00     769         getRandUint64() [49]
                0.00    0.00     769/769         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [50]
-----------------------------------------------
                0.00    0.00     769/769         getRandUint64() [49]
[50]     0.0    0.00    0.00     769         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [50]
-----------------------------------------------
                0.00    0.00       2/2           __libc_csu_init [262]
[51]     0.0    0.00    0.00       2         _GLOBAL__sub_I_attacksCloseToKingEvals [51]
-----------------------------------------------
                0.00    0.00       2/2           __libc_csu_init [262]
[52]     0.0    0.00    0.00       2         _GLOBAL__sub_I_moveOrderingHashTable [52]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[53]     0.0    0.00    0.00       1         _GLOBAL__sub_I_UI [53]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[54]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10perftNodesP13chessPositiont [54]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[55]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12makeNullMoveP13chessPosition [55]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[56]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12testMakeMovev [56]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[57]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12undoNullMoveP13chessPosition [57]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[58]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13getRandUint64v [58]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[59]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13get_timestampv [59]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[60]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13resetqIndicesv [60]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[61]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z14passedPawnEvalmm [61]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[62]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z15debugEvaluationPK13chessPositionP13VDTevaluation [62]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[63]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z15getZeroPositionB5cxx11v [63]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[64]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z15isFieldAttackedPK13chessPosition11playerColort [64]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[65]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z16selfPlayMakeMoveP13chessPositiontt [65]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[66]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z16zeroInitPositionP13chessPosition [66]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[67]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z17generateRookMovesP10vdt_vectorI9chessMoveEP13chessPosition10figureType [67]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[68]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z18initialize_networkPKci [68]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[69]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z19calcPieceTableValuePK13chessPosition [69]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[70]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z19debugPassedPawnEvalmm [70]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[71]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z20calcFigureEvaluationPK13chessPosition [71]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[72]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z23generateBishopMoveTabletm [72]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[73]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z24generateRookCaptureMovesP10vdt_vectorI9chessMoveEP13chessPosition10figureType [73]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[74]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z27generateRookReachableFieldsB5cxx11v [74]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[75]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z28generateRookMoveTablesStringB5cxx11v [75]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[76]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z29generateBishopReachableFieldsB5cxx11v [76]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[77]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6inputsB5cxx11 [77]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[78]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z9getCalledv [78]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[79]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN13ClientHandlerD2Ev [79]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[80]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN20networkUserInterface10initializeEv [80]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[81]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SocketC2EPKci [81]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[82]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN9VMPServer11get_messageEj [82]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[83]     0.0    0.00    0.00       1         _GLOBAL__sub_I_enablePawnEval [83]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[84]     0.0    0.00    0.00       1         _GLOBAL__sub_I_kingBlockers [84]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[85]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [85]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [262]
[86]     0.0    0.00    0.00       1         _GLOBAL__sub_I_numTests [86]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [53] _GLOBAL__sub_I_UI      [79] _GLOBAL__sub_I__ZN13ClientHandlerD2Ev [3] negamaxQuiescence(chessPosition*, int, int, unsigned short)
  [54] _GLOBAL__sub_I__Z10perftNodesP13chessPositiont [80] _GLOBAL__sub_I__ZN20networkUserInterface10initializeEv [9] orderCaptureMoves(chessPosition*, vdt_vector<chessMove>*)
  [55] _GLOBAL__sub_I__Z12makeNullMoveP13chessPosition [81] _GLOBAL__sub_I__ZN6SocketC2EPKci [43] getQuiescenceNodes()
  [56] _GLOBAL__sub_I__Z12testMakeMovev [82] _GLOBAL__sub_I__ZN9VMPServer11get_messageEj [6] orderStandardMoves(chessPosition const*, vdt_vector<chessMove>*, unsigned short)
  [57] _GLOBAL__sub_I__Z12undoNullMoveP13chessPosition [51] _GLOBAL__sub_I_attacksCloseToKingEvals [33] calcCaptureSortEval(chessPosition*, chessMove*, unsigned short)
  [58] _GLOBAL__sub_I__Z13getRandUint64v [83] _GLOBAL__sub_I_enablePawnEval [44] calcPieceTableValue(chessPosition const*)
  [59] _GLOBAL__sub_I__Z13get_timestampv [84] _GLOBAL__sub_I_kingBlockers [27] debugPawnEvaluation(chessPosition const*, unsigned char*, VDTpawnEvaluation*)
  [60] _GLOBAL__sub_I__Z13resetqIndicesv [85] _GLOBAL__sub_I_main [21] generateBishopMoves(vdt_vector<chessMove>*, chessPosition*, figureType)
  [61] _GLOBAL__sub_I__Z14passedPawnEvalmm [52] _GLOBAL__sub_I_moveOrderingHashTable [45] calcFigureEvaluation(chessPosition const*)
  [62] _GLOBAL__sub_I__Z15debugEvaluationPK13chessPositionP13VDTevaluation [86] _GLOBAL__sub_I_numTests [48] resetQuiescenceNodes()
  [63] _GLOBAL__sub_I__Z15getZeroPositionB5cxx11v [5] evaluation(chessPosition const*, int, int) [25] stringToChessPosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  [64] _GLOBAL__sub_I__Z15isFieldAttackedPK13chessPosition11playerColort [47] resetNodes() [18] generateNonSliderMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType)
  [65] _GLOBAL__sub_I__Z16selfPlayMakeMoveP13chessPositiontt [29] makeNullMove(chessPosition*) [7] generateAllCaptureMoves(vdt_vector<chessMove>*, chessPosition*)
  [66] _GLOBAL__sub_I__Z16zeroInitPositionP13chessPosition [32] undoNullMove(chessPosition*) [22] generatePawnCaptureMoves(vdt_vector<chessMove>*, chessPosition*)
  [67] _GLOBAL__sub_I__Z17generateRookMovesP10vdt_vectorI9chessMoveEP13chessPosition10figureType [49] getRandUint64() [13] generateRookCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType)
  [68] _GLOBAL__sub_I__Z18initialize_networkPKci [10] pawnEvaluation(chessPosition const*, unsigned char*) [46] calcTotalFigureEvaluation(chessPosition const*)
  [69] _GLOBAL__sub_I__Z19calcPieceTableValuePK13chessPosition [30] staticPawnEval(unsigned long, playerColor, unsigned char*) [26] calcEndGamePieceTableValue(chessPosition const*)
  [70] _GLOBAL__sub_I__Z19debugPassedPawnEvalmm [34] calcZobristHash(chessPosition const*) [15] generateBishopCaptureMoves(vdt_vector<chessMove>*, chessPosition*, figureType)
  [71] _GLOBAL__sub_I__Z20calcFigureEvaluationPK13chessPosition [19] isFieldAttacked(chessPosition const*, playerColor, unsigned short) [16] generateNonSliderCaptureMoves(vdt_vector<chessMove>*, chessPosition*, unsigned long const*, figureType)
  [72] _GLOBAL__sub_I__Z23generateBishopMoveTabletm [8] makeAttackTable(chessPosition const*, playerColor) [31] debug_incremental_calculations(chessPosition const*)
  [73] _GLOBAL__sub_I__Z24generateRookCaptureMovesP10vdt_vectorI9chessMoveEP13chessPosition10figureType [11] generateAllMoves(vdt_vector<chessMove>*, chessPosition*) [4] negamax(chessPosition*, unsigned short, int, int, chessMove*)
  [74] _GLOBAL__sub_I__Z27generateRookReachableFieldsB5cxx11v [28] generateCastling(vdt_vector<chessMove>*, chessPosition*) [23] getNodes()
  [75] _GLOBAL__sub_I__Z28generateRookMoveTablesStringB5cxx11v [24] resetSortqCalled() [12] makeMove(chessMove*, chessPosition*)
  [76] _GLOBAL__sub_I__Z29generateBishopReachableFieldsB5cxx11v [35] zeroInitPosition(chessPosition*) [14] undoMove(chessPosition*)
  [77] _GLOBAL__sub_I__Z6inputsB5cxx11 [20] generatePawnMoves(vdt_vector<chessMove>*, chessPosition*) [50] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()()
  [78] _GLOBAL__sub_I__Z9getCalledv [17] generateRookMoves(vdt_vector<chessMove>*, chessPosition*, figureType) [2] <cycle 1>
