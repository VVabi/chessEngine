diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
index d498090..8d94b88 100644
--- a/Cpp/src/Vabi.cpp
+++ b/Cpp/src/Vabi.cpp
@@ -75,7 +75,7 @@ int main() {
 	for(uint32_t index=0; index < 7; index++) {
 		for(uint32_t t=0; t < 2; t++) {
 			for(uint32_t k=0; k < 64; k++) {
-				completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]+evalPars->figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]/2+evalPars->figureValues[index])) << 16);
+				completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]+evalPars->figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]+evalPars->figureValues[index])) << 16);
 			}
 		}
 	}
diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
index bb95194..d6cb549 100644
--- a/Cpp/src/lib/Defines/pieceTables.cpp
+++ b/Cpp/src/lib/Defines/pieceTables.cpp
@@ -85,69 +85,69 @@ int16_t endgameRawPieceTables[6][32] = {
 	//pawns
 	{
 			0,0,0,0,
-			0,0,-5,-15,
-			10,10,10,10,
-			20,10,10,10,
-			30,20,20,20,
-			40,30,30,30,
-			50,50,50,50,
+			0,0,-2,-7,
+			5,5,5,5,
+			5,5,5,5,
+			15,10,10,10,
+			20,15,15,15,
+			25,25,25,25,
 			0,0,0,0
 	},
 
 	//knights
 	{
-			-60,-40,-30,-20,
-			-40,-30,-20,-10,
-			-30,-20, 10, 0,
-			-20,-5, 15, 30,
-			-20,-5, 15, 30,
-			-30,-20, 10, 20,
-			-40,-30,-20,-10,
-			-60,-40,-30,-20
+			-30,-20,-15,-10,
+			-20,-15,-10,-5,
+			-15,-10, 5, 0,
+			-10,-2, 7, 15,
+			-10,-2, 7, 15,
+			-15,-10, 5, 10,
+			-20,-15,-10,-5,
+			-30,-20,-15,-10
 	} ,
 
 	{//bishops
-			-30,-15,-15,-10,
-			-10,15,5,15,
-			-5,5,10,5,
-			0,15,10,15,
-			0,20,5,10,
-			-5,5,10,10,
-			-15,-10,-10,-10,
-			-40,-25,-15,-15
+			-15,-7,-7,-5,
+			-5,7,2,7,
+			-2,2,5,2,
+			0,7,5,7,
+			0,10,2,5,
+			-2,2,5,5,
+			-7,-5,-5,-5,
+			-20,-12,-7,-7
 	},
 
 	{ // rooks
-			0,10,20,30,
-			-20,-10,0,0,
-			-15,-5,0,10,
-			-15,-5,0,0,
-			-15,-5,0,0,
-			-15,-5,0,0,
-			10,20,20,20,
-			10,20,20,20
+			0,5,10,15,
+			-10,-5,0,0,
+			-7,-2,0,10,
+			-7,-2,0,0,
+			-7,-2,0,0,
+			-7,-2,0,0,
+			5,10,10,10,
+			5,10,10,10
 	},
 
 	{ //queens
-			-10,0,10,10,
-			-20,-10,10,15,
-			-15,-5,0,10,
-			-15,-5,10,30,
-			-10,-5,5,20,
-			-15,-5,10,15,
-			-20,-10,10,15,
-			 0,10,20,20
+			-5,0,5,5,
+			-10,-5,10,7,
+			-7,-2,0,5,
+			-7,-2,5,15,
+			-5,-2,2,10,
+			-7,-2,5,7,
+			-10,-5,5,7,
+			 0,5,10,10
 	},
 
 	{ // kings
-			-200,-140,-80,-50,
-			-140,-100,-60,-20,
-			-80,-60,-20, 20,
-			-50,-20, 20, 60,
-			-50,-20, 20, 60,
-			-80,-60,-20, 20,
-			-140,-100,-60,-20,
-			-200,-140,-80,-50
+			-100,-70,-40,-25,
+			-70,-50,-30,-10,
+			-40,-30,-10, 10,
+			-25,-10, 10, 30,
+			-25,-10, 10, 30,
+			-40,-30,-10, 10,
+			-70,-50,-30,-10,
+			-100,-70,-40,-25
 	}
 
 
diff --git a/output b/output
deleted file mode 100644
index e69de29..0000000
diff --git a/to_checkin.diff b/to_checkin.diff
index f9d55bc..e69de29 100644
--- a/to_checkin.diff
+++ b/to_checkin.diff
@@ -1,12329 +0,0 @@
-diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
-index 389d8b6..09d6e99 100644
---- a/Cpp/src/Search/moveOrdering.cpp
-+++ b/Cpp/src/Search/moveOrdering.cpp
-@@ -119,7 +119,7 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, bool is
- 	}*/
- 
- 	if (((uint16_t) mv->type) < 6) {
--		sortEval = sortEval+(pieceTables[mv->type][position->toMove][mv->targetField]-pieceTables[mv->type][position->toMove][mv->sourceField])/4;
-+		sortEval = sortEval+(pieceTables[mv->type][position->toMove][mv->targetField]-pieceTables[mv->type][position->toMove][mv->sourceField])/2;
- 	}
- 
- 	if(mv->type == promotionQueen) {
-diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
-index 4c82dca..d498090 100644
---- a/Cpp/src/Vabi.cpp
-+++ b/Cpp/src/Vabi.cpp
-@@ -26,21 +26,61 @@ using namespace std;
- extern int32_t completePieceTables[7][2][64];
- extern int16_t pieceTables[7][2][64];
- extern int16_t endGamepieceTables[7][2][64];
--
--
-+extern int16_t rawPieceTables[6][32];
-+extern int16_t endgameRawPieceTables[6][32];
- 
- int main() {
- 
- 	initializeParameters();
- 
-+	for(uint16_t type = 0; type < 6; type++) {
-+
-+		for(uint16_t field = 0; field < 32; field++) {
-+
-+			int16_t value = rawPieceTables[type][field];
-+			uint16_t file = field % 4;
-+			uint16_t row = field/4;
-+			pieceTables[type][white][8*row+file] = value;
-+			pieceTables[type][white][8*row+7-file] = value;
-+			pieceTables[type][black][8*(7-row)+file] = value;
-+			pieceTables[type][black][8*(7-row)+7-file] = value;
-+		}
-+
-+	}
-+
-+	for(uint16_t type = 0; type < 6; type++) {
-+
-+		for(uint16_t field = 0; field < 32; field++) {
-+
-+			int16_t value = endgameRawPieceTables[type][field];
-+			uint16_t file = field % 4;
-+			uint16_t row = field/4;
-+			endGamepieceTables[type][white][8*row+file] = value;
-+			endGamepieceTables[type][white][8*row+7-file] = value;
-+			endGamepieceTables[type][black][8*(7-row)+file] = value;
-+			endGamepieceTables[type][black][8*(7-row)+7-file] = value;
-+		}
-+
-+	}
-+
-+
-+	for(uint16_t ind=0; ind < 2; ind++) {
-+		for(uint16_t field=0; field < 64; field++) {
-+			endGamepieceTables[6][ind][field] = 0;
-+			pieceTables[6][ind][field] = 0;
-+		}
-+	}
-+
- 	const evalParameters* evalPars =  getEvalParameters();
- 	for(uint32_t index=0; index < 7; index++) {
- 		for(uint32_t t=0; t < 2; t++) {
- 			for(uint32_t k=0; k < 64; k++) {
--				completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+evalPars->figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]/2+evalPars->figureValues[index])) << 16);
-+				completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]+evalPars->figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]/2+evalPars->figureValues[index])) << 16);
- 			}
- 		}
- 	}
-+
-+
- 	std::cout << "ENDGAME" << std::endl;
- 	for(uint32_t index=0; index < 7; index++) {
- 			for(uint32_t t=0; t < 2; t++) {
-diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
-index 6cf5b77..fd21714 100644
---- a/Cpp/src/lib/Defines/pieceTables.cpp
-+++ b/Cpp/src/lib/Defines/pieceTables.cpp
-@@ -9,334 +9,154 @@
- 
- //TODO: We are actually using 1/2 these values - change all values here instead!
- 
--int16_t pieceTables[7][2][64] = {
--		{
--
--				{ //white pawns
--					0,0,0,0,0,0,0,0,
--					0,0,-5,-15,-15,-5,0,0,
--					0,0,10,10,10,10,0,0,
--					0,0,20,30,30,20,0,0,
--					0,0,10,20,20,10,0,0,
--					0,0,10,20,20,10,0,0,
--					50,50,50,50,50,50,50,50,
--					0,0,0,0,0,0,0,0
-+int16_t rawPieceTables[6][32] = {
-+
-+				//pawns
-+				{
-+						0,0,0,0, //a1-d1
-+						0,0,-2,-7, //a2-d2
-+						0,0,5,5, //a3-d3  etc.
-+						0,0,10,15,
-+						0,0,5,10,
-+						0,0,5,10,
-+						25,25,25,25,
-+						0,0,0,0
- 				},
--				{ //black pawns
--						0,0,0,0,0,0,0,0,
--						50,50,50,50,50,50,50,50,
--						0,0,10,20,20,10,0,0,
--						0,0,10,20,20,10,0,0,
--						0,0,20,30,30,20,0,0,
--						0,0,10,10,10,10,0,0,
--						0,0,-5,-15,-15,-5,0,0,
--						0,0,0,0,0,0,0,0
--				}
- 
--		},
--		{
--				{ //white knights
--						-60,-40,-30,-20,-20,-30,-40,-60,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-30,-20, 10, 0, 0, 10, -20, -30,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-30,-20, 10, 20, 20, 10, -20, -30,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-60,-40,-30,-20,-20,-30,-40,-60
--
--				},
--				{ //black knights
--						-60,-40,-30,-20,-20,-30,-40,-60,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-30,-20, 10, 20, 20, 10, -20, -30,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-30,-20, 10, 0, 0, 10, -20, -30,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-60,-40,-30,-20,-20,-30,-40,-60
-+				//knights
-+				{
-+						-30,-20,-15,-10,
-+						-20,-15,-10,-5,
-+						-15,-10, 5, 0,
-+						-10,-2, 7, 15,
-+						-10,-2, 7, 15,
-+						-15,-10, 5, 10,
-+						-20,-15,-10,-5,
-+						-30,-20,-15,-10
-+				} ,
-+
-+				{//bishops
-+						-20,-17,-17,-12,
-+						-5,7,2,7,
-+						-2,2,5,2,
-+						0,7,5,7,
-+						0,10,2,5,
-+						-2,2,5,5,
-+						-7,-5,-5,-5,
-+						-20,-12,-7,-7
- 				},
--		},
--		{
- 
--				{//white bishops
--						-40,-35,-35,-25,-25,-35,-35,-40,
--						-10,15,5,15,15,5,15,-10,
--						-5,5,10,5,5,10,5,-5,
--						0,15,10,15,15,10,15,0,
--						0,20,5,10,10,5,20,0,
--						-5,5,10,10,10,10,5,-5,
--						-15,-10,-10,-10,-10,-10,-10,-15,
--						-40,-25,-15,-15,-15,-15,-25,-40
-+				{ // rooks
-+						0,5,10,15,
-+						-10,-5,0,0,
-+						-7,-2,0,10,
-+						-7,-2,0,0,
-+						-7,-2,0,0,
-+						-7,-2,0,0,
-+						15,15,20,20,
-+						5,10,10,10
- 				},
--				{ //black bishops
--						-40,-25,-15,-15,-15,-15,-25,-40,
--						-15,-10,-10,-10,-10,-10,-10,-15,
--						-5,5,10,10,10,10,5,-5,
--						0,20,5,10,10,5,20,0,
--						0,15,10,15,15,10,15,0,
--						-5,5,10,5,5,10,5,-5,
--						-10,15,5,15,15,5,15,-10,
--						-40,-35,-35,-25,-25,-35,-35,-40,
--				}
--
--
- 
--		},
--
--		{
--				{ //white rooks
--						0,10,20,30,30,20,10,0,
--						-20,-10,0,0,0,0,-10,-20,
--						-15,-5,0,10,10,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						30,30,40,40,40,40,30,30,
--						10,20,20,20,20,20,20,10
-+				{ //queens
-+						-5,0,5,5,
-+						-10,-5,5,7,
-+						-7,-2,0,5,
-+						-7,-2,5,15,
-+						-5,-2,2,10,
-+						-7,-2,5,7,
-+						15,15,20,20,
-+						0,5,10,10
- 				},
--				{ //black rooks
--						10,20,20,20,20,20,20,10,
--						30,30,40,40,40,40,30,30,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,10,10,0,-5,-15,
--						-20,-10,0,0,0,0,-10,-20,
--						0,10,20,30,30,20,10,0
--				}
--		},
--		{
--				{ //white queens
--						-10,0,10,10,10,10,0,-10,
--						-20,-10,10,15,15,10,-10,-20,
--						-15,-5,0,10,10,0,-5,-15,
--						-15,-5,10,30,30,10,-5,-15,
--						-10,-5,5,20,20,5,-5,-10,
--						-15,-5,10,15,15,10,-5,-15,
--						30,30,40,40,40,40,30,30,
--						0,10,20,20,20,20,10,0
- 
--				},
--				{ //black queens
--						0,10,20,20,20,20,10,0,
--						30,30,40,40,40,40,30,30,
--						-15,-5,10,15,15,10,-5,-15,
--						-10,-5,5,20,20,5,-5,-10,
--						-15,-5,10,30,30,10,-5,-15,
--						-15,-5,0,10,10,0,-5,-15,
--						-20,-10,10,15,15,10,-10,-20,
--						-10,0,10,10,10,10,0,-10,
-+				{ // kings
-+						10,15,0,-7,
-+						0,5,-7,-15,
-+						-12,-12,-15,-22,
-+						-20,-25,-30,-35,
-+						-20,-25,-30,-35,
-+						-25,-35,-35,-35,
-+						-25,-35,-35,-35,
-+						-25,-35,-35,-35,
- 				}
--		},
--		{
--				{ //white kings
--						20,30,0,-15,-15,0,30,20,
--						0,10,-15,-30,-30,-15,10,0,
--						-25,-25,-30,-45,-45,-30,-25,-25,
--						-40,-50,-60,-70,-70,-60,-50,-40,
--						-40,-50,-60,-70,-70,-60,-50,-40,
--						-50,-70,-70,-70,-70,-70,-70,-50,
--						-50,-70,-70,-70,-70,-70,-70,-50,
--						-50,-70,-70,-70,-70,-70,-70,-50
--				},
--				{ //black kings
--						-50,-70,-70,-70,-70,-70,-70,-50,
--						-50,-70,-70,-70,-70,-70,-70,-50,
--						-50,-70,-70,-70,-70,-70,-70,-50,
--						-40,-50,-60,-70,-70,-60,-50,-40,
--						-40,-50,-60,-70,-70,-60,-50,-40,
--						-25,-25,-30,-45,-45,-30,-25,-25,
--						0,10,-15,-30,-30,-15,10,0,
--						 20,30,0,-15,-15,0,30,20,
--				}
--		},
--		{			//non-captures
--					{
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0
--					},
--					{
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0
--					}
- 
--			}
-+};
- 
-+int16_t endgameRawPieceTables[6][32] = {
-+	//pawns
-+	{
-+			0,0,0,0,
-+			0,0,-5,-15,
-+			10,10,10,10,
-+			20,10,10,10,
-+			30,20,20,20,
-+			40,30,30,30,
-+			50,50,50,50,
-+			0,0,0,0
-+	},
-+
-+	//knights
-+	{
-+			-60,-40,-30,-20,
-+			-40,-30,-20,-10,
-+			-30,-20, 10, 0,
-+			-20,-5, 15, 30,
-+			-20,-5, 15, 30,
-+			-30,-20, 10, 20,
-+			-40,-30,-20,-10,
-+			-60,-40,-30,-20
-+	} ,
-+
-+	{//bishops
-+			-30,-15,-15,-10,
-+			-10,15,5,15,
-+			-5,5,10,5,
-+			0,15,10,15,
-+			0,20,5,10,
-+			-5,5,10,10,
-+			-15,-10,-10,-10,
-+			-40,-25,-15,-15
-+	},
-+
-+	{ // rooks
-+			0,10,20,30,
-+			-20,-10,0,0,
-+			-15,-5,0,10,
-+			-15,-5,0,0,
-+			-15,-5,0,0,
-+			-15,-5,0,0,
-+			10,20,20,20,
-+			10,20,20,20
-+	},
-+
-+	{ //queens
-+			-10,0,10,10,
-+			-20,-10,10,15,
-+			-15,-5,0,10,
-+			-15,-5,10,30,
-+			-10,-5,5,20,
-+			-15,-5,10,15,
-+			-20,-10,10,15,
-+			 0,10,20,20
-+	},
-+
-+	{ // kings
-+			-200,-140,-80,-50,
-+			-140,-100,-60,-20,
-+			-80,-60,-20, 20,
-+			-50,-20, 20, 60,
-+			-50,-20, 20, 60,
-+			-80,-60,-20, 20,
-+			-140,-100,-60,-20,
-+			-200,-140,-80,-50
-+	}
- 
--};
- 
-+};
- 
--int16_t endGamepieceTables[7][2][64] = {
--		{
--				{ //white pawns
--					0,0,0,0,0,0,0,0,
--					0,0,-5,-15,-15,-5,0,0,
--					10,10,10,10,10,10,10,10,
--					20,10,10,10,10,10,10,20,
--					30,20,20,20,20,20,20,30,
--					40,30,30,30,30,30,30,40,
--					50,50,50,50,50,50,50,50,
--					0,0,0,0,0,0,0,0
--				},
--				{ //black pawns
--						0,0,0,0,0,0,0,0,
--						50,50,50,50,50,50,50,50,
--						40,30,30,30,30,30,30,40,
--						30,20,20,20,20,20,20,30,
--						20,10,10,10,10,10,10,20,
--						10,10,10,10,10,10,10,10,
--						0,0,-5,-15,-15,-5,0,0,
--						0,0,0,0,0,0,0,0
--				}
--		},
--		{
--				{ //white knights
--						-60,-40,-30,-20,-20,-30,-40,-60,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-30,-20, 10, 0, 0, 10, -20, -30,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-30,-20, 10, 20, 20, 10, -20, -30,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-60,-40,-30,-20,-20,-30,-40,-60
- 
--				},
--				{ //black knights
--						-60,-40,-30,-20,-20,-30,-40,-60,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-30,-20, 10, 20, 20, 10, -20, -30,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-20,-5, 15, 30, 30, 15, -5, -20,
--						-30,-20, 10, 0, 0, 10, -20, -30,
--						-40,-30,-20,-10,-10,-20,-30,-40,
--						-60,-40,-30,-20,-20,-30,-40,-60
--				},
--		},
--		{
--				{//white bishops
--						-30,-15,-15,-10,-10,-15,-15,-30,
--						-10,15,5,15,15,5,15,-10,
--						-5,5,10,5,5,10,5,-5,
--						0,15,10,15,15,10,15,0,
--						0,20,5,10,10,5,20,0,
--						-5,5,10,10,10,10,5,-5,
--						-15,-10,-10,-10,-10,-10,-10,-15,
--						-40,-25,-15,-15,-15,-15,-25,-40
--				},
--				{ //black bishops
--						-40,-25,-15,-15,-15,-15,-25,-40,
--						-15,-10,-10,-10,-10,-10,-10,-15,
--						-5,5,10,10,10,10,5,-5,
--						0,20,5,10,10,5,20,0,
--						0,15,10,15,15,10,15,0,
--						-5,5,10,5,5,10,5,-5,
--						-10,15,5,15,15,5,15,-10,
--						-30,-15,-15,-10,-10,-15,-15,-30,
--				}
--		},
-+int16_t pieceTables[7][2][64];
- 
--		{
--				{ //white rooks
--						0,10,20,30,30,20,10,0,
--						-20,-10,0,0,0,0,-10,-20,
--						-15,-5,0,10,10,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						10,20,20,20,20,20,20,10,
--						10,20,20,20,20,20,20,10
--				},
--				{ //black rooks
--						10,20,20,20,20,20,20,10,
--						10,20,20,20,20,20,20,10,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,0,0,0,-5,-15,
--						-15,-5,0,10,10,0,-5,-15,
--						-20,-10,0,0,0,0,-10,-20,
--						0,10,20,30,30,20,10,0
--				}
--		},
--		{
--				{ //white queens
--						-10,0,10,10,10,10,0,-10,
--						-20,-10,10,15,15,10,-10,-20,
--						-15,-5,0,10,10,0,-5,-15,
--						-15,-5,10,30,30,10,-5,-15,
--						-10,-5,5,20,20,5,-5,-10,
--						-15,-5,10,15,15,10,-5,-15,
--						-20,-10,10,15,15,10,-10,-20,
--						0,10,20,20,20,20,10,0
- 
--				},
--				{ //black queens
--						0,10,20,20,20,20,10,0,
--						-20,-10,10,15,15,10,-10,-20,
--						-15,-5,10,15,15,10,-5,-15,
--						-10,-5,5,20,20,5,-5,-10,
--						-15,-5,10,30,30,10,-5,-15,
--						-15,-5,0,10,10,0,-5,-15,
--						-20,-10,10,15,15,10,-10,-20,
--						-10,0,10,10,10,10,0,-10,
--				}
--		},
--		{
--				{ //white kings
--						-200,-140,-80,-50,-50,-80,-140,-200,
--						-140,-100,-60,-20,-20,-60,-100,-140,
--						-80,-60,-20, 20, 20,-20,-60,-80,
--						-50,-20, 20, 60, 60, 20,-20,-50,
--						-50,-20, 20, 60, 60, 20,-20,-50,
--						-80,-60,-20, 20, 20,-20,-60,-80,
--						-140,-100,-60,-20,-20,-60,-100,-140,
--						-200,-140,-80,-50,-50,-80,-140,-200,
--				},
--				{ //black kings
--						-200,-140,-80,-50,-50,-80,-140,-200,
--						-140,-100,-60,-20,-20,-60,-100,-140,
--						-80,-60,-20, 20, 20,-20,-60,-80,
--						-50,-20, 20, 60, 60, 20,-20,-50,
--						-50,-20, 20, 60, 60, 20,-20,-50,
--						-80,-60,-20, 20, 20,-20,-60,-80,
--						-140,-100,-60,-20,-20,-60,-100,-140,
--						-200,-140,-80,-50,-50,-80,-140,-200,
--				}
--		},
--		{			//non-captures
--					{
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0
--					},
--					{
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0,
--							0,0,0,0,0,0,0,0
--					}
--			}
--};
-+int16_t endGamepieceTables[7][2][64];
- 
- int32_t completePieceTables[7][2][64];
-diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
-index 738109a..df17679 100644
---- a/chessGui/.idea/workspace.xml
-+++ b/chessGui/.idea/workspace.xml
-@@ -69,11 +69,11 @@
-           </provider>
-         </entry>
-       </file>
--      <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
-+      <file leaf-file-name="Main.java" pinned="false" current-in-tab="false">
-         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
-           <provider selected="true" editor-type-id="text-editor">
--            <state relative-caret-position="1019">
--              <caret line="157" column="9" selection-start-line="157" selection-start-column="9" selection-end-line="157" selection-end-column="9" />
-+            <state relative-caret-position="315">
-+              <caret line="137" column="25" selection-start-line="137" selection-start-column="25" selection-end-line="137" selection-end-column="25" />
-               <folding />
-             </state>
-           </provider>
-@@ -82,8 +82,8 @@
-       <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
-         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-           <provider selected="true" editor-type-id="text-editor">
--            <state relative-caret-position="1725">
--              <caret line="126" column="47" selection-start-line="126" selection-start-column="35" selection-end-line="126" selection-end-column="47" />
-+            <state relative-caret-position="202">
-+              <caret line="83" column="18" selection-start-line="83" selection-start-column="18" selection-end-line="83" selection-end-column="18" />
-               <folding />
-             </state>
-           </provider>
-@@ -109,11 +109,11 @@
-           </provider>
-         </entry>
-       </file>
--      <file leaf-file-name="uciEngineHandler.java" pinned="false" current-in-tab="false">
-+      <file leaf-file-name="uciEngineHandler.java" pinned="false" current-in-tab="true">
-         <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
-           <provider selected="true" editor-type-id="text-editor">
--            <state relative-caret-position="1095">
--              <caret line="75" column="16" selection-start-line="75" selection-start-column="16" selection-end-line="75" selection-end-column="16" />
-+            <state relative-caret-position="75">
-+              <caret line="77" column="42" selection-start-line="77" selection-start-column="42" selection-end-line="77" selection-end-column="42" />
-               <folding />
-             </state>
-           </provider>
-@@ -190,9 +190,9 @@
-         <option value="$PROJECT_DIR$/params2/params.txt" />
-         <option value="$PROJECT_DIR$/params2/fens.txt" />
-         <option value="$PROJECT_DIR$/params2/fen.txt" />
--        <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
-         <option value="$PROJECT_DIR$/src/Library/FenHelper.java" />
-         <option value="$PROJECT_DIR$/src/sample/Main.java" />
-+        <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
-       </list>
-     </option>
-   </component>
-@@ -607,8 +607,8 @@
-     <option name="totallyTimeSpent" value="1302000" />
-   </component>
-   <component name="ToolWindowManager">
--    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
--    <editor active="false" />
-+    <frame x="0" y="24" width="1920" height="1056" extended-state="7" />
-+    <editor active="true" />
-     <layout>
-       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
-@@ -617,7 +617,7 @@
-       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.060020346" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
-       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
-       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
--      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-+      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
-       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-       <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
-@@ -959,6 +959,9 @@
-       <provider selected="true" editor-type-id="text-editor">
-         <state relative-caret-position="540">
-           <caret line="39" column="0" selection-start-line="13" selection-start-column="4" selection-end-line="39" selection-end-column="0" />
-+          <folding>
-+            <element signature="imports" expanded="false" />
-+          </folding>
-         </state>
-       </provider>
-     </entry>
-@@ -966,6 +969,11 @@
-       <provider selected="true" editor-type-id="text-editor">
-         <state relative-caret-position="915">
-           <caret line="67" column="7" selection-start-line="67" selection-start-column="7" selection-end-line="67" selection-end-column="7" />
-+          <folding>
-+            <element signature="imports" expanded="false" />
-+            <element signature="e#291#292#0" expanded="false" />
-+            <element signature="e#325#326#0" expanded="false" />
-+          </folding>
-         </state>
-       </provider>
-     </entry>
-@@ -990,22 +998,6 @@
-         </state>
-       </provider>
-     </entry>
--    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
--      <provider selected="true" editor-type-id="text-editor">
--        <state relative-caret-position="1725">
--          <caret line="126" column="47" selection-start-line="126" selection-start-column="35" selection-end-line="126" selection-end-column="47" />
--          <folding />
--        </state>
--      </provider>
--    </entry>
--    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
--      <provider selected="true" editor-type-id="text-editor">
--        <state relative-caret-position="1095">
--          <caret line="75" column="16" selection-start-line="75" selection-start-column="16" selection-end-line="75" selection-end-column="16" />
--          <folding />
--        </state>
--      </provider>
--    </entry>
-     <entry file="file://$PROJECT_DIR$/fens.txt">
-       <provider selected="true" editor-type-id="text-editor">
-         <state relative-caret-position="870">
-@@ -1032,8 +1024,24 @@
-     </entry>
-     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
-       <provider selected="true" editor-type-id="text-editor">
--        <state relative-caret-position="1019">
--          <caret line="157" column="9" selection-start-line="157" selection-start-column="9" selection-end-line="157" selection-end-column="9" />
-+        <state relative-caret-position="315">
-+          <caret line="137" column="25" selection-start-line="137" selection-start-column="25" selection-end-line="137" selection-end-column="25" />
-+          <folding />
-+        </state>
-+      </provider>
-+    </entry>
-+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-+      <provider selected="true" editor-type-id="text-editor">
-+        <state relative-caret-position="202">
-+          <caret line="83" column="18" selection-start-line="83" selection-start-column="18" selection-end-line="83" selection-end-column="18" />
-+          <folding />
-+        </state>
-+      </provider>
-+    </entry>
-+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
-+      <provider selected="true" editor-type-id="text-editor">
-+        <state relative-caret-position="75">
-+          <caret line="77" column="42" selection-start-line="77" selection-start-column="42" selection-end-line="77" selection-end-column="42" />
-           <folding />
-         </state>
-       </provider>
-diff --git a/chessGui/src/sample/Main.java b/chessGui/src/sample/Main.java
-index 8ddb214..ee14e18 100644
---- a/chessGui/src/sample/Main.java
-+++ b/chessGui/src/sample/Main.java
-@@ -133,9 +133,9 @@ public class Main extends Application {
- 
-         while(wins+draws+losses < 30000) {
- 
--            wins = 0;
--            draws = 0;
--            losses = 0;
-+            wins = 1201;
-+            draws = 1010;
-+            losses = 1248;
- 
-             for(int ind=0; ind < 3; ind++) {
-                 int[] res = processesList[ind].getCurrentResult();
-diff --git a/chessGui/src/uciClient/uciEngineHandler.java b/chessGui/src/uciClient/uciEngineHandler.java
-index 7ad890a..9ec8567 100644
---- a/chessGui/src/uciClient/uciEngineHandler.java
-+++ b/chessGui/src/uciClient/uciEngineHandler.java
-@@ -14,7 +14,7 @@ public class uciEngineHandler {
-     Process process;
-     BufferedReader reader;
-     BufferedWriter writer;
--
-+    ArrayList<String> moves = new ArrayList<>();
- 
-     private void put(String s) throws IOException{
-         //System.out.println(s);
-@@ -75,7 +75,7 @@ public class uciEngineHandler {
- 
-     public void setPosition(String fenPosition, List<String> moveList) throws IOException{
-         String putStr = "position fen "+fenPosition;
--
-+        moves = new ArrayList<>(moveList);
-         if(moveList.size() > 0){
-             putStr = putStr+" moves";
- 
-@@ -100,6 +100,20 @@ public class uciEngineHandler {
-         while(true){
- 
-             String answer = reader.readLine();
-+            if(answer != null)  {
-+                moves.add(answer);
-+            } else {
-+                for(String m: moves ){
-+                    System.out.println(m);
-+                }
-+
-+                try {
-+                    Thread.sleep(1000);
-+                } catch (InterruptedException e) {
-+                    e.printStackTrace();
-+                }
-+            }
-+
-             //System.out.println(answer);
-             String[] splitted = answer.split(" ");
-             if("bestmove".equals(splitted[0])){
-diff --git a/output b/output
-deleted file mode 100644
-index e69de29..0000000
-diff --git a/to_checkin.diff b/to_checkin.diff
-index 2353cf6..1644cae 100644
---- a/to_checkin.diff
-+++ b/to_checkin.diff
-@@ -1,11560 +0,0 @@
--diff --git a/Cpp/.cproject b/Cpp/.cproject
--index ed66696..123e2f1 100644
----- a/Cpp/.cproject
--+++ b/Cpp/.cproject
--@@ -106,7 +106,7 @@
-- 							</tool>
-- 							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.release.1570629757" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.release"/>
-- 							<tool command="g++" id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release.1807986095" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release">
---								<option id="gnu.cpp.link.option.debugging.gprof.991351659" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="true" valueType="boolean"/>
--+								<option id="gnu.cpp.link.option.debugging.gprof.991351659" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="false" valueType="boolean"/>
-- 								<option id="gnu.cpp.link.option.flags.1898320997" name="Linker flags" superClass="gnu.cpp.link.option.flags" useByScannerDiscovery="false" value="" valueType="string"/>
-- 								<option id="gnu.cpp.link.option.libs.1443749932" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" useByScannerDiscovery="false" valueType="libs">
-- 									<listOptionValue builtIn="false" value="pthread"/>
--diff --git a/Cpp/.settings/language.settings.xml b/Cpp/.settings/language.settings.xml
--index 62dcdb8..0e2f056 100644
----- a/Cpp/.settings/language.settings.xml
--+++ b/Cpp/.settings/language.settings.xml
--@@ -16,7 +16,7 @@
-- 			<provider copy-of="extension" id="org.eclipse.cdt.ui.UserLanguageSettingsProvider"/>
-- 			<provider-reference id="org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider" ref="shared-provider"/>
-- 			<provider-reference id="org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider" ref="shared-provider"/>
---			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="918514242823015354" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot; -std=c++11" prefer-non-shared="true">
--+			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="875548846223293826" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot;" prefer-non-shared="true">
-- 				<language-scope id="org.eclipse.cdt.core.gcc"/>
-- 				<language-scope id="org.eclipse.cdt.core.g++"/>
-- 			</provider>
--@@ -27,7 +27,7 @@
-- 			<provider copy-of="extension" id="org.eclipse.cdt.ui.UserLanguageSettingsProvider"/>
-- 			<provider-reference id="org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider" ref="shared-provider"/>
-- 			<provider-reference id="org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider" ref="shared-provider"/>
---			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="918514242823015354" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot; -std=c++11" prefer-non-shared="true">
--+			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="875548846223293826" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot;" prefer-non-shared="true">
-- 				<language-scope id="org.eclipse.cdt.core.gcc"/>
-- 				<language-scope id="org.eclipse.cdt.core.g++"/>
-- 			</provider>
--@@ -38,7 +38,7 @@
-- 			<provider copy-of="extension" id="org.eclipse.cdt.ui.UserLanguageSettingsProvider"/>
-- 			<provider-reference id="org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider" ref="shared-provider"/>
-- 			<provider-reference id="org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider" ref="shared-provider"/>
---			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="918514242823015354" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot; -std=c++11" prefer-non-shared="true">
--+			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="875548846223293826" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot;" prefer-non-shared="true">
-- 				<language-scope id="org.eclipse.cdt.core.gcc"/>
-- 				<language-scope id="org.eclipse.cdt.core.g++"/>
-- 			</provider>
--@@ -49,7 +49,7 @@
-- 			<provider copy-of="extension" id="org.eclipse.cdt.ui.UserLanguageSettingsProvider"/>
-- 			<provider-reference id="org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider" ref="shared-provider"/>
-- 			<provider-reference id="org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider" ref="shared-provider"/>
---			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="918514242823015354" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot; -std=c++11" prefer-non-shared="true">
--+			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="875548846223293826" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot;" prefer-non-shared="true">
-- 				<language-scope id="org.eclipse.cdt.core.gcc"/>
-- 				<language-scope id="org.eclipse.cdt.core.g++"/>
-- 			</provider>
--@@ -60,7 +60,7 @@
-- 			<provider copy-of="extension" id="org.eclipse.cdt.ui.UserLanguageSettingsProvider"/>
-- 			<provider-reference id="org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider" ref="shared-provider"/>
-- 			<provider-reference id="org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider" ref="shared-provider"/>
---			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="865541424691419234" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot; -std=c++11" prefer-non-shared="true">
--+			<provider class="org.eclipse.cdt.managedbuilder.language.settings.providers.GCCBuiltinSpecsDetector" console="false" env-hash="869124104878979242" id="org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector" keep-relative-paths="false" name="CDT GCC Built-in Compiler Settings" parameter="${COMMAND} ${FLAGS} -E -P -v -dD &quot;${INPUTS}&quot;" prefer-non-shared="true">
-- 				<language-scope id="org.eclipse.cdt.core.gcc"/>
-- 				<language-scope id="org.eclipse.cdt.core.g++"/>
-- 			</provider>
--diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
--index 9f1a66c..389d8b6 100644
----- a/Cpp/src/Search/moveOrdering.cpp
--+++ b/Cpp/src/Search/moveOrdering.cpp
--@@ -25,7 +25,7 @@ extern uint64_t rookFieldTable[];
-- extern int32_t historyTable[2][64][64];
-- extern int16_t pieceTables[7][2][64];
-- 
---extern uint16_t killerMoves[20][2];
--+extern uint16_t killerMoves[40][2];
-- extern uint64_t bishopMoveTables[64][512];
-- extern uint64_t rookMoveTables[64][4096];
-- #define WHITEKINGCASTLECHESSFIELDS ((1ULL << 4) | (1ULL << 5) | (1ULL << 6))
--@@ -259,10 +259,8 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, bool is
-- 	if(mv->captureType == none){
-- 		int32_t hist = historyTable[position->toMove][mv->sourceField][mv->targetField];
-- 
---
---
---		int32_t historyValue = hist/100; //std::sqrt(std::abs(hist)); //TODO: this is absolutely NOT a good idea performance-wise
---		//historyValue = (hist > 0 ? historyValue: -historyValue);
--+		int32_t historyValue = std::sqrt(std::abs(hist)); //TODO: this is absolutely NOT a good idea performance-wise
--+		historyValue = (hist > 0 ? historyValue: -historyValue);
-- 
-- 
-- 		if(historyValue > 128) {
--diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
--index 324b33d..b2d33dd 100644
----- a/Cpp/src/Search/negamax.cpp
--+++ b/Cpp/src/Search/negamax.cpp
--@@ -155,13 +155,14 @@ static inline bool check_nullmove(chessPosition* position, uint16_t* refutationM
-- 	}
-- 
-- 	makeNullMove(position);
---	chessMove mv;
---	mv.targetField = 64;
-- 	searchCounts.nullMovePruningTried++;
---	int32_t value = -negamax(position, ply+1, max_ply-nullmoveReductions[depth], depth-1-nullmoveReductions[depth], -beta, -beta+1, &mv, false);
--+	pvLine dummy;
--+	dummy.numMoves = 0;
--+	dummy.line[0].targetField = NO_REFUTATION;
--+	int32_t value = -negamax(position, ply+1, max_ply-nullmoveReductions[depth], depth-1-nullmoveReductions[depth], -beta, -beta+1, &dummy, false);
-- 	undoNullMove(position);
-- 	if(value < beta) {
---		*refutationMoveTarget = mv.targetField;
--+		*refutationMoveTarget = dummy.line[0].targetField;
-- 		assert(*refutationMoveTarget < 65);
-- 		return false; //didnt manage a cutoff :(
-- 	}
--@@ -169,23 +170,29 @@ static inline bool check_nullmove(chessPosition* position, uint16_t* refutationM
-- 	return true;
-- }
-- 
---static inline bool checkHashTable(int16_t* eval, uint16_t* hashMove, bool doHashProbe, uint64_t zobristHash, int16_t alpha, int16_t beta, int16_t depth) {
--+static inline bool checkHashTable(int16_t* eval, uint16_t* hashMove, bool doHashProbe, uint64_t zobristHash, int16_t* alpha, int16_t* beta, int16_t depth) {
-- 	hashEntry hashVal      = getHashTableEntry(zobristHash);
-- 	uint32_t zobristHigher = (uint32_t) (zobristHash >> 32);
-- 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristHash & 0xFFFFFFFF)) >> 16);
---	*hashMove = hashVal.bestMove;
--+	bool isHit = (zobristHigher == hashVal.hashHighBits) && (zobristLower == hashVal.hashLower);
--+
--+	if(isHit) {
--+		*hashMove = hashVal.bestMove;
--+	}
--+
--+	assert( !((*hashMove != 0) && !isHit));
-- 	if(doHashProbe){ //TODO: we should check whether another move leads to 3fold rep draw!
---		if((zobristHigher == hashVal.hashHighBits) && (zobristLower == hashVal.hashLower)) { //TODO: assign bestMove - this can blow up in our face easily TODO: add proper checkmate handling
--+		if(isHit) { //TODO: assign bestMove - this can blow up in our face easily TODO: add proper checkmate handling
-- 			int16_t oldEval  = hashVal.eval;
-- 			if((depth <= hashVal.depth) && (oldEval > -10000) && (oldEval < 10000) && (oldEval != 0)){ //TODO: the != 0 is stupid, but somehwere something goes wrong with 3fold rep scores, so excluded ehre for safety
---				if( ((hashVal.flag == FAILHIGH) || (hashVal.flag == FULLSEARCH)) && (oldEval >= beta)){
--+				if( ((hashVal.flag == FAILHIGH) || (hashVal.flag == FULLSEARCH)) && (oldEval >= *beta)){
-- 					setSearchId(searchId, zobristHash, hashVal.index);
---					*eval = beta;
--+					*eval = *beta;
-- 					return true;
-- 				}
---				else if( ((hashVal.flag == FAILLOW) || (hashVal.flag == FULLSEARCH)) && (oldEval <= alpha)){
--+				else if( ((hashVal.flag == FAILLOW) || (hashVal.flag == FULLSEARCH)) && (oldEval <= *alpha)){
-- 					setSearchId(searchId, zobristHash, hashVal.index);
---					*eval =  alpha; //node will fail low
--+					*eval =  *alpha; //node will fail low
-- 					return true;
-- 				}
-- 				else if((hashVal.flag == FULLSEARCH)){ //TODO: this condition can be vastly improved
--@@ -248,7 +255,7 @@ static inline void checkTimeout() {
-- 
-- uint64_t gotHashMove = 0;
-- uint64_t noHashMove   = 0;
---int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe){
--+int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, pvLine* PV, bool allowNullMove, bool doHashProbe){
-- 
-- 	/*std::string pos =chessPositionToFenString(*position);
-- 	plogger << pos << std::endl;
--@@ -258,9 +265,12 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	}*/
-- 	//check for timeout/interruption
-- 	//------------------------------
--+	uint16_t numMoves = PV->numMoves;
-- 	if(depth > 3) { //TODO: be careful here - we may have to reset the stack in quiescence search as well!
--+		PV->numMoves = 0;
-- 		checkTimeout();
-- 	}
--+	PV->numMoves = numMoves;
-- 	assert(alpha < beta);
-- 	assert(ply+depth <= max_ply);
-- 
--@@ -268,7 +278,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 
-- 	//50 move rule
-- 	//-----------------------------
---	if(position->data.fiftyMoveRuleCounter >= 100){
--+	if((ply > 0) && (position->data.fiftyMoveRuleCounter >= 100)){
--+		PV->numMoves = 0;
-- 		return 0;
-- 	}
-- 
--@@ -277,6 +288,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	if ((ply > 0) && (repetitionData[position->zobristHash & 16383] > 1)) {
-- 		if (backtrack_position_for_repetition(position)) {
-- 			searchCounts.threefold_repetitions++;
--+			PV->numMoves = 0;
-- 			return 0;
-- 		} else {
-- 			searchCounts.fake_3fold_repetitions++;
--@@ -287,7 +299,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	//----------------------------------------
-- 	uint16_t hashmove = 0;
-- 	int16_t hashEval = 0;
---	if(checkHashTable(&hashEval, &hashmove, doHashProbe, position->zobristHash, alpha, beta, depth)) {
--+	if(checkHashTable(&hashEval, &hashmove, doHashProbe, position->zobristHash, &alpha, &beta, depth)) {
--+		PV->numMoves = 0;
-- 		return hashEval;
-- 	}
-- 
--@@ -295,7 +308,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	//---------------------------
-- 	if(depth <= 0) {
-- 		searchCounts.wentToQuiescence++;
---		return negamaxQuiescence(position, alpha, beta, 0);
--+		PV->numMoves = 0;
--+		return negamaxQuiescence(position, ply, alpha, beta, 0);
-- 	}
-- 
-- 	//try nullmove pruning
--@@ -305,6 +319,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	bool movingSideInCheck = isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing));
-- 	if(allowNullMove && !movingSideInCheck && (depth >= 2)){
-- 		if(check_nullmove(position, &refutationTarget, ply, max_ply, depth, beta)){
--+			PV->numMoves = 0;
-- 			return beta;
-- 		}
-- 	}
--@@ -313,7 +328,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	//-----------------
-- 	if(depth == 1) {
-- 		if(check_futility(movingSideInCheck, alpha, position)) {
---			return  negamaxQuiescence(position, alpha, beta, 0);
--+			PV->numMoves = 0;
--+			return  negamaxQuiescence(position, ply+1, alpha, beta, 0);
-- 		}
-- 	}
-- 
--@@ -348,6 +364,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	//-------------------------------------------
-- 	int16_t bestIndex = -1;
-- 
--+	pvLine localPV;
--+	localPV.numMoves = 0;
-- 	for(uint16_t ind=0; ind < moves.length; ind++){
-- 		if(ind == 1){
-- 			//first move didn't produce cutoff, now we need to sort
--@@ -389,7 +407,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 		searchCounts.nodes[depth]++;
-- 		searchCounts.totalNodes++;
-- 		legalMovesAvailable = true;
---		chessMove mv;
--+
-- 		uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
-- 
-- 		//check whether last move gave check (so its a check-check)
--@@ -405,7 +423,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 		//PVSearch, currently a small gain for us with the > 3
-- 		//-------------------------------------------------
-- 		if(((ind > 3) || foundGoodMove )&& (depth > 2)) {
---			int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &mv);
--+			int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &localPV);
-- 			if(value < alpha+1){
-- 				undoMove(position);
-- 				continue;
--@@ -414,14 +432,16 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 
-- 		//this is the real, full-fledged search now
-- 		//-------------------------------------------
---		int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
--+		int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &localPV);
-- 
-- 		//in case move is better than previous, remember
-- 		//------------------------------------------------
-- 		if(value > alpha){
-- 			foundGoodMove = true;
-- 			alpha = value;
---			*bestMove = moves[ind];
--+			PV->line[0] = moves[ind];
--+			memcpy(PV->line+1, localPV.line, localPV.numMoves*sizeof(chessMove));
--+			PV->numMoves =  localPV.numMoves+1;
-- 			bestIndex = ind;
-- 		}
-- 
--@@ -430,11 +450,11 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 		//in case of beta cutoff, leave
-- 		//----------------------------------
-- 		if((alpha >= beta)) {
---			handleBetaCutoff(bestMove, position->zobristHash, beta, depth, ply, searchId);
--+			handleBetaCutoff(&PV->line[0], position->zobristHash, beta, depth, ply, searchId);
-- 			if(bestIndex != -1){
-- 				searchCounts.bestIndex[depth][bestIndex]++;
---				if(bestMove->captureType == none) {
---					updateHistoryTables(bestMove, depth, &moves, bestIndex, position->toMove);
--+				if(PV->line[0].captureType == none) {
--+					updateHistoryTables(&PV->line[0], depth, &moves, bestIndex, position->toMove);
-- 				}
-- 			}
-- 			qmvStack.release();
--@@ -446,7 +466,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	//no cutoff. Check whether we found a good move, mate/stalemate handling accordingly. Then Cleanup/bookkeeping, then return alpha
-- 	//-------------------------------------------------
-- 	if(bestIndex != -1){
---		updateHistoryTables(bestMove, depth, &moves, bestIndex, position->toMove);
--+		updateHistoryTables(&PV->line[0], depth, &moves, bestIndex, position->toMove);
-- 		searchCounts.bestIndex[depth][bestIndex]++;
-- 	}
-- 
--@@ -463,7 +483,14 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
-- 	//set hash entry
-- 	//----------------------
-- 	if(foundGoodMove) {
---		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
--+		setHashEntry(FULLSEARCH, alpha, depth, searchId, (PV->line[0].sourceField | (PV->line[0].targetField << 8)), position->zobristHash);
--+		if(PV->line[0].captureType == none){
--+				uint16_t toRemember = (PV->line[0].sourceField | (PV->line[0].targetField << 8));
--+				if ( (killerMoves[ply][0] != toRemember)) {
--+					killerMoves[ply][1] = killerMoves[ply][0];
--+					killerMoves[ply][0] = toRemember;
--+				}
--+			}
-- 	} else { //we failed low, remember as well
-- 		setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
-- 	}
--diff --git a/Cpp/src/Search/quiescence.cpp b/Cpp/src/Search/quiescence.cpp
--index d536a99..4f5c9c5 100644
----- a/Cpp/src/Search/quiescence.cpp
--+++ b/Cpp/src/Search/quiescence.cpp
--@@ -63,17 +63,16 @@ void resetSortqCalled(){
-- static moveStack mvStack;
-- 
-- 
---int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta, uint16_t depth) {
--+int16_t negamaxQuiescence(chessPosition* position, uint16_t ply, int16_t alpha, int16_t beta, uint16_t depth) {
-- 
-- 	assert(alpha < beta);
-- 	const evalParameters* evalPars 						= getEvalParameters();
---//#ifdef EXPERIMENTAL
-- 	uint64_t ownKing = position->pieceTables[position->toMove][king];
-- 	if(isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing))) {
---		chessMove mv;
---		return negamax(position, 30,31, 1, alpha, beta, &mv, false, false);
--+		pvLine line;
--+		return negamax(position, ply, ply+1, 1, alpha, beta, &line, false, false);
-- 	}
---//#endif
--+
-- 
-- #ifdef HASH
-- 	hashEntry hashVal      = getHashTableEntry(position->zobristHash);
--@@ -111,9 +110,6 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
-- 		alpha = baseEval;
-- 	}
-- 	if(alpha >= beta) {
---#ifdef HASH
---		//setHashEntry(FAILHIGH, alpha, 0, searchId, 0, position->zobristHash);
---#endif
-- 		return beta;
-- 	}
-- 	//delta pruning preparations
--@@ -166,7 +162,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
-- 
-- 		} else {
-- 			nodes++;
---			int32_t value = -negamaxQuiescence(position, -beta, -alpha, depth+1);
--+			int32_t value = -negamaxQuiescence(position, ply+1, -beta, -alpha, depth+1);
-- 			if(value > alpha){
-- 				alpha = value;
-- 				bestMove = moves[ind];
--diff --git a/Cpp/src/Search/rootSearch.cpp b/Cpp/src/Search/rootSearch.cpp
--index 606296f..0748d63 100644
----- a/Cpp/src/Search/rootSearch.cpp
--+++ b/Cpp/src/Search/rootSearch.cpp
--@@ -4,7 +4,7 @@
--  *  Created on: Nov 6, 2016
--  *      Author: vabi
--  */
---
--+#ifdef NDEF
-- 
-- #include <iostream>
-- #include <lib/basics.hpp>
--@@ -222,3 +222,5 @@ int16_t root_search(chessPosition* position, chessMove* bestMove, int16_t alpha,
-- 	//--------------------------
-- 	return alpha;
-- }
--+
--+#endif
--diff --git a/Cpp/src/Search/search.hpp b/Cpp/src/Search/search.hpp
--index 95722e3..fe5c175 100644
----- a/Cpp/src/Search/search.hpp
--+++ b/Cpp/src/Search/search.hpp
--@@ -11,8 +11,8 @@
-- #define HISTORY_CUTOFF (1ULL << 12)
-- #define NO_REFUTATION 64
-- void rescaleHistoryTable();
---int16_t negamax(chessPosition* position,  uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
---int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta, uint16_t depth);
--+int16_t negamax(chessPosition* position,  uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta,  pvLine* PV, bool allowNullMove = true,  bool allowHashProbe = true);
--+int16_t negamaxQuiescence(chessPosition* position, uint16_t ply, int16_t alpha, int16_t beta, uint16_t depth);
-- int16_t root_search(chessPosition* position, chessMove* bestMove, int16_t alpha, int16_t beta, int16_t depth, uint16_t max_ply, vdt_vector<chessMove>* moves, uint64_t* nodeCounts);
-- void resetNodes();
-- bool calculateStandardSortEvals(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget);
--diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
--index ced23b8..4c82dca 100644
----- a/Cpp/src/Vabi.cpp
--+++ b/Cpp/src/Vabi.cpp
--@@ -41,6 +41,56 @@ int main() {
-- 			}
-- 		}
-- 	}
--+	std::cout << "ENDGAME" << std::endl;
--+	for(uint32_t index=0; index < 7; index++) {
--+			for(uint32_t t=0; t < 2; t++) {
--+				for(uint32_t k=0; k < 64; k++) {
--+						int16_t val1 = endGamepieceTables[index][t][k];
--+						uint16_t file = FILE(k);
--+						uint16_t row = ROW(k);
--+						uint16_t mirrorFile = 7-file;
--+						uint16_t field = 8*row+mirrorFile;
--+						int16_t val2 = endGamepieceTables[index][t][field];
--+
--+						uint16_t bfield = (7-row)*8+file;
--+						int16_t val3 = endGamepieceTables[index][1-t][bfield];
--+
--+						if(val1 != val2) {
--+							std::cout << "East/west" << std::endl;
--+							std::cout << index << " " << t << " " << k << std::endl;
--+						}
--+
--+						if(val1 != val3) {
--+							std::cout << "North/South" << std::endl;
--+							std::cout << index << " " << t << " " << k << std::endl;
--+						}
--+				}
--+			}
--+	}
--+	std::cout << "MIDGAME" << std::endl;
--+	for(uint32_t index=0; index < 7; index++) {
--+			for(uint32_t t=0; t < 2; t++) {
--+				for(uint32_t k=0; k < 64; k++) {
--+						int16_t val1 = pieceTables[index][t][k];
--+						uint16_t file = FILE(k);
--+						uint16_t row = ROW(k);
--+						file = 7-file;
--+						uint16_t field = 8*row+file;
--+						int16_t val2 = pieceTables[index][t][field];
--+						uint16_t bfield = (7-row)*8+file;
--+						int16_t val3 = pieceTables[index][1-t][bfield];
--+						if(val1 != val2) {
--+							std::cout << "East/west" << std::endl;
--+							std::cout << index << " " << t << " " << k << std::endl;
--+						}
--+
--+						if(val1 != val3) {
--+							std::cout << "North/South" << std::endl;
--+							std::cout << index << " " << t << " " << k << std::endl;
--+						}
--+				}
--+			}
--+	}
-- 
-- 	srand (time(NULL));
-- 	fillZobristHash();
--diff --git a/Cpp/src/lib/Attacks/attacks.cpp b/Cpp/src/lib/Attacks/attacks.cpp
--index 39c124b..5aa642e 100644
----- a/Cpp/src/lib/Attacks/attacks.cpp
--+++ b/Cpp/src/lib/Attacks/attacks.cpp
--@@ -241,6 +241,9 @@ AttackTable makeAttackTableWithMobility(const chessPosition* position, playerCol
-- 		uint64_t potentialMoves = rookMoveTables[nextPieceField][hashValue];
-- 		queenAttackTable = queenAttackTable | potentialMoves;
-- 		*mobilityScore = *mobilityScore+popcount(potentialMoves & ~ownPieces);
--+/*#ifdef EXPERIMENTAL
--+		*mobilityScore = *mobilityScore-6;
--+#endif*/
-- 	}
-- 
-- 	//TODO: this could be optimized by merging with the rook table and doing both at once
--@@ -253,6 +256,9 @@ AttackTable makeAttackTableWithMobility(const chessPosition* position, playerCol
-- 		uint64_t potentialMoves = bishopMoveTables[nextPieceField][hashValue];
-- 		queenAttackTable = queenAttackTable | potentialMoves;
-- 		*mobilityScore = *mobilityScore+popcount(potentialMoves & ~ownPieces);
--+	/*#ifdef EXPERIMENTAL
--+		*mobilityScore = *mobilityScore-6;
--+	#endif*/
-- 	}
-- 	retTable.attackTables[queen] = queenAttackTable;
-- 
--diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
--index 68809d1..82cb55b 100644
----- a/Cpp/src/lib/Defines/pieceTables.cpp
--+++ b/Cpp/src/lib/Defines/pieceTables.cpp
--@@ -11,11 +11,34 @@
-- 
-- int16_t pieceTables[7][2][64] = {
-- 		{
--+
--+#ifdef EXPERIMENTAL
--+				{ //white pawns
--+					0,0,0,0,0,0,0,0,
--+					0,0,-5,-15,-15,-5,0,0,
--+					0,0,10,10,10,10,0,0,
--+					0,0,30,40,40,30,0,0,
--+					0,0,20,30,30,20,0,0,
--+					20,20,20,30,30,20,20,20,
--+					50,50,50,50,50,50,50,50,
--+					0,0,0,0,0,0,0,0
--+				},
--+				{ //black pawns
--+						0,0,0,0,0,0,0,0,
--+						50,50,50,50,50,50,50,50,
--+						20,20,20,30,30,20,20,20,
--+						0,0,20,30,30,20,0,0,
--+						0,0,30,40,40,30,0,0,
--+						0,0,10,10,10,10,0,0,
--+						0,0,-5,-15,-15,-5,0,0,
--+						0,0,0,0,0,0,0,0
--+				}
--+#else
-- 				{ //white pawns
-- 					0,0,0,0,0,0,0,0,
---					0,0,-5,-15,-15,0,0,0,
---					0,0,10,10,10,0,0,0,
---					0,0,20,30,30,0,0,0,
--+					0,0,-5,-15,-15,-5,0,0,
--+					0,0,10,10,10,10,0,0,
--+					0,0,20,30,30,20,0,0,
-- 					0,0,10,20,20,10,0,0,
-- 					0,0,10,20,20,10,0,0,
-- 					50,50,50,50,50,50,50,50,
--@@ -26,11 +49,14 @@ int16_t pieceTables[7][2][64] = {
-- 						50,50,50,50,50,50,50,50,
-- 						0,0,10,20,20,10,0,0,
-- 						0,0,10,20,20,10,0,0,
---						0,0,20,30,30,0,0,0,
---						0,0,10,10,10,0,0,0,
---						0,0,-5,-15,-15,0,0,0,
--+						0,0,20,30,30,20,0,0,
--+						0,0,10,10,10,10,0,0,
--+						0,0,-5,-15,-15,-5,0,0,
-- 						0,0,0,0,0,0,0,0
-- 				}
--+
--+
--+#endif
-- 		},
-- 		{
-- 				{ //white knights
--@@ -88,16 +114,16 @@ int16_t pieceTables[7][2][64] = {
-- 						-20,-10,0,0,0,0,-10,-20,
-- 						-15,-5,0,10,10,0,-5,-15,
-- 						-15,-5,0,0,0,0,-5,-15,
---						-10,-5,0,0,0,0,-5,-10,
---						-15,-5,0,0,0,0,-5,15,
--+						-15,-5,0,0,0,0,-5,-15,
--+						-15,-5,0,0,0,0,-5,-15,
-- 						30,30,40,40,40,40,30,30,
-- 						10,20,20,20,20,20,20,10
-- 				},
-- 				{ //black rooks
-- 						10,20,20,20,20,20,20,10,
-- 						30,30,40,40,40,40,30,30,
---						0,0,0,0,0,0,0,0,
---						0,0,0,0,0,0,0,0,
--+						-15,-5,0,0,0,0,-5,-15,
--+						-15,-5,0,0,0,0,-5,-15,
-- 						-15,-5,0,0,0,0,-5,-15,
-- 						-15,-5,0,10,10,0,-5,-15,
-- 						-20,-10,0,0,0,0,-10,-20,
--@@ -111,7 +137,7 @@ int16_t pieceTables[7][2][64] = {
-- 						-15,-5,0,10,10,0,-5,-15,
-- 						-15,-5,10,30,30,10,-5,-15,
-- 						-10,-5,5,20,20,5,-5,-10,
---						-15,-5,10,15,15,10,-5,15,
--+						-15,-5,10,15,15,10,-5,-15,
-- 						30,30,40,40,40,40,30,30,
-- 						0,10,20,20,20,20,10,0
-- 
--@@ -119,7 +145,7 @@ int16_t pieceTables[7][2][64] = {
-- 				{ //black queens
-- 						0,10,20,20,20,20,10,0,
-- 						30,30,40,40,40,40,30,30,
---						-15,-5,10,15,15,10,-5,15,
--+						-15,-5,10,15,15,10,-5,-15,
-- 						-10,-5,5,20,20,5,-5,-10,
-- 						-15,-5,10,30,30,10,-5,-15,
-- 						-15,-5,0,10,10,0,-5,-15,
--@@ -131,8 +157,8 @@ int16_t pieceTables[7][2][64] = {
-- 				{ //white kings
-- 						20,30,0,-15,-15,0,30,20,
-- 						0,10,-15,-30,-30,-15,10,0,
---						-25,-25,-30,-25,-25,-20,-15,-15,
---						-40,-40,-40,-50,-50,-40,-40,-40,
--+						-25,-25,-30,-45,-45,-30,-25,-25,
--+						-40,-50,-60,-70,-70,-60,-50,-40,
-- 						-40,-50,-60,-70,-70,-60,-50,-40,
-- 						-50,-70,-70,-70,-70,-70,-70,-50,
-- 						-50,-70,-70,-70,-70,-70,-70,-50,
--@@ -144,7 +170,7 @@ int16_t pieceTables[7][2][64] = {
-- 						-50,-70,-70,-70,-70,-70,-70,-50,
-- 						-40,-50,-60,-70,-70,-60,-50,-40,
-- 						-40,-50,-60,-70,-70,-60,-50,-40,
---						-25,-25,-30,-25,-25,-20,-15,-15,
--+						-25,-25,-30,-45,-45,-30,-25,-25,
-- 						0,10,-15,-30,-30,-15,10,0,
-- 						 20,30,0,-15,-15,0,30,20,
-- 				}
--@@ -181,7 +207,7 @@ int16_t endGamepieceTables[7][2][64] = {
-- 		{
-- 				{ //white pawns
-- 					0,0,0,0,0,0,0,0,
---					0,0,-5,-15,-15,0,0,0,
--+					0,0,-5,-15,-15,-5,0,0,
-- 					10,10,10,10,10,10,10,10,
-- 					20,10,10,10,10,10,10,20,
-- 					30,20,20,20,20,20,20,30,
--@@ -196,7 +222,7 @@ int16_t endGamepieceTables[7][2][64] = {
-- 						30,20,20,20,20,20,20,30,
-- 						20,10,10,10,10,10,10,20,
-- 						10,10,10,10,10,10,10,10,
---						0,0,-5,-15,-15,0,0,0,
--+						0,0,-5,-15,-15,-5,0,0,
-- 						0,0,0,0,0,0,0,0
-- 				}
-- 		},
--@@ -252,16 +278,16 @@ int16_t endGamepieceTables[7][2][64] = {
-- 						-20,-10,0,0,0,0,-10,-20,
-- 						-15,-5,0,10,10,0,-5,-15,
-- 						-15,-5,0,0,0,0,-5,-15,
---						-10,-5,0,0,0,0,-5,-10,
---						-15,-5,0,0,0,0,-5,15,
--+						-15,-5,0,0,0,0,-5,-15,
--+						-15,-5,0,0,0,0,-5,-15,
-- 						10,20,20,20,20,20,20,10,
-- 						10,20,20,20,20,20,20,10
-- 				},
-- 				{ //black rooks
-- 						10,20,20,20,20,20,20,10,
-- 						10,20,20,20,20,20,20,10,
---						0,0,0,0,0,0,0,0,
---						0,0,0,0,0,0,0,0,
--+						-15,-5,0,0,0,0,-5,-15,
--+						-15,-5,0,0,0,0,-5,-15,
-- 						-15,-5,0,0,0,0,-5,-15,
-- 						-15,-5,0,10,10,0,-5,-15,
-- 						-20,-10,0,0,0,0,-10,-20,
--@@ -275,7 +301,7 @@ int16_t endGamepieceTables[7][2][64] = {
-- 						-15,-5,0,10,10,0,-5,-15,
-- 						-15,-5,10,30,30,10,-5,-15,
-- 						-10,-5,5,20,20,5,-5,-10,
---						-15,-5,10,15,15,10,-5,15,
--+						-15,-5,10,15,15,10,-5,-15,
-- 						-20,-10,10,15,15,10,-10,-20,
-- 						0,10,20,20,20,20,10,0
-- 
--@@ -283,7 +309,7 @@ int16_t endGamepieceTables[7][2][64] = {
-- 				{ //black queens
-- 						0,10,20,20,20,20,10,0,
-- 						-20,-10,10,15,15,10,-10,-20,
---						-15,-5,10,15,15,10,-5,15,
--+						-15,-5,10,15,15,10,-5,-15,
-- 						-10,-5,5,20,20,5,-5,-10,
-- 						-15,-5,10,30,30,10,-5,-15,
-- 						-15,-5,0,10,10,0,-5,-15,
--@@ -303,7 +329,7 @@ int16_t endGamepieceTables[7][2][64] = {
-- 						-200,-140,-80,-50,-50,-80,-140,-200,
-- 				},
-- 				{ //black kings
---						200,-140,-80,-50,-50,-80,-140,-200,
--+						-200,-140,-80,-50,-50,-80,-140,-200,
-- 						-140,-100,-60,-20,-20,-60,-100,-140,
-- 						-80,-60,-20, 20, 20,-20,-60,-80,
-- 						-50,-20, 20, 60, 60, 20,-20,-50,
--diff --git a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
--index d800e2f..914e08d 100644
----- a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
--+++ b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
--@@ -205,11 +205,7 @@ int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupan
-- #endif
-- 	} else {
-- 		staticpawncalls++;
---#ifdef EXPERIMENTAL
-- 		staticPawn = staticPawnEvalComplete(position, pawnColumnOccupancy);
---#else
---		staticPawn = staticPawnEval(whitePawns, white, pawnColumnOccupancy,&evalPars->staticPawnParameters)+staticPawnEval(blackPawns, black,  pawnColumnOccupancy+1,&evalPars->staticPawnParameters);
---#endif
-- 		setPawnHashEntry(staticPawn, pawnColumnOccupancy[0], pawnColumnOccupancy[1], position->pawnHash);
-- 	}
-- 	eval = eval+staticPawn;
--diff --git a/Cpp/src/lib/Evaluation/staticPawnEvaluation.cpp b/Cpp/src/lib/Evaluation/staticPawnEvaluation.cpp
--index 64e088c..2c5741c 100644
----- a/Cpp/src/lib/Evaluation/staticPawnEvaluation.cpp
--+++ b/Cpp/src/lib/Evaluation/staticPawnEvaluation.cpp
--@@ -94,10 +94,10 @@ int16_t staticPawnEvalComplete(const chessPosition* position, uint8_t* pawnOcc)
-- 	while(wDouble) {
-- 		ev = ev-10;
-- 		uint16_t field = popLSB(wDouble);
---		std::cout << "White double pawn on " << field << " " << ev <<  std::endl;
--+		//std::cout << "White double pawn on " << field << " " << ev <<  std::endl;
-- 		if(!(BIT64(field) & neighboringColumn[black])) { //no black pawn on an adjacent column
-- 			ev = ev-5;
---			std::cout << "White double pawn unresolvable on " << field << " " << ev <<  std::endl;
--+			//std::cout << "White double pawn unresolvable on " << field << " " << ev <<  std::endl;
-- 		}
-- 	}
-- 
--@@ -105,10 +105,10 @@ int16_t staticPawnEvalComplete(const chessPosition* position, uint8_t* pawnOcc)
-- 	while(bDouble) {
-- 		ev = ev+10;
-- 		uint16_t field = popLSB(bDouble);
---		std::cout << "Black double pawn on " << field << " " << ev <<  std::endl;
--+		//std::cout << "Black double pawn on " << field << " " << ev <<  std::endl;
-- 		if(!(BIT64(field) & neighboringColumn[white])) { //no black pawn on an adjacent column
-- 			ev = ev+5;
---			std::cout << "Black double pawn unresolvable on " << field << " " << ev <<  std::endl;
--+			//std::cout << "Black double pawn unresolvable on " << field << " " << ev <<  std::endl;
-- 		}
-- 	}
-- 
--@@ -116,14 +116,14 @@ int16_t staticPawnEvalComplete(const chessPosition* position, uint8_t* pawnOcc)
-- 	while(wIso) {
-- 		uint16_t field = popLSB(wIso);
-- 		ev = ev+isolatedPawnTable[field];
---		std::cout << "White iso pawn on " << field << " ev " << isolatedPawnTable[field]<< " " << ev <<  std::endl;
--+		//std::cout << "White iso pawn on " << field << " ev " << isolatedPawnTable[field]<< " " << ev <<  std::endl;
-- 	}
-- 
-- 	uint64_t bIso = isolatedPawns[black];
-- 	while(bIso) {
-- 		uint16_t field = popLSB(bIso);
-- 		ev = ev-isolatedPawnTable[field];
---		std::cout << "Black iso pawn on " << field << " ev " << isolatedPawnTable[field]<< " " << ev <<  std::endl;
--+		//std::cout << "Black iso pawn on " << field << " ev " << isolatedPawnTable[field]<< " " << ev <<  std::endl;
-- 	}
-- 
-- 	uint64_t wBackwards = backwardsPawns[white];
--@@ -131,7 +131,7 @@ int16_t staticPawnEvalComplete(const chessPosition* position, uint8_t* pawnOcc)
-- 		uint16_t field = popLSB(wBackwards);
-- 		if(!(BIT64(field) & frontColumnFill[black])) {
-- 			ev= ev-5;
---			std::cout << "White backwards pawn on " << field << " " << ev <<  std::endl;
--+			//std::cout << "White backwards pawn on " << field << " " << ev <<  std::endl;
-- 		}
-- 	}
-- 
--@@ -140,19 +140,19 @@ int16_t staticPawnEvalComplete(const chessPosition* position, uint8_t* pawnOcc)
-- 		uint16_t field = popLSB(bBackwards);
-- 		if(!(BIT64(field) & frontColumnFill[white])) {
-- 			ev= ev+5;
---			std::cout << "Black backwards pawn on " << field << " " << ev <<  std::endl;
--+			//std::cout << "Black backwards pawn on " << field << " " << ev <<  std::endl;
-- 		}
-- 	}
-- 
-- 
---	//reward pawns side by side
--+	//reward pawns side by side. Needs further testing; looks questionable actually
-- 	//---------------------------------
---	uint64_t wpawns = position->pieceTables[white][pawn];
--+	/*uint64_t wpawns = position->pieceTables[white][pawn];
-- 	uint64_t wsideByside = (wpawns & WESTONE(wpawns)) | (wpawns & WESTONE(wpawns));
-- 	ev = ev+2*popcount(wsideByside);
-- 
-- 	uint64_t bpawns = position->pieceTables[black][pawn];
-- 	uint64_t bsideByside = (bpawns & WESTONE(bpawns)) | (bpawns & WESTONE(bpawns));
---	ev = ev-2*popcount(bsideByside);
--+	ev = ev-2*popcount(bsideByside);*/
-- 	return ev;
-- }
--diff --git a/Cpp/src/selfPlaying/selfPlaying.cpp b/Cpp/src/selfPlaying/selfPlaying.cpp
--index a3bdb1f..3cfd8d0 100644
----- a/Cpp/src/selfPlaying/selfPlaying.cpp
--+++ b/Cpp/src/selfPlaying/selfPlaying.cpp
--@@ -15,7 +15,7 @@
-- 
-- bool enablePawnEval;
-- 
---int32_t selfPlayMakeMove(chessPosition* position, uint16_t whitedepth, uint16_t blackdepth) {
--+/*int32_t selfPlayMakeMove(chessPosition* position, uint16_t whitedepth, uint16_t blackdepth) {
-- 
-- 
-- 
--@@ -128,5 +128,5 @@ selfPlayResult playSelf(uint16_t depth1, uint16_t depth2, uint32_t numGames) {
-- 	return ret;
-- 
-- 
---}
--+}*/
-- 
--diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
--index 7ab1040..16e8bf3 100644
----- a/Cpp/src/userInterface/UIfunctions.cpp
--+++ b/Cpp/src/userInterface/UIfunctions.cpp
--@@ -50,7 +50,6 @@ uint64_t runSinglePositionPerformanceTest(std::string position, uint16_t depth,
-- 	searchId++;
-- 	chessPosition c = stringToChessPosition(position);
-- 
---	chessMove bestMove;
-- 	resetSearchData();
-- 	resetQuiescenceNodes();
-- 	struct timeval start, end;
--@@ -65,7 +64,8 @@ uint64_t runSinglePositionPerformanceTest(std::string position, uint16_t depth,
-- 	while(searchdepth <= depth && (searchdepth < 14)) {
-- 
-- 		bool succeeded = false;
---		int32_t eval = negamax(&c, 0, depth+3, searchdepth, alpha, beta, &bestMove);
--+		pvLine line;
--+		int32_t eval = negamax(&c, 0, depth+3, searchdepth, alpha, beta, &line);
-- 
-- 		if(useAspiration) {
-- 			if ((eval <= alpha)) {
--@@ -454,6 +454,7 @@ chessPosition stringToChessPosition(std::string strposition) {
-- 							+(((1 << 14) + calcEndGamePieceTableValue(&position)+position.figureEval) << 16);
-- 	position.zobristHash    = calcZobristHash(&position);
-- 
--+	position.pawnHash = calcPawnHash(&position);
-- 	position.data.hash = position.zobristHash;
-- 	position.data.enPassantFile = 8;
-- 	position.data.fiftyMoveRuleCounter = 0;
--diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
--index 85033b6..f445dfd 100644
----- a/Cpp/src/userInterface/UImainLoop.cpp
--+++ b/Cpp/src/userInterface/UImainLoop.cpp
--@@ -35,7 +35,7 @@
-- //----------------------------------------
-- #include "mingw.thread.h"
-- #include "mingw.mutex.h"
---
--+#include <list>
-- extern uint8_t searchId;
-- extern uint16_t killerMoves[20][2];
-- 
--@@ -108,11 +108,25 @@ uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t n
-- 	return 100; //some default
-- }
-- 
---void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth, std::string bestMove){
--+void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth, std::list<std::string>& PV){
-- 	double nps = ((double) nodes)/((double) time)*1000.0;
-- 	uint64_t npsInt = nps;
-- 	std::stringstream out;
---	out << "info depth " << depth << " score cp " << eval << " nps " << npsInt << " nodes " << nodes << " pv " << bestMove;
--+
--+
--+	if(eval > 29000) {
--+		int16_t mate_in = (30000-eval+1)/2;
--+		out << "info depth " << depth << " mate " << mate_in << " nps " << npsInt << " nodes " << nodes << " pv ";
--+	} else if(eval < -29000) {
--+		int16_t mate_in = (-30000-eval)/2;
--+		out << "info depth " << depth << " mate " << mate_in << " nps " << npsInt << " nodes " << nodes << " pv ";
--+	} else {
--+		out << "info depth " << depth << " score cp " << eval << " nps " << npsInt << " nodes " << nodes << " pv ";
--+	}
--+
--+	for(auto iterator = PV.begin(); iterator != PV.end(); iterator++) {
--+		out << *iterator << " ";
--+	}
-- 	putLine(out.str());
-- }
-- 
--@@ -142,7 +156,16 @@ bool checkContinue(searchParameters params, uint16_t depth, uint16_t passedTime,
-- 	return true;
-- }
-- 
--+/*#ifdef EXPERIMENTAL
--+std::ofstream fenLogger;
--+#endif*/
--+
-- uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* nodeCount, uint64_t* mtime, int32_t* eval, bool doAspiration, searchParameters params) {
--+/*#ifdef EXPERIMENTAL
--+
--+	fenLogger.open("fen.txt", std::ios::app);
--+
--+#endif*/
-- 	memset(killerMoves,0, 20*2*sizeof(uint16_t));
-- 	resetSearchData();
-- 	resetQuiescenceNodes();
--@@ -166,22 +189,24 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* node
-- 		std::cout<< moveToString(moves[ind], *position) << " Eval " << moves[ind].sortEval << std::endl;
-- 	}*/
-- 
--+	pvLine line;
--+	line.numMoves = 0;
-- 	while(checkContinue(params, depth, get_timestamp()-start_ts, totalTime)) {
-- 		try{
-- 			//std::cout << "Depth " << depth << std::endl;
---			chessMove localBestMove;
---			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
--+
--+			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &line, true, false);
-- 			if(doAspiration) {
-- 				if ((*eval <= alpha) || (*eval >= beta)) {
-- 
---					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &localBestMove, true, false);
--+					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &line, true, false);
-- 				}
-- 
-- 				alpha = *eval-50;
-- 				beta  = *eval+50;
-- 			}
-- 
---			*bestMove = localBestMove;
--+			*bestMove = line.line[0];
-- 			/*chessMove localBestMove;
-- 
-- 			uint64_t* nodeCounts = new uint64_t[moves.length];
--@@ -259,14 +284,33 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* node
-- 		}
-- 
-- 		*nodeCount = (data.totalNodes+getQuiescenceNodes());
---		sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
--+
--+		std::list<std::string> moveList;
--+
--+		for(uint16_t ind=0; ind < line.numMoves; ind++) {
--+			std::string mv = moveToString(line.line[ind], *position);
--+			moveList.push_back(mv);
--+			makeMove(&line.line[ind], position);
--+		}
--+
--+		for(uint16_t ind=0; ind < line.numMoves; ind++) {
--+			undoMove(position);
--+		}
--+
--+		sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveList);
-- 		logSearch(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
--+		line.numMoves = 0;
-- 		depth++;
-- 		searchedNodes = searchedNodes+*nodeCount;
-- 		if(*eval > 29000) {
-- 			break;
-- 		}
-- 	}
--+
--+/*#ifdef EXPERIMENTAL
--+	fenLogger << chessPositionToFenString(*position, false) << std::endl;
--+	fenLogger.close();
--+#endif*/
-- 	depth--;
-- 	*mtime = get_timestamp()-start_ts;
-- 	while(position->madeMoves.length > madeMoves){
--diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
--index cd5da91..8171fda 100644
----- a/chessGui/.idea/workspace.xml
--+++ b/chessGui/.idea/workspace.xml
--@@ -58,7 +58,68 @@
--     <favorites_list name="JavaFxApplication" />
--   </component>
--   <component name="FileEditorManager">
---    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300" />
--+    <leaf>
--+      <file leaf-file-name="FenHelper.java" pinned="false" current-in-tab="false">
--+        <entry file="file://$PROJECT_DIR$/src/Library/FenHelper.java">
--+          <provider selected="true" editor-type-id="text-editor">
--+            <state relative-caret-position="427">
--+              <caret line="51" column="22" selection-start-line="51" selection-start-column="22" selection-end-line="51" selection-end-column="22" />
--+              <folding />
--+            </state>
--+          </provider>
--+        </entry>
--+      </file>
--+      <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
--+        <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
--+          <provider selected="true" editor-type-id="text-editor">
--+            <state relative-caret-position="472">
--+              <caret line="157" column="9" selection-start-line="157" selection-start-column="9" selection-end-line="157" selection-end-column="9" />
--+              <folding />
--+            </state>
--+          </provider>
--+        </entry>
--+      </file>
--+      <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
--+        <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
--+          <provider selected="true" editor-type-id="text-editor">
--+            <state relative-caret-position="337">
--+              <caret line="126" column="47" selection-start-line="126" selection-start-column="35" selection-end-line="126" selection-end-column="47" />
--+              <folding />
--+            </state>
--+          </provider>
--+        </entry>
--+      </file>
--+      <file leaf-file-name="fen.txt" pinned="false" current-in-tab="false">
--+        <entry file="file://$PROJECT_DIR$/fen.txt">
--+          <provider selected="true" editor-type-id="text-editor">
--+            <state relative-caret-position="-43387">
--+              <caret line="347" column="0" selection-start-line="347" selection-start-column="0" selection-end-line="347" selection-end-column="0" />
--+              <folding />
--+            </state>
--+          </provider>
--+        </entry>
--+      </file>
--+      <file leaf-file-name="fens.txt" pinned="false" current-in-tab="false">
--+        <entry file="file://$PROJECT_DIR$/fens.txt">
--+          <provider selected="true" editor-type-id="text-editor">
--+            <state relative-caret-position="870">
--+              <caret line="58" column="66" selection-start-line="58" selection-start-column="66" selection-end-line="58" selection-end-column="66" />
--+              <folding />
--+            </state>
--+          </provider>
--+        </entry>
--+      </file>
--+      <file leaf-file-name="uciEngineHandler.java" pinned="false" current-in-tab="false">
--+        <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
--+          <provider selected="true" editor-type-id="text-editor">
--+            <state relative-caret-position="870">
--+              <caret line="75" column="16" selection-start-line="75" selection-start-column="16" selection-end-line="75" selection-end-column="16" />
--+              <folding />
--+            </state>
--+          </provider>
--+        </entry>
--+      </file>
--+    </leaf>
--   </component>
--   <component name="FileTemplateManagerImpl">
--     <option name="RECENT_TEMPLATES">
--@@ -81,9 +142,6 @@
--   <component name="IdeDocumentHistory">
--     <option name="CHANGED_PATHS">
--       <list>
---        <option value="$PROJECT_DIR$/src/communication/messages/MessageFactory.java" />
---        <option value="$PROJECT_DIR$/src/communication/messages/typeConv.java" />
---        <option value="$PROJECT_DIR$/src/communication/messages/VMPChesssMove.java" />
--         <option value="$PROJECT_DIR$/src/communication/messages/UnknownMessageException.java" />
--         <option value="$PROJECT_DIR$/src/communication/messages/JSONprocessing.java" />
--         <option value="$PROJECT_DIR$/src/communication/messages/message.java" />
--@@ -128,10 +186,13 @@
--         <option value="$PROJECT_DIR$/src/Tests/testDebugVsRelease.java" />
--         <option value="$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java" />
--         <option value="$PROJECT_DIR$/src/Tests/TestPerft.java" />
---        <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
--         <option value="$PROJECT_DIR$/src/Tests/TestSuite.java" />
---        <option value="$PROJECT_DIR$/src/sample/Main.java" />
--         <option value="$PROJECT_DIR$/params2/params.txt" />
--+        <option value="$PROJECT_DIR$/params2/fens.txt" />
--+        <option value="$PROJECT_DIR$/params2/fen.txt" />
--+        <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
--+        <option value="$PROJECT_DIR$/src/Library/FenHelper.java" />
--+        <option value="$PROJECT_DIR$/src/sample/Main.java" />
--       </list>
--     </option>
--   </component>
--@@ -144,7 +205,6 @@
--   </component>
--   <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
--   <component name="ProjectFrameBounds">
---    <option name="x" value="1920" />
--     <option name="y" value="24" />
--     <option name="width" value="1920" />
--     <option name="height" value="1056" />
--@@ -179,7 +239,6 @@
--       <foldersAlwaysOnTop value="true" />
--     </navigator>
--     <panes>
---      <pane id="PackagesPane" />
--       <pane id="Scope" />
--       <pane id="ProjectPane">
--         <subPane>
--@@ -227,7 +286,7 @@
--               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
--             </PATH_ELEMENT>
--             <PATH_ELEMENT>
---              <option name="myItemId" value="Tests" />
--+              <option name="myItemId" value="sample" />
--               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
--             </PATH_ELEMENT>
--           </PATH>
--@@ -241,7 +300,11 @@
--               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
--             </PATH_ELEMENT>
--             <PATH_ELEMENT>
---              <option name="myItemId" value="params2" />
--+              <option name="myItemId" value="src" />
--+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
--+            </PATH_ELEMENT>
--+            <PATH_ELEMENT>
--+              <option name="myItemId" value="Library" />
--               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
--             </PATH_ELEMENT>
--           </PATH>
--@@ -255,12 +318,13 @@
--               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
--             </PATH_ELEMENT>
--             <PATH_ELEMENT>
---              <option name="myItemId" value="params1" />
--+              <option name="myItemId" value="params2" />
--               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
--             </PATH_ELEMENT>
--           </PATH>
--         </subPane>
--       </pane>
--+      <pane id="PackagesPane" />
--       <pane id="Scratches" />
--     </panes>
--   </component>
--@@ -283,17 +347,18 @@
--     <property name="last_opened_file_path" value="$PROJECT_DIR$/src/utility/gson-2.0.jar!/" />
--   </component>
--   <component name="RecentsManager">
--+    <key name="MoveFile.RECENT_KEYS">
--+      <recent name="$PROJECT_DIR$" />
--+      <recent name="$PROJECT_DIR$/src/sample" />
--+      <recent name="$PROJECT_DIR$/params1" />
--+      <recent name="$PROJECT_DIR$/src/PlayingGUI" />
--+    </key>
--     <key name="CopyFile.RECENT_KEYS">
--       <recent name="$PROJECT_DIR$/params2" />
--       <recent name="$PROJECT_DIR$/src" />
--       <recent name="$PROJECT_DIR$/src/utility" />
--       <recent name="$PROJECT_DIR$" />
--     </key>
---    <key name="MoveFile.RECENT_KEYS">
---      <recent name="$PROJECT_DIR$/params1" />
---      <recent name="$PROJECT_DIR$" />
---      <recent name="$PROJECT_DIR$/src/PlayingGUI" />
---    </key>
--   </component>
--   <component name="RunManager" selected="Application.Main">
--     <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
--@@ -542,7 +607,7 @@
--     <option name="totallyTimeSpent" value="1302000" />
--   </component>
--   <component name="ToolWindowManager">
---    <frame x="1920" y="24" width="1920" height="1056" extended-state="7" />
--+    <frame x="0" y="24" width="1920" height="1056" extended-state="7" />
--     <editor active="false" />
--     <layout>
--       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
--@@ -556,6 +621,7 @@
--       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
--       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
--       <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
--+      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
--       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
--       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
--       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
--@@ -572,7 +638,6 @@
--       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
--       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
--       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
---      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
--     </layout>
--   </component>
--   <component name="Vcs.Log.UiProperties">
--@@ -597,47 +662,10 @@
--     <option name="FILTER_TARGETS" value="false" />
--   </component>
--   <component name="editorHistoryManager">
---    <entry file="file://$PROJECT_DIR$/params1/params.txt">
---      <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="135">
---          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---          <folding />
---        </state>
---      </provider>
---    </entry>
---    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
---      <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="330">
---          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
---          </folding>
---        </state>
---      </provider>
---    </entry>
---    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
---      <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="1230">
---          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#5623#5624#0" expanded="false" />
---            <element signature="e#5649#5650#0" expanded="false" />
---          </folding>
---        </state>
---      </provider>
---    </entry>
--     <entry file="file://$PROJECT_DIR$/src/core/Core.java">
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="195">
--           <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#1121#1122#0" expanded="false" />
---            <element signature="e#1168#1169#0" expanded="false" />
---          </folding>
--         </state>
--       </provider>
--     </entry>
--@@ -653,7 +681,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -661,7 +688,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="135">
--           <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -671,8 +697,8 @@
--           <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
--           <folding>
--             <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
--+            <element signature="e#3395#3396#0" expanded="false" />
--+            <element signature="e#3428#3429#0" expanded="false" />
--           </folding>
--         </state>
--       </provider>
--@@ -693,11 +719,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="195">
--           <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#1121#1122#0" expanded="false" />
---            <element signature="e#1168#1169#0" expanded="false" />
---          </folding>
--         </state>
--       </provider>
--     </entry>
--@@ -713,7 +734,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -721,7 +741,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="135">
--           <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -731,8 +750,8 @@
--           <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
--           <folding>
--             <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
--+            <element signature="e#3395#3396#0" expanded="false" />
--+            <element signature="e#3428#3429#0" expanded="false" />
--           </folding>
--         </state>
--       </provider>
--@@ -753,11 +772,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="195">
--           <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#1121#1122#0" expanded="false" />
---            <element signature="e#1168#1169#0" expanded="false" />
---          </folding>
--         </state>
--       </provider>
--     </entry>
--@@ -773,7 +787,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -781,7 +794,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="135">
--           <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -791,8 +803,8 @@
--           <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
--           <folding>
--             <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
--+            <element signature="e#3395#3396#0" expanded="false" />
--+            <element signature="e#3428#3429#0" expanded="false" />
--           </folding>
--         </state>
--       </provider>
--@@ -813,11 +825,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="195">
--           <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#1121#1122#0" expanded="false" />
---            <element signature="e#1168#1169#0" expanded="false" />
---          </folding>
--         </state>
--       </provider>
--     </entry>
--@@ -833,7 +840,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -841,7 +847,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -851,8 +856,8 @@
--           <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
--           <folding>
--             <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
--+            <element signature="e#3395#3396#0" expanded="false" />
--+            <element signature="e#3428#3429#0" expanded="false" />
--           </folding>
--         </state>
--       </provider>
--@@ -873,11 +878,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="195">
--           <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#1121#1122#0" expanded="false" />
---            <element signature="e#1168#1169#0" expanded="false" />
---          </folding>
--         </state>
--       </provider>
--     </entry>
--@@ -893,7 +893,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -901,7 +900,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="135">
--           <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -911,8 +909,8 @@
--           <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
--           <folding>
--             <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
--+            <element signature="e#3395#3396#0" expanded="false" />
--+            <element signature="e#3428#3429#0" expanded="false" />
--           </folding>
--         </state>
--       </provider>
--@@ -933,11 +931,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="195">
--           <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#1121#1122#0" expanded="false" />
---            <element signature="e#1168#1169#0" expanded="false" />
---          </folding>
--         </state>
--       </provider>
--     </entry>
--@@ -953,7 +946,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -961,7 +953,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="135">
--           <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -971,8 +962,8 @@
--           <caret line="38" column="0" selection-start-line="38" selection-start-column="0" selection-end-line="38" selection-end-column="0" />
--           <folding>
--             <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
--+            <element signature="e#3395#3396#0" expanded="false" />
--+            <element signature="e#3428#3429#0" expanded="false" />
--           </folding>
--         </state>
--       </provider>
--@@ -1001,7 +992,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="0">
--           <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
---          <folding />
--         </state>
--       </provider>
--     </entry>
--@@ -1009,11 +999,6 @@
--       <provider selected="true" editor-type-id="text-editor">
--         <state relative-caret-position="195">
--           <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#1121#1122#0" expanded="false" />
---            <element signature="e#1168#1169#0" expanded="false" />
---          </folding>
--         </state>
--       </provider>
--     </entry>
--@@ -1040,58 +1025,71 @@
--         </state>
--       </provider>
--     </entry>
---    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
--+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
--       <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="1530">
---          <caret line="104" column="0" selection-start-line="104" selection-start-column="0" selection-end-line="104" selection-end-column="0" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#2851#2852#0" expanded="false" />
---            <element signature="e#2884#2885#0" expanded="false" />
---          </folding>
--+        <state relative-caret-position="135">
--+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
--+        </state>
--+      </provider>
--+    </entry>
--+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
--+      <provider selected="true" editor-type-id="text-editor">
--+        <state relative-caret-position="135">
--+          <caret line="9" column="27" selection-start-line="9" selection-start-column="27" selection-end-line="9" selection-end-column="27" />
--+        </state>
--+      </provider>
--+    </entry>
--+    <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingGUI.java">
--+      <provider selected="true" editor-type-id="text-editor">
--+        <state relative-caret-position="105">
--+          <caret line="15" column="13" selection-start-line="15" selection-start-column="13" selection-end-line="15" selection-end-column="13" />
--         </state>
--       </provider>
--     </entry>
--     <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
--       <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="735">
---          <caret line="60" column="17" selection-start-line="60" selection-start-column="17" selection-end-line="60" selection-end-column="17" />
---          <folding>
---            <element signature="imports" expanded="false" />
---            <element signature="e#5623#5624#0" expanded="false" />
---            <element signature="e#5649#5650#0" expanded="false" />
---          </folding>
--+        <state relative-caret-position="337">
--+          <caret line="126" column="47" selection-start-line="126" selection-start-column="35" selection-end-line="126" selection-end-column="47" />
--+          <folding />
--         </state>
--       </provider>
--     </entry>
---    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
--+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
--       <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="1290">
---          <caret line="104" column="0" selection-start-line="104" selection-start-column="0" selection-end-line="104" selection-end-column="0" />
--+        <state relative-caret-position="870">
--+          <caret line="75" column="16" selection-start-line="75" selection-start-column="16" selection-end-line="75" selection-end-column="16" />
--           <folding />
--         </state>
--       </provider>
--     </entry>
---    <entry file="file://$PROJECT_DIR$/params1/params.txt">
--+    <entry file="file://$PROJECT_DIR$/fens.txt">
--       <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="135">
---          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
--+        <state relative-caret-position="870">
--+          <caret line="58" column="66" selection-start-line="58" selection-start-column="66" selection-end-line="58" selection-end-column="66" />
--           <folding />
--         </state>
--       </provider>
--     </entry>
---    <entry file="file://$PROJECT_DIR$/params2/params.txt">
--+    <entry file="file://$PROJECT_DIR$/fen.txt">
--       <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="135">
---          <caret line="9" column="27" selection-start-line="9" selection-start-column="27" selection-end-line="9" selection-end-column="27" />
--+        <state relative-caret-position="-43387">
--+          <caret line="347" column="0" selection-start-line="347" selection-start-column="0" selection-end-line="347" selection-end-column="0" />
--           <folding />
--         </state>
--       </provider>
--     </entry>
---    <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingGUI.java">
--+    <entry file="file://$PROJECT_DIR$/src/Library/FenHelper.java">
--       <provider selected="true" editor-type-id="text-editor">
---        <state relative-caret-position="105">
---          <caret line="15" column="13" selection-start-line="15" selection-start-column="13" selection-end-line="15" selection-end-column="13" />
--+        <state relative-caret-position="427">
--+          <caret line="51" column="22" selection-start-line="51" selection-start-column="22" selection-end-line="51" selection-end-column="22" />
--+          <folding />
--+        </state>
--+      </provider>
--+    </entry>
--+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
--+      <provider selected="true" editor-type-id="text-editor">
--+        <state relative-caret-position="472">
--+          <caret line="157" column="9" selection-start-line="157" selection-start-column="9" selection-end-line="157" selection-end-column="9" />
--           <folding />
--         </state>
--       </provider>
--diff --git a/chessGui/src/sample/Main.java b/chessGui/src/sample/Main.java
--index 3d26da1..8ddb214 100644
----- a/chessGui/src/sample/Main.java
--+++ b/chessGui/src/sample/Main.java
--@@ -1,5 +1,6 @@
-- package sample;
-- 
--+import Library.FenHelper;
-- import Tests.TestDebugVsRelease;
-- import core.Core;
-- import javafx.application.Application;
--@@ -12,36 +13,57 @@ import PlayingGUI.PlayingGUI;
-- import uciClient.UciProcessing;
-- import uciClient.uciEngineHandler;
-- 
---import java.io.BufferedReader;
---import java.io.File;
---import java.io.IOException;
---import java.io.InputStreamReader;
--+import java.io.*;
-- import java.math.BigInteger;
-- import java.util.ArrayList;
--+import java.util.LinkedList;
-- import java.util.List;
-- 
-- public class Main extends Application {
-- 
--     @Override
--     public void start(Stage primaryStage) throws Exception{
---/*        uciEngineHandler vabiHandler = new uciEngineHandler("/home/vabi/code/chessEngine/Cpp/Release/Vabi");
-- 
---        List<String> moves = new ArrayList<>();
---        while(true){
---            vabiHandler.setPosition(moves);
---            vabiHandler.startSearch();
---            String mv = vabiHandler.readBestmove();
---            moves.add(mv);
---            System.out.println(mv);
---            stockfishHandler.setPosition(moves);
---            stockfishHandler.startSearch();
---            mv = stockfishHandler.readBestmove();
---            moves.add(mv);
---            System.out.println(mv);
---            if("(none)".equals(mv)){
---                break;
--+
--+       /* ArrayList<String> fens = new ArrayList<>();
--+        try (BufferedReader br = new BufferedReader(new FileReader("fen.txt"))) {
--+            String line;
--+            while ((line = br.readLine()) != null) {
--+                fens.add(line);
--             }
---        }*/
--+        }
--+
--+
--+       System.out.println(FenHelper.mirror("rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w Kkq c6 0 2"));
--+
--+        uciEngineHandler vabiHandler = new uciEngineHandler("/home/vabi/code/chessEngine/Cpp/Release/Vabi", "");
--+
--+        for(String fen: fens) {
--+            /*System.out.println(fen);
--+            System.out.println(FenHelper.mirror(fen));*/
--+           /* vabiHandler.setPosition(fen, new LinkedList<>());
--+            int eval1 = vabiHandler.getEval();
--+            vabiHandler.setPosition(FenHelper.changeSide(fen), new LinkedList<>());
--+            int eval2 = vabiHandler.getEval();
--+            vabiHandler.setPosition(FenHelper.mirror(fen), new LinkedList<>());
--+            int eval3 = vabiHandler.getEval();
--+
--+            if(eval1 != eval2) {
--+                System.out.println("Unsymmetric black/white eval detected");
--+                System.out.println(fen);
--+                System.out.println(FenHelper.changeSide(fen));
--+            }
--+
--+            if(eval1 != eval3){
--+                System.out.println("Asymmetric east/west eval detected");
--+                System.out.println(fen);
--+                System.out.println(FenHelper.mirror(fen));
--+            }
--+
--+        }
--+
--+
--+        System.out.println("Test done");*/
--        /* Runtime runtime = Runtime.getRuntime();
--         Process process;
--         BufferedReader reader;
--diff --git a/chessGui/src/uciClient/uciEngineHandler.java b/chessGui/src/uciClient/uciEngineHandler.java
--index 89963b8..7ad890a 100644
----- a/chessGui/src/uciClient/uciEngineHandler.java
--+++ b/chessGui/src/uciClient/uciEngineHandler.java
--@@ -63,6 +63,15 @@ public class uciEngineHandler {
--     }
-- 
-- 
--+    public int getEval() throws IOException {
--+        put("eval");
--+        String answer = reader.readLine();
--+
--+        String[] parts = answer.split(" ");
--+
--+        return Integer.parseInt(parts[1]);
--+
--+    }
-- 
--     public void setPosition(String fenPosition, List<String> moveList) throws IOException{
--         String putStr = "position fen "+fenPosition;
--@@ -105,6 +114,15 @@ public class uciEngineHandler {
-- 
--                     }
-- 
--+                    if("mate".equals(splitted[index])){
--+                        int matein = Integer.parseInt(splitted[index+1]);
--+                        if(matein > 0) {
--+                            eval = 20000;
--+                        } else {
--+                            eval = -20000;
--+                        }
--+                    }
--+
--                 }
-- 
--             }
--diff --git a/output b/output
--deleted file mode 100644
--index e69de29..0000000
--diff --git a/to_checkin.diff b/to_checkin.diff
--index b89ff3c..309fbb1 100644
----- a/to_checkin.diff
--+++ b/to_checkin.diff
--@@ -1,9907 +0,0 @@
---diff --git a/Cpp/.cproject b/Cpp/.cproject
---index 7cb4e25..896d51b 100644
------ a/Cpp/.cproject
---+++ b/Cpp/.cproject
---@@ -208,7 +208,7 @@
--- 							<builder buildPath="${workspace_loc:/Vabi}/Release" id="cdt.managedbuild.target.gnu.builder.exe.release.2079116869" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.target.gnu.builder.exe.release"/>
--- 							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1461088385" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
--- 							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.2040082738" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
----								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.1158817688" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.none" valueType="enumerated"/>
---+								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.1158817688" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
--- 								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.1580316627" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
--- 								<option id="gnu.cpp.compiler.option.include.paths.1287685795" name="Include paths (-I)" superClass="gnu.cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
--- 									<listOptionValue builtIn="false" value="/home/vabi/code/chessEngine/Cpp/src"/>
---@@ -220,6 +220,8 @@
--- 								<option id="gnu.cpp.compiler.option.optimization.flags.910347230" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
--- 								<option id="gnu.cpp.compiler.option.preprocessor.def.77283027" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
--- 									<listOptionValue builtIn="false" value="HASH"/>
---+									<listOptionValue builtIn="false" value="RANDOMEVAL"/>
---+									<listOptionValue builtIn="false" value="EXPERIMENTAL"/>
--- 								</option>
--- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.198579438" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
--- 							</tool>
---@@ -232,7 +234,7 @@
--- 							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release.1820318665" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release">
--- 								<option id="gnu.cpp.link.option.debugging.gprof.1672464423" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="false" valueType="boolean"/>
--- 								<option id="gnu.cpp.link.option.flags.258710476" name="Linker flags" superClass="gnu.cpp.link.option.flags" useByScannerDiscovery="false" value="" valueType="string"/>
----								<option id="gnu.cpp.link.option.libs.62530067" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" valueType="libs">
---+								<option id="gnu.cpp.link.option.libs.62530067" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" useByScannerDiscovery="false" valueType="libs">
--- 									<listOptionValue builtIn="false" value="pthread"/>
--- 								</option>
--- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.292898201" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
---@@ -284,6 +286,7 @@
--- 								<option id="gnu.cpp.compiler.option.optimization.flags.1368435843" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
--- 								<option id="gnu.cpp.compiler.option.preprocessor.def.22861188" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
--- 									<listOptionValue builtIn="false" value="HASH"/>
---+									<listOptionValue builtIn="false" value="RANDOMEVAL"/>
--- 								</option>
--- 								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1843942148" name="Extra warnings (-Wextra)" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="false" valueType="boolean"/>
--- 								<option id="gnu.cpp.compiler.option.warnings.pedantic.1518046007" name="Pedantic (-pedantic)" superClass="gnu.cpp.compiler.option.warnings.pedantic" useByScannerDiscovery="false" value="false" valueType="boolean"/>
---diff --git a/Cpp/src/Search/history.cpp b/Cpp/src/Search/history.cpp
---index 0cc6a5d..9f2a776 100644
------ a/Cpp/src/Search/history.cpp
---+++ b/Cpp/src/Search/history.cpp
---@@ -8,7 +8,7 @@
--- 
--- 
--- #include <stdint.h>
----
---+#include <iostream>
--- 
--- 
--- 
---@@ -17,7 +17,7 @@ int32_t historyTable[2][64][64];
--- 
--- 
--- void rescaleHistoryTable(){
----
---+//	std::cout << "Rescaling history table" << std::endl;
--- 	for(uint16_t color=0; color < 2; color++){
--- 		for(uint16_t from=0; from < 64; from++){
--- 			for(uint16_t to=0; to<64; to++){
---diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
---index f3e26ed..88427a6 100644
------ a/Cpp/src/Search/moveOrdering.cpp
---+++ b/Cpp/src/Search/moveOrdering.cpp
---@@ -18,6 +18,8 @@
--- #include <parameters/parameters.hpp>
--- #include <cmath>
--- #include <userInterface/UIlayer.hpp>
---+#include <Search/search.hpp>
---+
--- extern uint64_t bishopFieldTable[];
--- extern uint64_t rookFieldTable[];
--- extern int32_t historyTable[2][64][64];
---@@ -97,9 +99,12 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, bool is
--- 		}
--- 	}*/
--- 	isInCheck = !isInCheck;
---+
--- 	const evalParameters* evalPars 						= getEvalParameters(); //TODO: move outside
--- 	int16_t sortEval = 0;
--- 
---+
---+
--- 	if( ((uint16_t) mv->type) < 6) {
--- 		sortEval = sortEval+captureEvals[mv->type][mv->captureType];
--- 	}
---@@ -202,9 +207,9 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, bool is
--- 
--- 	if((mv->type == pawnMove)) {
--- 		if(BIT64(mv->targetField) & CENTER){
----			sortEval = sortEval+80;
----		} else if(BIT64(mv->targetField) & WIDECENTER){
--- 			sortEval = sortEval+50;
---+		} else if(BIT64(mv->targetField) & WIDECENTER){
---+			sortEval = sortEval+30;
--- 		} /*else {
--- 			sortEval = sortEval+30;
--- 		}*/
---@@ -251,23 +256,19 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, bool is
--- 	}
--- 
--- 	if(mv->captureType == none){
----		int32_t historyValue = historyTable[position->toMove][mv->sourceField][mv->targetField]/4;
----		/*if(historyValue > 20){
----			historyValue = 21+(historyValue/8);
----		}
---+		int32_t hist = historyTable[position->toMove][mv->sourceField][mv->targetField]/4;
--- 
----		if(historyValue < -20){
----			historyValue = -21+(historyValue/8);
----		}*/
---+		int32_t historyValue = std::round(std::sqrt(std::abs(hist)));
---+		historyValue = (hist > 0 ? historyValue: -historyValue);
--- 
----		if(historyValue > 100) {
----			historyValue = 100;
----		}
--- 
----		/*if(historyValue < -100) {
----			historyValue = -100;
----		}*/
---+		if(historyValue > 128) {
---+			historyValue = 128;
---+		}
--- 
---+		if(historyValue < -128) {
---+			historyValue = -128;
---+		}
--- 
--- 		sortEval = sortEval+historyValue;
--- 		//std::cout << historyValue << std::endl;
---diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
---index 75be942..fa7e381 100644
------ a/Cpp/src/Search/negamax.cpp
---+++ b/Cpp/src/Search/negamax.cpp
---@@ -24,7 +24,7 @@
--- extern int32_t historyTable[2][64][64];
--- extern uint8_t searchId;
--- extern std::atomic<bool> continueSearch;
----static searchDebugData searchCounts;
---+searchDebugData searchCounts;
--- 
--- extern uint64_t bishopFieldTable[];
--- extern uint64_t rookFieldTable[];
---@@ -91,6 +91,8 @@ static inline void get_extensions_reductions(uint16_t* reduction, uint16_t* exte
--- 			}
--- 		}
--- 
---+
---+
--- 		if(check && ((ply+depth < max_ply-1) || ((depth == 1) && (ply+depth < max_ply)) )){
--- 			*extension = 1;
--- 			*reduction = 0;
---@@ -200,7 +202,7 @@ static inline bool checkHashTable(int16_t* eval, uint16_t* hashMove, bool doHash
--- 
--- static inline void updateHistoryTables(chessMove* bestMove, int16_t depth, vdt_vector<chessMove>* moves, uint16_t bestIndex, playerColor toMove) {
--- 	if(bestMove->captureType == none){
----		historyTable[toMove][bestMove->sourceField][bestMove->targetField] += 2*depth*depth;
---+		historyTable[toMove][bestMove->sourceField][bestMove->targetField] += depth*depth;
--- 		int32_t cutoff = HISTORY_CUTOFF;
--- 		if(historyTable[toMove][bestMove->sourceField][bestMove->targetField] > cutoff){
--- 			rescaleHistoryTable();
---@@ -210,7 +212,7 @@ static inline void updateHistoryTables(chessMove* bestMove, int16_t depth, vdt_v
--- 		chessMove mv = (*moves)[cnt];
--- 		if(mv.captureType == none){
--- 			int32_t cutoff = HISTORY_CUTOFF;
----			historyTable[toMove][mv.sourceField][mv.targetField] -= depth*depth;
---+			historyTable[toMove][mv.sourceField][mv.targetField] -= (depth*depth);
--- 			if(historyTable[toMove][mv.sourceField][mv.targetField] < (-cutoff)){
--- 				rescaleHistoryTable();
--- 			}
---@@ -337,6 +339,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
--- 	//remembers the index of best move after sorting
--- 	//-------------------------------------------
--- 	int16_t bestIndex = -1;
---+
---+
--- 	for(uint16_t ind=0; ind < moves.length; ind++){
--- 
--- 
---@@ -344,7 +348,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
--- 			//first move didn't produce cutoff, now we need to sort
--- 			//------------------------------------------------------
--- 			searchCounts.neededSort++;
----			std::stable_sort(moves.data, moves.data+moves.length);
---+			std::stable_sort(moves.data, moves.data+moves.length); //stable sort makes the engine 100% predictable and comaprable between different optimization levels
--- 		}
--- 
--- 		//illegal move. Since list is sorted or, in case ind=0, best move is first, we can leave here: all further moves are also illegal.
---@@ -368,13 +372,15 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
--- 			}
--- 		}
--- 
----//#ifdef DEBUG
---+#ifdef DEBUG
---+		//debug check: if we overlooked an illegal move, we scream here
---+		//-------------------------------------------------------------
--- 		if(isFieldAttacked( position,  position->toMove, kingField)) {
--- 			std::cout << chessPositionToOutputString(*position);
--- 			std::cout <<  (rookFieldTable[kingField] | bishopFieldTable[kingField]);
--- 			std::cout << "WTF" << std::endl;
--- 		}
----//#endif
---+#endif
--- 		searchCounts.nodes[depth]++;
--- 		searchCounts.totalNodes++;
--- 		legalMovesAvailable = true;
---@@ -422,6 +428,9 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
--- 			handleBetaCutoff(bestMove, position->zobristHash, beta, depth, ply, searchId);
--- 			if(bestIndex != -1){
--- 				searchCounts.bestIndex[depth][bestIndex]++;
---+				if(bestMove->captureType == none) {
---+					updateHistoryTables(bestMove, depth, &moves, bestIndex, position->toMove);
---+				}
--- 			}
--- 			qmvStack.release();
--- 			assert(stackCounter == qmvStack.getCounter());
---diff --git a/Cpp/src/Search/quiescence.cpp b/Cpp/src/Search/quiescence.cpp
---index 99856e8..d536a99 100644
------ a/Cpp/src/Search/quiescence.cpp
---+++ b/Cpp/src/Search/quiescence.cpp
---@@ -112,7 +112,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
--- 	}
--- 	if(alpha >= beta) {
--- #ifdef HASH
----		setHashEntry(FAILHIGH, alpha, 0, searchId, 0, position->zobristHash);
---+		//setHashEntry(FAILHIGH, alpha, 0, searchId, 0, position->zobristHash);
--- #endif
--- 		return beta;
--- 	}
---@@ -176,7 +176,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
--- 		undoMove(position);
--- 		if(alpha >= beta) {
--- #ifdef HASH
----			setHashEntry(FAILHIGH, alpha, 0, searchId, (bestMove.sourceField | (bestMove.targetField << 8)), position->zobristHash);
---+			//setHashEntry(FAILHIGH, alpha, 0, searchId, (bestMove.sourceField | (bestMove.targetField << 8)), position->zobristHash);
--- #endif
--- 			mvStack.release();
--- 			assert(stackCounter == mvStack.getCounter());
---@@ -188,12 +188,12 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
--- 	}
--- 
--- #ifdef HASH
----	if(bestIndex != -1){
---+	/*if(bestIndex != -1){
--- 		qindices[bestIndex]++;
--- 		setHashEntry(FULLSEARCH, alpha, 0, searchId, (bestMove.sourceField | (bestMove.targetField << 8)), position->zobristHash);
--- 	} else {
--- 		setHashEntry(FAILLOW, alpha, 0, searchId, 0, position->zobristHash);
----	}
---+	}*/
--- #endif
--- 	mvStack.release();
--- 	assert(stackCounter == mvStack.getCounter());
---diff --git a/Cpp/src/Search/rootSearch.cpp b/Cpp/src/Search/rootSearch.cpp
---index 9b3afe4..606296f 100644
------ a/Cpp/src/Search/rootSearch.cpp
---+++ b/Cpp/src/Search/rootSearch.cpp
---@@ -6,5 +6,219 @@
---  */
--- 
--- 
---+#include <iostream>
---+#include <lib/basics.hpp>
---+#include <lib/moveMaking/moveMaking.hpp>
---+#include <tests/tests.hpp>
---+#include <DataTypes/vdt_vector.hpp>
---+#include <lib/moveGeneration/moveGeneration.hpp>
---+#include <lib/Attacks/attacks.hpp>
---+#include <lib/bitfiddling.h>
---+#include "search.hpp"
---+#include <hashTables/hashTables.hpp>
---+#include <algorithm>
---+#include <assert.h>
---+#include <lib/Evaluation/evaluation.hpp>
---+#include <fstream>
---+#include <userInterface/UIlayer.hpp>
---+#include <atomic>
---+extern int32_t historyTable[2][64][64];
---+extern uint8_t searchId;
---+extern std::atomic<bool> continueSearch;
---+static searchDebugData searchCounts;
---+extern searchDebugData searchCounts;
---+extern uint64_t bishopFieldTable[];
---+extern uint64_t rookFieldTable[];
---+extern uint16_t killerMoves[40][2];
--- 
---+static inline void get_extensions_reductions(uint16_t* reduction, uint16_t* extension, bool check, bool movingSideInCheck, uint16_t ply, uint16_t max_ply, int16_t depth, chessMove* move, uint16_t ind) {
--- 
---+		if(!check && !movingSideInCheck && (move->captureType == none) && (depth > 2) && (ply > 0)){
---+			if((ind > 3)){
---+				*reduction = 1;
---+				if(move->sortEval < -50) {
---+					*reduction = 2;
---+				}
---+			}
---+		}
---+
---+
---+
---+		if(check && ((ply+depth < max_ply-1) || ((depth == 1) && (ply+depth < max_ply)) )){
---+			*extension = 1;
---+			*reduction = 0;
---+		}
---+
---+		bool closeToPromotion = (move->type == pawnMove) && ( (move->targetField > 48) || (move->targetField < 16));
---+
---+		if( (closeToPromotion || (move->type == promotionQueen)) && (ply+depth+*extension < max_ply-1)) {
---+			*extension = *extension+1;
---+			*reduction = 0;
---+		}
---+
---+}
---+
---+static inline void handleBetaCutoff(chessMove* bestMove, uint64_t zobristHash, int16_t beta, int16_t depth, uint16_t ply, uint8_t searchId) {
---+	setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), zobristHash);
---+	if(bestMove->captureType == none){
---+		uint16_t toRemember = (bestMove->sourceField | (bestMove->targetField << 8));
---+		if ( (killerMoves[ply][0] != toRemember)) {
---+			killerMoves[ply][1] = killerMoves[ply][0];
---+			killerMoves[ply][0] = toRemember;
---+		}
---+	}
---+}
---+
---+uint64_t getCurrentNodeCount(){
---+	uint64_t totalNodes=0;
---+	searchDebugData data = getSearchData();
---+	for(uint16_t ind=0; ind < 25; ind++){
---+		totalNodes = totalNodes+data.nodes[ind];
---+	}
---+
---+	return (data.totalNodes+getQuiescenceNodes());
---+}
---+
---+int16_t root_search(chessPosition* position, chessMove* bestMove, int16_t alpha, int16_t beta, int16_t depth, uint16_t max_ply, vdt_vector<chessMove>* moves, uint64_t* nodeCounts) {
---+
---+	uint16_t ply = 0;
---+	assert(alpha < beta);
---+	assert(ply+depth <= max_ply);
---+	uint64_t ownKing = position->pieceTables[position->toMove][king];
---+	bool movingSideInCheck = isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing));
---+	bool legalMovesAvailable = false;
---+	bool foundGoodMove = false;
---+	searchCounts.wentToSearch++;
---+
---+	//remembers the index of best move after sorting
---+	//-------------------------------------------
---+	int16_t bestIndex = -1;
---+
---+
---+
---+	uint64_t currentCount = getCurrentNodeCount();
---+
---+	for(uint16_t ind=0; ind < moves->length; ind++){
---+		//illegal move. Since list is sorted or, in case ind=0, best move is first, we can leave here: all further moves are also illegal.
---+		//---------------------------------------------------------------------------------------------------------------------------------
---+		if((*moves)[ind].sortEval < -10000){
---+			break;
---+		}
---+
---+		//now make move and check for legality
---+		//---------------------------------------
---+		makeMove(&(*moves)[ind], position);
---+		uint16_t kingField = findLSB( position->pieceTables[1- position->toMove][king]);
---+
---+		if(movingSideInCheck || (BIT64((*moves)[ind].sourceField) & (rookFieldTable[kingField] | bishopFieldTable[kingField]))) {
---+			if(isFieldAttacked( position,  position->toMove, kingField)){
---+				//move exposed our king, undo and continue
---+				//---------------------------------------------
---+				assert((*moves)[ind].type != kingMove); //all king moves moving into check should be found by move ordering!
---+				undoMove(position);
---+				continue;
---+			}
---+		}
---+
---+#ifdef DEBUG
---+		//debug check: if we overlooked an illegal move, we scream here
---+		//-------------------------------------------------------------
---+		if(isFieldAttacked( position,  position->toMove, kingField)) {
---+			std::cout << chessPositionToOutputString(*position);
---+			std::cout <<  (rookFieldTable[kingField] | bishopFieldTable[kingField]);
---+			std::cout << "WTF" << std::endl;
---+		}
---+#endif
---+		searchCounts.nodes[depth]++;
---+		searchCounts.totalNodes++;
---+		legalMovesAvailable = true;
---+		chessMove mv;
---+		uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
---+
---+		//check whether last move gave check (so its a check-check)
---+		//----------------------------------------------------------------
---+		bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField);
---+
---+		//get extensions and reductions
---+		//------------------------------
---+		uint16_t reduction = 0;
---+		uint16_t extension = 0;
---+		get_extensions_reductions(&reduction, &extension, check, movingSideInCheck, ply, max_ply, depth, &(*moves)[ind], ind);
---+
---+		//PVSearch, currently a small gain for us with the > 3
---+		//-------------------------------------------------
---+		if(((ind > 3) || foundGoodMove )&& (depth > 2)) {
---+			int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &mv);
---+			if(value < alpha+1){
---+				undoMove(position);
---+				uint64_t newCurrentNodes = getCurrentNodeCount();
---+				nodeCounts[ind]  = newCurrentNodes-currentCount;
---+				currentCount = newCurrentNodes;
---+				/*std::cout << "Move " << moveToString((*moves)[ind], *position) << " sort eval " << (*moves)[ind].sortEval << std::endl;
---+				std::cout << "Nodecount " << nodeCounts[ind] << std::endl;*/
---+				continue;
---+			}
---+		}
---+
---+		//this is the real, full-fledged search now
---+		//-------------------------------------------
---+		int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
---+
---+		//in case move is better than previous, remember
---+		//------------------------------------------------
---+		if(value > alpha){
---+			foundGoodMove = true;
---+			alpha = value;
---+			*bestMove = (*moves)[ind];
---+			bestIndex = ind;
---+		}
---+
---+		undoMove(position);
---+
---+		uint64_t newCurrentNodes = getCurrentNodeCount();
---+		nodeCounts[ind]  = newCurrentNodes-currentCount;
---+		currentCount = newCurrentNodes;
---+		/*std::cout << "Move " << moveToString((*moves)[ind], *position) << " sort eval " << (*moves)[ind].sortEval << std::endl;
---+		std::cout << "Nodecount " << nodeCounts[ind] << std::endl;*/
---+		//in case of beta cutoff, leave
---+		//----------------------------------
---+		if((alpha >= beta)) {
---+			handleBetaCutoff(bestMove, position->zobristHash, beta, depth, ply, searchId);
---+			if(bestIndex != -1){
---+				searchCounts.bestIndex[depth][bestIndex]++;
---+			}
---+			uint64_t newCurrentNodes = getCurrentNodeCount();
---+			nodeCounts[ind]  = newCurrentNodes-currentCount;
---+			currentCount = newCurrentNodes;
---+			return beta;
---+		}
---+	}
---+
---+	//no cutoff. Check whether we found a good move, mate/stalemate handling accordingly. Then Cleanup/bookkeeping, then return alpha
---+	//-------------------------------------------------
---+	/*if(bestIndex != -1){
---+		updateHistoryTables(bestMove, depth, &moves, bestIndex, position->toMove);
---+		searchCounts.bestIndex[depth][bestIndex]++;
---+	}*/
---+
---+	//mate scores originate here!
---+	//------------------------------
---+	if(!legalMovesAvailable){
---+		if(movingSideInCheck){
---+			alpha = -30000+ply;
---+		} else {
---+			alpha = 0;
---+		}
---+	}
---+
---+	//set hash entry
---+	//----------------------
---+	if(foundGoodMove) {
---+		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
---+	} else { //we failed low, remember as well
---+		setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
---+	}
---+	//and finally return alpha
---+	//--------------------------
---+	return alpha;
---+}
---diff --git a/Cpp/src/Search/search.hpp b/Cpp/src/Search/search.hpp
---index 09676a8..95722e3 100644
------ a/Cpp/src/Search/search.hpp
---+++ b/Cpp/src/Search/search.hpp
---@@ -13,6 +13,7 @@
--- void rescaleHistoryTable();
--- int16_t negamax(chessPosition* position,  uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
--- int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta, uint16_t depth);
---+int16_t root_search(chessPosition* position, chessMove* bestMove, int16_t alpha, int16_t beta, int16_t depth, uint16_t max_ply, vdt_vector<chessMove>* moves, uint64_t* nodeCounts);
--- void resetNodes();
--- bool calculateStandardSortEvals(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget);
--- void orderCaptureMoves(chessPosition* position, vdt_vector<chessMove>* moves);
---diff --git a/Cpp/src/hashTables/hashTables.hpp b/Cpp/src/hashTables/hashTables.hpp
---index 9ca2cfc..9cfd56c 100644
------ a/Cpp/src/hashTables/hashTables.hpp
---+++ b/Cpp/src/hashTables/hashTables.hpp
---@@ -13,6 +13,7 @@
--- 
--- void fillZobristHash();
--- uint64_t calcZobristHash(const chessPosition* position);
---+uint64_t calcPawnHash(const chessPosition* position);
--- hashEntry getHashTableEntry(uint64_t zobristKey);
--- void setHashEntry(hashEntry entry, uint64_t zobristKey);
--- uint16_t getHashMove(uint64_t zobristKey);
---diff --git a/Cpp/src/hashTables/zobristHash.cpp b/Cpp/src/hashTables/zobristHash.cpp
---index 5e97919..508ec01 100644
------ a/Cpp/src/hashTables/zobristHash.cpp
---+++ b/Cpp/src/hashTables/zobristHash.cpp
---@@ -15,6 +15,7 @@
--- static hashBucket moveOrderingHashTable[HASHSIZE+1];
--- 
--- uint64_t zobristHash[7][2][64];
---+uint64_t pawnHashValues[7][2][64];
--- uint64_t movingSideHash[2];
--- uint64_t castlingHash[16];
--- uint64_t enpassantHash[9];
---@@ -142,6 +143,35 @@ void fillZobristHash(){
--- 	for(uint16_t ind=0; ind <16; ind++) {
--- 		castlingHash[ind]  =getRandUint64();
--- 	}
---+
---+
---+	for(uint16_t cnt=0; cnt < 2; cnt++){
---+			for(uint16_t ind=0; ind < 1; ind++){
---+				for(uint16_t field=0; field < 64; field++){
---+					pawnHashValues[ind][cnt][field] = getRandUint64();
---+				}
---+			}
---+			for(uint16_t ind=1; ind < 7; ind++){
---+				for(uint16_t field=0; field < 64; field++){
---+					pawnHashValues[ind][cnt][field] = 0;
---+				}
---+			}
---+	}
---+}
---+
---+
---+uint64_t calcPawnHash(const chessPosition* position){
---+	uint64_t hash = 0;
---+	for(uint16_t movingSide = 0; movingSide < 2; movingSide++){
---+		for(uint16_t figureType = 0; figureType < 6; figureType++){
---+			uint64_t pieces = position->pieceTables[movingSide][figureType];
---+			while(pieces){
---+				uint16_t field = popLSB(pieces);
---+				hash = hash^pawnHashValues[figureType][movingSide][field];
---+			}
---+		}
---+	}
---+	return hash;
--- }
--- 
--- uint64_t calcZobristHash(const chessPosition* position){
---diff --git a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
---index f33926f..f381b4a 100644
------ a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
---+++ b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
---@@ -165,14 +165,14 @@ int32_t staticPawnEval(uint64_t pawns, playerColor color, uint8_t* pawnColumnOcc
--- 
--- 	eval = eval+staticPawnParameters->isolatedPawn*popcount(isolatedPawns & (~isolatedDoublePawns));
--- 
----/*#ifdef EXPERIMENTAL
---+#ifdef EXPERIMENTAL
--- 	//reward pawns covered by other pawns
--- 	//---------------------------------------
--- 	uint64_t takesRight = (color ? pawns >> 7 : pawns << 9) & NOTFILEA;
--- 	uint64_t takesLeft = (color ? pawns >> 9 : pawns << 7) & NOTFILEH;
--- 	uint64_t takes = takesLeft | takesRight;
--- 	eval = eval+3*popcount(takes & pawns);
----#endif*/
---+#endif
--- 
--- 	return eval*(1-2*color);
--- }
---diff --git a/Cpp/src/lib/basics.cpp b/Cpp/src/lib/basics.cpp
---index e35703a..0a899f4 100644
------ a/Cpp/src/lib/basics.cpp
---+++ b/Cpp/src/lib/basics.cpp
---@@ -118,7 +118,10 @@ void debug_incremental_calculations(const chessPosition* position) {
--- 		std::cout << "zobrist hash wrong after make move" << std::endl;
--- 	}
--- 
----
---+	uint64_t pawnhash = calcPawnHash(position);
---+	if(pawnhash != position->pawnHash){
---+		std::cout << "zobrist pawn hash wrong after make move" << std::endl;
---+	}
--- 
--- }
--- 
---diff --git a/Cpp/src/lib/basics.hpp b/Cpp/src/lib/basics.hpp
---index 44d738e..82eff34 100644
------ a/Cpp/src/lib/basics.hpp
---+++ b/Cpp/src/lib/basics.hpp
---@@ -60,6 +60,7 @@ struct chessPosition {
--- 	uint16_t totalFigureEval;
--- 	uint32_t pieceTableEval;
--- 	uint64_t zobristHash;
---+	uint64_t pawnHash;
--- 	vdt_vector<chessMove> madeMoves;
--- 	vdt_vector<pathDependentPositionData> dataStack;
--- };
---diff --git a/Cpp/src/lib/moveMaking/moveMaking.cpp b/Cpp/src/lib/moveMaking/moveMaking.cpp
---index cc1a809..c2fcc00 100644
------ a/Cpp/src/lib/moveMaking/moveMaking.cpp
---+++ b/Cpp/src/lib/moveMaking/moveMaking.cpp
---@@ -15,6 +15,7 @@
--- 
--- extern int32_t completePieceTables[7][2][64];
--- extern uint64_t zobristHash[7][2][64];
---+extern uint64_t pawnHashValues[7][2][64];
--- extern uint64_t movingSideHash[2];
--- extern uint64_t castlingHash[16];
--- extern uint64_t enpassantHash[9];
---@@ -49,6 +50,7 @@ inline static void makeNormalMove(chessMove* move, chessPosition* position) {
--- 	position->pieceTableEval = position->pieceTableEval+(1-2*toMove)*completePieceTables[move->captureType][1-toMove][move->targetField];
--- 
--- 	position->zobristHash    = position->zobristHash^zobristHash[move->type][toMove][move->targetField]^zobristHash[move->type][toMove][move->sourceField]^zobristHash[move->captureType][1-toMove][move->targetField];
---+	position->pawnHash       = position->pawnHash^pawnHashValues[move->type][toMove][move->targetField]^pawnHashValues[move->type][toMove][move->sourceField]^pawnHashValues[move->captureType][1-toMove][move->targetField];
--- }
--- 
--- 
---@@ -102,6 +104,7 @@ inline static void makeEnPassant(chessMove* move, chessPosition* position) {
--- 	position->pieceTableEval = position->pieceTableEval+(1-2*toMove)*completePieceTables[pawn][1-toMove][shift];
--- 
--- 	position->zobristHash = position->zobristHash^zobristHash[pawn][toMove][move->targetField]^zobristHash[pawn][toMove][move->sourceField]^zobristHash[pawn][1-toMove][shift];
---+	position->pawnHash = position->pawnHash^pawnHashValues[pawn][toMove][move->targetField]^pawnHashValues[pawn][toMove][move->sourceField]^pawnHashValues[pawn][1-toMove][shift];
--- 	//position->totalFigureEval     = position->totalFigureEval-figureValues[pawn];
--- }
--- 
---@@ -117,6 +120,7 @@ inline static void makePromotion(chessMove* move, chessPosition* position, figur
--- 	position->pieceTableEval = position->pieceTableEval+(1-2*toMove)*(completePieceTables[promotedFigure][toMove][move->targetField]-completePieceTables[pawn][toMove][move->sourceField]);
--- 	position->pieceTableEval = position->pieceTableEval+(1-2*toMove)*completePieceTables[move->captureType][1-toMove][move->targetField];
--- 	position->zobristHash = position->zobristHash^zobristHash[promotedFigure][toMove][move->targetField]^zobristHash[pawn][toMove][move->sourceField]^zobristHash[move->captureType][1-toMove][move->targetField];
---+	position->pawnHash = position->pawnHash^pawnHashValues[pawn][toMove][move->sourceField]^pawnHashValues[move->captureType][1-toMove][move->targetField];
--- 	const evalParameters* evalPars = getEvalParameters();
--- 	position->figureEval     = position->figureEval+(1-2*toMove)*(evalPars->figureValues[promotedFigure]-evalPars->figureValues[pawn]);
--- 	position->totalFigureEval     = position->totalFigureEval+(evalPars->figureValues[promotedFigure]-evalPars->figureValues[pawn]);
---diff --git a/Cpp/src/lib/moveMaking/undoMove.cpp b/Cpp/src/lib/moveMaking/undoMove.cpp
---index b89935f..712198d 100644
------ a/Cpp/src/lib/moveMaking/undoMove.cpp
---+++ b/Cpp/src/lib/moveMaking/undoMove.cpp
---@@ -15,6 +15,7 @@
--- #include <parameters/parameters.hpp>
--- 
--- extern uint64_t zobristHash[7][2][64];
---+extern uint64_t pawnHashValues[7][2][64];
--- extern uint64_t movingSideHash[2];
--- extern int32_t completePieceTables[7][2][64];
--- extern uint16_t repetitionData[16384];
---@@ -41,6 +42,7 @@ inline static void undoNormalMove(chessPosition* position, chessMove move) {
--- 	position->pieceTableEval = position->pieceTableEval-(1-2*toMove)*(completePieceTables[move.type][toMove][move.targetField]-completePieceTables[move.type][toMove][move.sourceField]);
--- 	position->pieceTableEval = position->pieceTableEval-(1-2*toMove)*completePieceTables[move.captureType][1-toMove][move.targetField];
--- 	position->zobristHash    = position->zobristHash^zobristHash[move.type][toMove][move.targetField]^zobristHash[move.type][toMove][move.sourceField]^zobristHash[move.captureType][1-toMove][move.targetField];
---+	position->pawnHash    = position->pawnHash^pawnHashValues[move.type][toMove][move.targetField]^pawnHashValues[move.type][toMove][move.sourceField]^pawnHashValues[move.captureType][1-toMove][move.targetField];
--- }
--- 
--- inline static void undoKingSideCastling(chessPosition* position) {
---@@ -92,6 +94,7 @@ inline static void undoEnPassant(chessPosition* position, chessMove move) {
--- 	position->pieceTableEval 							= position->pieceTableEval-(1-2*toMove)*(completePieceTables[pawn][toMove][move.targetField]-completePieceTables[pawn][toMove][move.sourceField]);
--- 	position->pieceTableEval 							= position->pieceTableEval-(1-2*toMove)*completePieceTables[pawn][1-toMove][shift];
--- 	position->zobristHash = position->zobristHash^zobristHash[pawn][toMove][move.targetField]^zobristHash[pawn][toMove][move.sourceField]^zobristHash[pawn][1-toMove][shift];
---+	position->pawnHash = position->pawnHash^pawnHashValues[pawn][toMove][move.targetField]^pawnHashValues[pawn][toMove][move.sourceField]^pawnHashValues[pawn][1-toMove][shift];
--- }
--- 
--- inline static void undoPromotion(chessPosition* position, chessMove move, figureType promotedFigure) {
---@@ -109,6 +112,7 @@ inline static void undoPromotion(chessPosition* position, chessMove move, figure
--- 	position->figureEval     							= position->figureEval-(1-2*toMove)*(evalPars->figureValues[promotedFigure]-evalPars->figureValues[pawn]);
--- 	position->totalFigureEval     						= position->totalFigureEval-(evalPars->figureValues[promotedFigure]-evalPars->figureValues[pawn]);
--- 	position->zobristHash = position->zobristHash^zobristHash[promotedFigure][toMove][move.targetField]^zobristHash[pawn][toMove][move.sourceField]^zobristHash[move.captureType][1-toMove][move.targetField];
---+	position->pawnHash = position->pawnHash^pawnHashValues[pawn][toMove][move.sourceField]^pawnHashValues[move.captureType][1-toMove][move.targetField];
--- }
--- 
--- 
---diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
---index 3a19ef8..963efd8 100644
------ a/Cpp/src/userInterface/UIfunctions.cpp
---+++ b/Cpp/src/userInterface/UIfunctions.cpp
---@@ -344,7 +344,7 @@ chessPosition FENtoChessPosition(std::string fen){
--- 	position.pieceTableEval = ((1 << 15) + position.figureEval+ calcPieceTableValue(&position))
--- 							+(((1 << 14) + calcEndGamePieceTableValue(&position)+position.figureEval) << 16);
--- 	position.zobristHash    = calcZobristHash(&position);
----
---+	position.pawnHash       = calcPawnHash(&position);
--- 	position.data.hash = position.zobristHash;
--- 	position.data.enPassantFile = 8;
--- 	position.data.fiftyMoveRuleCounter = 0;
---diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
---index a664bfe..3f06696 100644
------ a/Cpp/src/userInterface/UImainLoop.cpp
---+++ b/Cpp/src/userInterface/UImainLoop.cpp
---@@ -28,7 +28,8 @@
--- #include <thread>
--- #include <tests/tests.hpp>
--- #include <mutex>
----
---+#include <algorithm>
---+#include <hashTables/hashTables.hpp>
--- //necessary to get windows compile to run
--- //----------------------------------------
--- #include "mingw.thread.h"
---@@ -155,6 +156,15 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* node
--- 	uint32_t totalTime = calcSearchTime(params, position->toMove, position->madeMoves.length, &worst_case_search_time);
--- 	setTotalTime(worst_case_search_time, start_ts);
--- 	uint16_t madeMoves = position->madeMoves.length;
---+	vdt_vector<chessMove> moves = vdt_vector<chessMove>(150);
---+	generateAllMoves(&moves, position);
---+	uint16_t refutationTarget = 0;
---+	calculateStandardSortEvals(position, &moves, 0, getHashMove(position->zobristHash), refutationTarget);
---+	std::stable_sort(moves.data, moves.data+moves.length);
---+	/*for(uint16_t ind=0; ind < moves.length; ind++) {
---+		std::cout<< moveToString(moves[ind], *position) << " Eval " << moves[ind].sortEval << std::endl;
---+	}*/
---+
--- 	while(checkContinue(params, depth, get_timestamp()-start_ts, totalTime)) {
--- 		try{
--- 			//std::cout << "Depth " << depth << std::endl;
---@@ -171,6 +181,70 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* node
--- 			}
--- 
--- 			*bestMove = localBestMove;
---+			/*chessMove localBestMove;
---+
---+			uint64_t* nodeCounts = new uint64_t[moves.length];
---+			for(uint16_t ind=0; ind < moves.length; ind++) {
---+				nodeCounts[ind] = 0;
---+			}
---+
---+
---+			*eval =  root_search(position, &localBestMove, alpha, beta, depth, depth+3, &moves, nodeCounts);
---+			if(doAspiration) {
---+				if ((*eval <= alpha) || (*eval >= beta)) {
---+					for(uint16_t ind=0; ind < moves.length; ind++) {
---+						nodeCounts[ind] = 0;
---+					}
---+					*eval = root_search(position, &localBestMove, -32000, 32000, depth, depth+3, &moves, nodeCounts);
---+				}
---+
---+				alpha = *eval-50;
---+				beta  = *eval+50;
---+			}
---+
---+			*bestMove = localBestMove;
---+
---+			uint64_t maxCount = 0;
---+
---+			for(uint16_t ind=0; ind < moves.length; ind++) {
---+
---+				if(nodeCounts[ind] > maxCount){
---+					maxCount = nodeCounts[ind];
---+				}
---+
---+			}
---+			uint32_t scaling = 1;
---+
---+			if(maxCount > INT16_MAX) {
---+				scaling = maxCount/10000+1;
---+			}
---+			for(uint16_t ind=0; ind < moves.length; ind++) {
---+
---+				if(nodeCounts[ind] > 0) {
---+					moves[ind].sortEval = (nodeCounts[ind]/scaling);
---+				} else {
---+					if(moves[ind].sortEval > 0) {
---+						moves[ind].sortEval = moves[ind].sortEval-500;
---+					}
---+				}
---+
---+				if(moves[ind].move == bestMove->move) {
---+					moves[ind].sortEval = INT16_MAX;
---+				}
---+				//std::cout << moves[ind].sortEval << std::endl;
---+			}
---+
---+			std::stable_sort(moves.data, moves.data+moves.length);*/
---+
---+			/*std::cout << "New move list" << std::endl;
---+
---+			for(uint16_t ind=0; ind < moves.length; ind++) {
---+				std::cout<< moveToString(moves[ind], *position) << " Eval " << moves[ind].sortEval << std::endl;
---+			}*/
---+
---+			//TODO: free MEMORY!!!
---+
---+
--- 		} catch(timeoutException& e) {
--- 			//std::cout << "Search timed out" << std::endl;
--- 			break;
---diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
---index 8c197e2..fa5c690 100644
------ a/chessGui/.idea/workspace.xml
---+++ b/chessGui/.idea/workspace.xml
---@@ -72,8 +72,8 @@
---       <file leaf-file-name="uciEngineHandler.java" pinned="false" current-in-tab="false">
---         <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
---           <provider selected="true" editor-type-id="text-editor">
----            <state relative-caret-position="457">
----              <caret line="115" column="0" selection-start-line="115" selection-start-column="0" selection-end-line="115" selection-end-column="0" />
---+            <state relative-caret-position="1530">
---+              <caret line="104" column="0" selection-start-line="104" selection-start-column="0" selection-end-line="104" selection-end-column="0" />
---               <folding />
---             </state>
---           </provider>
---@@ -82,8 +82,8 @@
---       <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
---         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
---           <provider selected="true" editor-type-id="text-editor">
----            <state relative-caret-position="285">
----              <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
---+            <state relative-caret-position="-968">
---+              <caret line="60" column="17" selection-start-line="60" selection-start-column="17" selection-end-line="60" selection-end-column="17" />
---               <folding />
---             </state>
---           </provider>
---@@ -99,11 +99,11 @@
---           </provider>
---         </entry>
---       </file>
----      <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
---+      <file leaf-file-name="Main.java" pinned="false" current-in-tab="false">
---         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
---           <provider selected="true" editor-type-id="text-editor">
----            <state relative-caret-position="465">
----              <caret line="61" column="53" selection-start-line="61" selection-start-column="53" selection-end-line="61" selection-end-column="53" />
---+            <state relative-caret-position="584">
---+              <caret line="118" column="63" selection-start-line="118" selection-start-column="47" selection-end-line="118" selection-end-column="63" />
---               <folding />
---             </state>
---           </provider>
---@@ -112,7 +112,7 @@
---       <file leaf-file-name="TestSuite.java" pinned="false" current-in-tab="false">
---         <entry file="file://$PROJECT_DIR$/src/Tests/TestSuite.java">
---           <provider selected="true" editor-type-id="text-editor">
----            <state relative-caret-position="817">
---+            <state relative-caret-position="915">
---               <caret line="67" column="7" selection-start-line="67" selection-start-column="7" selection-end-line="67" selection-end-column="7" />
---               <folding>
---                 <element signature="imports" expanded="true" />
---@@ -126,7 +126,7 @@
---       <file leaf-file-name="TestDebugVsRelease.java" pinned="false" current-in-tab="false">
---         <entry file="file://$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java">
---           <provider selected="true" editor-type-id="text-editor">
----            <state relative-caret-position="585">
---+            <state relative-caret-position="540">
---               <caret line="39" column="0" selection-start-line="13" selection-start-column="4" selection-end-line="39" selection-end-column="0" />
---               <folding>
---                 <element signature="imports" expanded="true" />
---@@ -145,11 +145,11 @@
---           </provider>
---         </entry>
---       </file>
----      <file leaf-file-name="params.txt" pinned="false" current-in-tab="false">
---+      <file leaf-file-name="params.txt" pinned="false" current-in-tab="true">
---         <entry file="file://$PROJECT_DIR$/params2/params.txt">
---           <provider selected="true" editor-type-id="text-editor">
----            <state relative-caret-position="0">
----              <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
---+            <state relative-caret-position="135">
---+              <caret line="9" column="27" selection-start-line="9" selection-start-column="27" selection-end-line="9" selection-end-column="27" />
---               <folding />
---             </state>
---           </provider>
---@@ -222,13 +222,13 @@
---         <option value="$PROJECT_DIR$/src/PlayingGUI/PlayingController.java" />
---         <option value="$PROJECT_DIR$/params1/params.txt" />
---         <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
----        <option value="$PROJECT_DIR$/params2/params.txt" />
---         <option value="$PROJECT_DIR$/src/Tests/testDebugVsRelease.java" />
---         <option value="$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java" />
---         <option value="$PROJECT_DIR$/src/Tests/TestPerft.java" />
---         <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
---         <option value="$PROJECT_DIR$/src/Tests/TestSuite.java" />
---         <option value="$PROJECT_DIR$/src/sample/Main.java" />
---+        <option value="$PROJECT_DIR$/params2/params.txt" />
---       </list>
---     </option>
---   </component>
---@@ -241,6 +241,7 @@
---   </component>
---   <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
---   <component name="ProjectFrameBounds">
---+    <option name="x" value="1920" />
---     <option name="y" value="24" />
---     <option name="width" value="1920" />
---     <option name="height" value="1056" />
---@@ -275,6 +276,8 @@
---       <foldersAlwaysOnTop value="true" />
---     </navigator>
---     <panes>
---+      <pane id="PackagesPane" />
---+      <pane id="Scope" />
---       <pane id="ProjectPane">
---         <subPane>
---           <PATH>
---@@ -325,11 +328,37 @@
---               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
---             </PATH_ELEMENT>
---           </PATH>
---+          <PATH>
---+            <PATH_ELEMENT>
---+              <option name="myItemId" value="chessGui" />
---+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
---+            </PATH_ELEMENT>
---+            <PATH_ELEMENT>
---+              <option name="myItemId" value="chessGui" />
---+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
---+            </PATH_ELEMENT>
---+            <PATH_ELEMENT>
---+              <option name="myItemId" value="params2" />
---+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
---+            </PATH_ELEMENT>
---+          </PATH>
---+          <PATH>
---+            <PATH_ELEMENT>
---+              <option name="myItemId" value="chessGui" />
---+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
---+            </PATH_ELEMENT>
---+            <PATH_ELEMENT>
---+              <option name="myItemId" value="chessGui" />
---+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
---+            </PATH_ELEMENT>
---+            <PATH_ELEMENT>
---+              <option name="myItemId" value="params1" />
---+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
---+            </PATH_ELEMENT>
---+          </PATH>
---         </subPane>
---       </pane>
---       <pane id="Scratches" />
----      <pane id="PackagesPane" />
----      <pane id="Scope" />
---     </panes>
---   </component>
---   <component name="PropertiesComponent">
---@@ -610,7 +639,7 @@
---     <option name="totallyTimeSpent" value="1302000" />
---   </component>
---   <component name="ToolWindowManager">
----    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
---+    <frame x="1920" y="24" width="1920" height="1056" extended-state="7" />
---     <editor active="true" />
---     <layout>
---       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
---@@ -620,7 +649,7 @@
---       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.060020346" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
---       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
---       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
----      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
---+      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
---       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
---       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
---       <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
---@@ -1001,26 +1030,33 @@
---         </state>
---       </provider>
---     </entry>
----    <entry file="file://$PROJECT_DIR$/params2/params.txt">
---+    <entry file="file://$PROJECT_DIR$/src/Tests/TestPerft.java" />
---+    <entry file="file://$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java">
---       <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="0">
----          <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
----          <folding />
---+        <state relative-caret-position="540">
---+          <caret line="39" column="0" selection-start-line="13" selection-start-column="4" selection-end-line="39" selection-end-column="0" />
---+          <folding>
---+            <element signature="imports" expanded="true" />
---+          </folding>
---         </state>
---       </provider>
---     </entry>
----    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
---+    <entry file="file://$PROJECT_DIR$/src/Tests/TestSuite.java">
---       <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="285">
----          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
----          <folding />
---+        <state relative-caret-position="915">
---+          <caret line="67" column="7" selection-start-line="67" selection-start-column="7" selection-end-line="67" selection-end-column="7" />
---+          <folding>
---+            <element signature="imports" expanded="true" />
---+            <element signature="e#291#292#0" expanded="true" />
---+            <element signature="e#325#326#0" expanded="true" />
---+          </folding>
---         </state>
---       </provider>
---     </entry>
----    <entry file="file://$PROJECT_DIR$/params1/params.txt">
---+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
---       <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="135">
----          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---+        <state relative-caret-position="1530">
---+          <caret line="104" column="0" selection-start-line="104" selection-start-column="0" selection-end-line="104" selection-end-column="0" />
---           <folding />
---         </state>
---       </provider>
---@@ -1033,48 +1069,34 @@
---         </state>
---       </provider>
---     </entry>
----    <entry file="file://$PROJECT_DIR$/src/Tests/TestPerft.java">
---+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
---       <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="120">
----          <caret line="8" column="4" selection-start-line="8" selection-start-column="4" selection-end-line="8" selection-end-column="4" />
---+        <state relative-caret-position="584">
---+          <caret line="118" column="63" selection-start-line="118" selection-start-column="47" selection-end-line="118" selection-end-column="63" />
---           <folding />
---         </state>
---       </provider>
---     </entry>
----    <entry file="file://$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java">
----      <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="585">
----          <caret line="39" column="0" selection-start-line="13" selection-start-column="4" selection-end-line="39" selection-end-column="0" />
----          <folding>
----            <element signature="imports" expanded="true" />
----          </folding>
----        </state>
----      </provider>
----    </entry>
----    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
---+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
---       <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="457">
----          <caret line="115" column="0" selection-start-line="115" selection-start-column="0" selection-end-line="115" selection-end-column="0" />
---+        <state relative-caret-position="-968">
---+          <caret line="60" column="17" selection-start-line="60" selection-start-column="17" selection-end-line="60" selection-end-column="17" />
---           <folding />
---         </state>
---       </provider>
---     </entry>
----    <entry file="file://$PROJECT_DIR$/src/Tests/TestSuite.java">
---+    <entry file="file://$PROJECT_DIR$/params1/params.txt">
---       <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="817">
----          <caret line="67" column="7" selection-start-line="67" selection-start-column="7" selection-end-line="67" selection-end-column="7" />
----          <folding>
----            <element signature="imports" expanded="true" />
----            <element signature="e#291#292#0" expanded="true" />
----            <element signature="e#325#326#0" expanded="true" />
----          </folding>
---+        <state relative-caret-position="135">
---+          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
---+          <folding />
---         </state>
---       </provider>
---     </entry>
----    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
---+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
---       <provider selected="true" editor-type-id="text-editor">
----        <state relative-caret-position="465">
----          <caret line="61" column="53" selection-start-line="61" selection-start-column="53" selection-end-line="61" selection-end-column="53" />
---+        <state relative-caret-position="135">
---+          <caret line="9" column="27" selection-start-line="9" selection-start-column="27" selection-end-line="9" selection-end-column="27" />
---           <folding />
---         </state>
---       </provider>
---diff --git a/chessGui/params2/params.txt b/chessGui/params2/params.txt
---index 8395449..dadedc6 100644
------ a/chessGui/params2/params.txt
---+++ b/chessGui/params2/params.txt
---@@ -1,4 +1,4 @@
----queenvalue 975
---+queenvalue  975
--- pawnvalue  100
--- rookvalue  500
--- knightvalue 320
---diff --git a/chessGui/src/sample/Main.java b/chessGui/src/sample/Main.java
---index 0101d88..3d26da1 100644
------ a/chessGui/src/sample/Main.java
---+++ b/chessGui/src/sample/Main.java
---@@ -59,14 +59,14 @@ public class Main extends Application {
---         }*/
--- 
--- 
----        String s = "110000010010001000010100000000000";
---+       /* String s = "110000010010001000010100000000000";
---         s = new StringBuilder(s).reverse().toString();
--- 
---         for(int ind=0; ind < s.length(); ind++) {
---             if(s.charAt(ind) == '1') {
---                 System.out.println(ind);
---             }
----        }
---+        }*/
---        /* if(TestDebugVsRelease.testDebugvsRelease("/home/vabi/code/chessEngine/Cpp/Debug/Vabi", "/home/vabi/code/chessEngine/Cpp/Release/Vabi")) {
---             System.out.println("Test passed");
---         } else {
---@@ -82,7 +82,7 @@ public class Main extends Application {
---             System.out.println(s);
---         }*/
--- 
----      /* UciProcessing processesList[] = new UciProcessing[3];
---+        UciProcessing processesList[] = new UciProcessing[3];
--- 
---         for(int ind=0; ind < 3; ind++) {
---             processesList[ind] = new UciProcessing("/home/vabi/code/chessEngine/Cpp/uciDefenderRelease/Vabi", "params1", "/home/vabi/code/chessEngine/Cpp/uciChallengeRelease/Vabi", "params2", 10000);
---@@ -133,7 +133,7 @@ public class Main extends Application {
--- 
--- 
---             Thread.sleep(10000);
----        }*/
---+        }
--- 
--- 
--- 
---diff --git a/output b/output
---deleted file mode 100644
---index e69de29..0000000
---diff --git a/to_checkin.diff b/to_checkin.diff
---index 737f112..292089c 100644
------ a/to_checkin.diff
---+++ b/to_checkin.diff
---@@ -1,8793 +0,0 @@
----diff --git a/Cpp/.cproject b/Cpp/.cproject
----index 91f122f..7cb4e25 100644
------- a/Cpp/.cproject
----+++ b/Cpp/.cproject
----@@ -29,6 +29,7 @@
---- 								<option id="gnu.cpp.compiler.option.dialect.std.925735192" name="Language standard" superClass="gnu.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
---- 								<option id="gnu.cpp.compiler.option.preprocessor.def.858912106" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
---- 									<listOptionValue builtIn="false" value="HASH"/>
----+									<listOptionValue builtIn="false" value="DEBUG"/>
---- 								</option>
---- 								<option id="gnu.cpp.compiler.option.debugging.gprof.1552489047" name="Generate gprof information (-pg)" superClass="gnu.cpp.compiler.option.debugging.gprof" useByScannerDiscovery="false" value="true" valueType="boolean"/>
---- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.855014974" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----@@ -82,7 +83,7 @@
---- 							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1283391186" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
---- 							<tool command="g++" id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.1275758125" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
---- 								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.818781076" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
-----								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.1939078689" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.max" valueType="enumerated"/>
----+								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.1939078689" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
---- 								<option id="gnu.cpp.compiler.option.include.paths.2128545554" name="Include paths (-I)" superClass="gnu.cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
---- 									<listOptionValue builtIn="false" value="/home/vabi/code/chessEngine/Cpp/src"/>
---- 								</option>
----@@ -337,7 +338,7 @@
---- 							<builder buildPath="${workspace_loc:/Vabi}/Release" id="cdt.managedbuild.target.gnu.builder.exe.release.1560450255" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.target.gnu.builder.exe.release"/>
---- 							<tool id="cdt.managedbuild.tool.gnu.archiver.base.468655851" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
---- 							<tool command="x86_64-w64-mingw32-g++" id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.299814792" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
-----								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.37780282" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.more" valueType="enumerated"/>
----+								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.37780282" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
---- 								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.246445992" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
---- 								<option id="gnu.cpp.compiler.option.include.paths.1804762071" name="Include paths (-I)" superClass="gnu.cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
---- 									<listOptionValue builtIn="false" value="/home/vabi/code/chessEngine/Cpp/src"/>
----@@ -349,6 +350,7 @@
---- 								<option id="gnu.cpp.compiler.option.optimization.flags.1217448668" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="" valueType="string"/>
---- 								<option id="gnu.cpp.compiler.option.preprocessor.def.1628151150" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
---- 									<listOptionValue builtIn="false" value="HASH"/>
----+									<listOptionValue builtIn="false" value="WINDOWS"/>
---- 								</option>
---- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.656620263" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
---- 							</tool>
----diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
----index a436910..f3e26ed 100644
------- a/Cpp/src/Search/moveOrdering.cpp
----+++ b/Cpp/src/Search/moveOrdering.cpp
----@@ -17,13 +17,15 @@
---- #include <lib/moveMaking/moveMaking.hpp>
---- #include <parameters/parameters.hpp>
---- #include <cmath>
-----
-----
----+#include <userInterface/UIlayer.hpp>
----+extern uint64_t bishopFieldTable[];
----+extern uint64_t rookFieldTable[];
---- extern int32_t historyTable[2][64][64];
---- extern int16_t pieceTables[7][2][64];
---- 
---- extern uint16_t killerMoves[20][2];
-----
----+extern uint64_t bishopMoveTables[64][512];
----+extern uint64_t rookMoveTables[64][4096];
---- #define WHITEKINGCASTLECHESSFIELDS ((1ULL << 4) | (1ULL << 5) | (1ULL << 6))
---- #define WHITEQUEENCASTLECHESSFIELDS ((1ULL << 4) | (1ULL << 3) | (1ULL << 2))
---- #define BLACKKINGCASTLECHESSFIELDS ((1ULL << 60) | (1ULL << 61) | (1ULL << 62))
----@@ -68,8 +70,33 @@ void calcCaptureSortEval(chessPosition* position, chessMove* mv, uint16_t hashed
---- 
---- #define ILLEGAL -20000
---- 
-----static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackTable* opponentAttackTable, AttackTable* ownAttackTable, uint16_t hashedMove, uint16_t killerA, uint16_t killerB, uint16_t refutationTarget) {
----+static inline void calcSortEval( chessPosition* position, chessMove* mv, bool isInCheck, AttackTable* opponentAttackTable, AttackTable* ownAttackTable, uint16_t hashedMove, uint16_t killerA, uint16_t killerB, uint16_t refutationTarget) {
---- 	//TODO: add bonus for pawn pushes to 6th/7th row!
----+	/*if(isInCheck) {   //for some reason I don't fully understand, adding this here slows and changes the search?? Maybe because these moves then are not history-reduced? At least possible.
----+		uint16_t kingField = findLSB(position->pieceTables[position->toMove][king]);
----+
----+		uint64_t bishopmoves =  bishopMoveTables[kingField][0];
----+		uint64_t rookmoves   =  rookMoveTables[kingField][0];
----+		const uint64_t kingSliderAttackFields = bishopmoves | rookmoves;
----+
----+		bool mayBlockCheck = BIT64(mv->targetField) & kingSliderAttackFields;
----+
----+		if(!mayBlockCheck && !(mv->captureType == knight) && !(mv->type == kingMove) && !(mv->type == enpassant)) {
----+			mv->sortEval = ILLEGAL;
----+			makeMove(mv, position);
----+			kingField = findLSB(position->pieceTables[1-position->toMove][king]);
----+			if(!isFieldAttacked(position, position->toMove, kingField)) {
----+				std::cout << chessPositionToFenString(*position) << std::endl;
----+				std::cout << chessPositionToOutputString(*position) << std::endl;
----+				undoMove(position);
----+				std::cout << chessPositionToFenString(*position) << std::endl;
----+				std::cout << "WTF??" << std::endl;
----+			}
----+			undoMove(position);
----+			return;
----+		}
----+	}*/
----+	isInCheck = !isInCheck;
---- 	const evalParameters* evalPars 						= getEvalParameters(); //TODO: move outside
---- 	int16_t sortEval = 0;
---- 
----@@ -77,6 +104,8 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
---- 		sortEval = sortEval+captureEvals[mv->type][mv->captureType];
---- 	}
---- 
----+
----+
---- 	/*if(mv->captureType != none){
---- 		makeMove(mv, position);
---- 		sortEval = SEE(position, mv);
----@@ -260,7 +289,7 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
---- 	mv->sortEval = sortEval;
---- }
---- 
-----bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget) {
----+bool calculateStandardSortEvals(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget) {
---- 
---- 	AttackTable opponentAttackTable = makeAttackTable(position, (playerColor) (1-position->toMove), position->pieceTables[position->toMove][king]);
---- 	AttackTable ownAttackTable 		= makeAttackTable(position, position->toMove);
----@@ -270,7 +299,7 @@ bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, u
---- 	uint16_t killerMoveA = killerMoves[ply][0];
---- 	uint16_t killerMoveB = killerMoves[ply][1];
---- 	for (uint16_t ind=0; ind < moves->length; ind++) {
-----		calcSortEval(position, &(*moves)[ind], &opponentAttackTable, &ownAttackTable, hashedMove, killerMoveA, killerMoveB, refutationTarget);
----+		calcSortEval(position, &(*moves)[ind], isInCheck, &opponentAttackTable, &ownAttackTable, hashedMove, killerMoveA, killerMoveB, refutationTarget);
---- 		if((*moves)[ind].sortEval > bestEval){
---- 			bestEval = (*moves)[ind].sortEval;
---- 			bestIndex = ind;
----diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
----index 39ca566..75be942 100644
------- a/Cpp/src/Search/negamax.cpp
----+++ b/Cpp/src/Search/negamax.cpp
----@@ -26,6 +26,9 @@ extern uint8_t searchId;
---- extern std::atomic<bool> continueSearch;
---- static searchDebugData searchCounts;
---- 
----+extern uint64_t bishopFieldTable[];
----+extern uint64_t rookFieldTable[];
----+
---- searchDebugData getSearchData(){
---- 	return searchCounts;
---- }
----@@ -43,6 +46,8 @@ void setTotalTime(uint32_t tTime, uint64_t start){
---- }
---- 
---- 
----+
----+
---- uint64_t trueRets = 0;
---- uint64_t falseRets = 0;
---- 
----@@ -75,6 +80,31 @@ uint16_t repetitionData[16384] = {0};
---- 
---- //std::ofstream logger("/home/vabi/log8.txt");
---- 
----+static inline void get_extensions_reductions(uint16_t* reduction, uint16_t* extension, bool check, bool movingSideInCheck, uint16_t ply, uint16_t max_ply, int16_t depth, chessMove* move, uint16_t ind) {
----+
----+		if(!check && !movingSideInCheck && (move->captureType == none) && (depth > 2) && (ply > 0)){
----+			if((ind > 3)){
----+				*reduction = 1;
----+				if(move->sortEval < -50) {
----+					*reduction = 2;
----+				}
----+			}
----+		}
----+
----+		if(check && ((ply+depth < max_ply-1) || ((depth == 1) && (ply+depth < max_ply)) )){
----+			*extension = 1;
----+			*reduction = 0;
----+		}
----+
----+		bool closeToPromotion = (move->type == pawnMove) && ( (move->targetField > 48) || (move->targetField < 16));
----+
----+		if( (closeToPromotion || (move->type == promotionQueen)) && (ply+depth+*extension < max_ply-1)) {
----+			*extension = *extension+1;
----+			*reduction = 0;
----+		}
----+
----+}
----+
---- static inline bool backtrack_position_for_repetition(chessPosition* position) {
---- 	int16_t numMovesToCheck = position->data.fiftyMoveRuleCounter;
---- 	uint64_t current_hash = position->zobristHash;
----@@ -95,16 +125,28 @@ static uint8_t nullmoveReductions[40] = {0,1,2,2,2,2,2,2,
---- 										 3,3,3,3,3,3,3,3,
---- };
---- 
-----static inline bool check_nullmove(chessPosition* position, uint16_t* refutationMoveTarget, uint16_t ply, uint16_t max_ply, int16_t depth, int32_t beta){
-----	//return false;
---- 
-----	if(beta > 10000){ //TODO: more dynamic condition here?
-----		return false;
----+static inline bool check_futility(bool movingSideInCheck, int32_t alpha, chessPosition* position) {
----+	if(!movingSideInCheck && (alpha > -2000)) {
----+		searchCounts.futility_tried++;
----+		int32_t simpleEval = evaluation(position, alpha-151, alpha, true);
----+		if(simpleEval < alpha+100) {
----+			int32_t base = evaluation(position, alpha-151, alpha);
----+			if(base+150 < alpha){
----+				searchCounts.futility_successful++;
----+				//in this case, trying a silent move is pointless.
----+				//std::cout << "Successful futility pruning" << std::endl;
----+				return true;
----+			}
----+		}
---- 	}
----+	return false;
----+}
---- 
-----	/*if(ply > max_ply-2){
----+static inline bool check_nullmove(chessPosition* position, uint16_t* refutationMoveTarget, uint16_t ply, uint16_t max_ply, int16_t depth, int32_t beta){
----+	if(beta > 10000){ //TODO: more dynamic condition here?
---- 		return false;
-----	}*/
----+	}
---- 	int32_t eval = evaluation(position, beta-1, beta);
---- 	if(eval < beta){
---- 		return false; //no point in trying nullmove when the current evaluation is already worse than beta
----@@ -125,37 +167,111 @@ static inline bool check_nullmove(chessPosition* position, uint16_t* refutationM
---- 	return true;
---- }
---- 
----+static inline bool checkHashTable(int16_t* eval, uint16_t* hashMove, bool doHashProbe, uint64_t zobristHash, int16_t alpha, int16_t beta, int16_t depth) {
----+	hashEntry hashVal      = getHashTableEntry(zobristHash);
----+	uint32_t zobristHigher = (uint32_t) (zobristHash >> 32);
----+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristHash & 0xFFFFFFFF)) >> 16);
----+	*hashMove = hashVal.bestMove;
----+	if(doHashProbe){ //TODO: we should check whether another move leads to 3fold rep draw!
----+		if((zobristHigher == hashVal.hashHighBits) && (zobristLower == hashVal.hashLower)) { //TODO: assign bestMove - this can blow up in our face easily TODO: add proper checkmate handling
----+			int16_t oldEval  = hashVal.eval;
----+			if((depth <= hashVal.depth) && (oldEval > -10000) && (oldEval < 10000) && (oldEval != 0)){ //TODO: the != 0 is stupid, but somehwere something goes wrong with 3fold rep scores, so excluded ehre for safety
----+				if( ((hashVal.flag == FAILHIGH) || (hashVal.flag == FULLSEARCH)) && (oldEval >= beta)){
----+					setSearchId(searchId, zobristHash, hashVal.index);
----+					*eval = beta;
----+					return true;
----+				}
----+				else if( ((hashVal.flag == FAILLOW) || (hashVal.flag == FULLSEARCH)) && (oldEval <= alpha)){
----+					setSearchId(searchId, zobristHash, hashVal.index);
----+					*eval =  alpha; //node will fail low
----+					return true;
----+				}
----+				else if((hashVal.flag == FULLSEARCH)){ //TODO: this condition can be vastly improved
----+					setSearchId(searchId, zobristHash, hashVal.index);
----+					*eval = oldEval;
----+					return true;
----+				}
----+			}
----+		}
----+	}
----+	return false;
----+}
----+
----+
----+static inline void updateHistoryTables(chessMove* bestMove, int16_t depth, vdt_vector<chessMove>* moves, uint16_t bestIndex, playerColor toMove) {
----+	if(bestMove->captureType == none){
----+		historyTable[toMove][bestMove->sourceField][bestMove->targetField] += 2*depth*depth;
----+		int32_t cutoff = HISTORY_CUTOFF;
----+		if(historyTable[toMove][bestMove->sourceField][bestMove->targetField] > cutoff){
----+			rescaleHistoryTable();
----+		}
----+	}
----+	for(uint16_t cnt=0; cnt < bestIndex; cnt++){
----+		chessMove mv = (*moves)[cnt];
----+		if(mv.captureType == none){
----+			int32_t cutoff = HISTORY_CUTOFF;
----+			historyTable[toMove][mv.sourceField][mv.targetField] -= depth*depth;
----+			if(historyTable[toMove][mv.sourceField][mv.targetField] < (-cutoff)){
----+				rescaleHistoryTable();
----+			}
----+		}
----+	}
----+}
----+
----+static inline void handleBetaCutoff(chessMove* bestMove, uint64_t zobristHash, int16_t beta, int16_t depth, uint16_t ply, uint8_t searchId) {
----+	setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), zobristHash);
----+	if(bestMove->captureType == none){
----+		uint16_t toRemember = (bestMove->sourceField | (bestMove->targetField << 8));
----+		if ( (killerMoves[ply][0] != toRemember)) {
----+			killerMoves[ply][1] = killerMoves[ply][0];
----+			killerMoves[ply][0] = toRemember;
----+		}
----+	}
----+}
----+
----+
----+static inline void checkTimeout() {
----+	if(get_timestamp()-start_ts >= totalTime){ //TODO: how is this performance wise?
----+		qmvStack.reset();
----+		std::cout << "Total time " << totalTime << std::endl;
----+		throw timeoutException();
----+	}
----+	if(!continueSearch) {
----+		qmvStack.reset();
----+		throw timeoutException();
----+	}
----+}
----+
---- //std::ofstream plogger("/home/vabi/Tools/log.txt");
---- 
---- int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe){
---- 
-----	/*std::string pos = chessPositionToFenString(*position, false);
-----	plogger << pos << " DEPTH " << depth  << " ply " << ply << " alpha " << alpha << " beta " << beta << std::endl;*/
-----
----+	/*std::string pos =chessPositionToFenString(*position);
----+	plogger << pos << std::endl;
---- 
----+	if(pos == "r3k2r/p1pp1pb1/Bn3np1/3pq3/1p2P3/2N2Q1P/PPPB1P1P/R3K2R w KQkq - 0 5") {
----+		std::cout << "gotcha" << std::endl;
----+	}*/
----+	//check for timeout/interruption
----+	//------------------------------
---- 	if(depth > 3) { //TODO: be careful here - we may have to reset the stack in quiescence search as well!
-----		if(get_timestamp()-start_ts >= totalTime){ //TODO: how is this performance wise?
-----			qmvStack.reset();
-----			std::cout << "Total time " << totalTime << std::endl;
-----			throw timeoutException();
-----		}
-----
-----		if(!continueSearch) {
-----			qmvStack.reset();
-----			throw timeoutException();
-----		}
----+		checkTimeout();
---- 	}
---- 	assert(alpha < beta);
---- 	assert(ply+depth <= max_ply);
---- 
---- 	searchCounts.called++;
----+
----+	//50 move rule
----+	//-----------------------------
---- 	if(position->data.fiftyMoveRuleCounter >= 100){
---- 		return 0;
---- 	}
---- 
-----	//don't check repetition in root to avoid stupid losses. TODO: this is a quickfix and may have unintended consequences!
-----	if((ply > 0) && (repetitionData[position->zobristHash & 16383] > 1)){
-----		if(backtrack_position_for_repetition(position)){
----+	//repetition check. don't check repetition in root to avoid stupid losses. TODO: this is a quickfix and may have unintended consequences!
----+	//------------------------------------------------------------------------------------------
----+	if ((ply > 0) && (repetitionData[position->zobristHash & 16383] > 1)) {
----+		if (backtrack_position_for_repetition(position)) {
---- 			searchCounts.threefold_repetitions++;
---- 			return 0;
---- 		} else {
----@@ -163,41 +279,14 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
---- 		}
---- 	}
---- 
-----	if(doHashProbe) {
-----		trueRets++;
----+	//check in hashtable for position value
----+	//----------------------------------------
----+	uint16_t hashmove = 0;
----+	int16_t hashEval = 0;
----+	if(checkHashTable(&hashEval, &hashmove, doHashProbe, position->zobristHash, alpha, beta, depth)) {
----+		return hashEval;
---- 	}
---- 
-----#ifdef HASH
-----	hashEntry hashVal      = getHashTableEntry(position->zobristHash);
-----
-----	uint32_t zobristHigher = (uint32_t) (position->zobristHash >> 32);
-----	uint16_t zobristLower  = (uint16_t) (((uint32_t) (position->zobristHash & 0xFFFFFFFF)) >> 16);
-----	if(doHashProbe){ //TODO: we should check whether another move leads to 3fold rep draw!
-----		if((zobristHigher == hashVal.hashHighBits) && (zobristLower == hashVal.hashLower)) { //TODO: assign bestMove - this can blow up in our face easily TODO: add proper checkmate handling
-----			int16_t oldEval  = hashVal.eval;
-----			if((depth <= hashVal.depth) && (oldEval > -10000) && (oldEval < 10000) && (oldEval != 0)){ //TODO: the != 0 is stupid, but somehwere something goes wrong with 3fold rep scores, so excluded ehre for safety
-----				if( ((hashVal.flag == FAILHIGH) || (hashVal.flag == FULLSEARCH)) && (oldEval >= beta)){
-----					setSearchId(searchId, position->zobristHash, hashVal.index);
-----					return beta;
-----				}
-----				else if( ((hashVal.flag == FAILLOW) || (hashVal.flag == FULLSEARCH)) && (oldEval <= alpha)){
-----					setSearchId(searchId, position->zobristHash, hashVal.index);
-----					return alpha; //node will fail low
-----				}
-----				else if((hashVal.flag == FULLSEARCH)){ //TODO: this condition can be vastly improved
-----					setSearchId(searchId, position->zobristHash, hashVal.index);
-----					if(oldEval <= alpha){
-----						return alpha;
-----					}
-----					if(oldEval >= beta){
-----						return beta;
-----					}
-----					return oldEval;
-----				}
-----			}
-----		}
-----	}
-----#endif
---- 	//go to quiescence on depth 0
---- 	//---------------------------
---- 	if(depth <= 0) {
----@@ -205,6 +294,8 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
---- 		return negamaxQuiescence(position, alpha, beta, 0);
---- 	}
---- 
----+	//try nullmove pruning
----+	//-------------------------
---- 	uint16_t refutationTarget = NO_REFUTATION; //invalid
---- 	uint64_t ownKing = position->pieceTables[position->toMove][king];
---- 	bool movingSideInCheck = isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing));
----@@ -213,172 +304,140 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
---- 			return beta;
---- 		}
---- 	}
-----	//remembers the index of best move after sorting
-----	//-------------------------------------------
-----	int16_t bestIndex = -1;
---- 
---- 	//futility pruning
---- 	//-----------------
-----	if((depth == 1) && (alpha > -2000)) {
-----		if(!movingSideInCheck) {
-----			searchCounts.futility_tried++;
-----			int32_t simpleEval = evaluation(position, alpha-151, alpha, true);
-----			if(simpleEval < alpha+100) {
-----				int32_t base = evaluation(position, alpha-151, alpha);
-----				if(base+150 < alpha){
-----					searchCounts.futility_successful++;
-----					//in this case, trying a silent move is pointless.
-----					//std::cout << "Successful futility pruning" << std::endl;
-----					return  negamaxQuiescence(position, alpha, beta, 0);
-----				}
-----			}
----+	if(depth == 1) {
----+		if(check_futility(movingSideInCheck, alpha, position)) {
----+			return  negamaxQuiescence(position, alpha, beta, 0);
---- 		}
---- 	}
---- 
----+	//------------------------------------------------------------------
----+	//now we are out of tricks, we need to start the actual search.
----+	//------------------------------------------------------------------
----+
----+	//generate moves
----+	//------------------
---- 	uint16_t stackCounter = qmvStack.getCounter();
---- 	vdt_vector<chessMove> moves = qmvStack.getNext();
---- 	generateAllMoves(&moves, position);
---- 
-----#ifdef HASH
-----	uint16_t hashmove = hashVal.bestMove;
-----#else
-----	uint16_t hashmove = 0;
-----#endif
-----
-----	bool isInCheck = orderStandardMoves(position, &moves, ply, hashmove, refutationTarget);
----+	//calc sorteval
----+	//------------------------
----+	bool isInCheck = calculateStandardSortEvals(position, &moves, ply, hashmove, refutationTarget); //does no complete sort, but puts best move at the front
---- 	assert(isInCheck == movingSideInCheck);
---- 
----+	//init variables
----+	//-----------------------------
---- 	bool legalMovesAvailable = false;
---- 	bool foundGoodMove = false;
---- 	searchCounts.wentToSearch++;
---- 
-----	for(volatile uint16_t ind=0; ind < moves.length; ind++){
----+	//remembers the index of best move after sorting
----+	//-------------------------------------------
----+	int16_t bestIndex = -1;
----+	for(uint16_t ind=0; ind < moves.length; ind++){
----+
---- 
---- 		if(ind == 1){
----+			//first move didn't produce cutoff, now we need to sort
----+			//------------------------------------------------------
---- 			searchCounts.neededSort++;
---- 			std::stable_sort(moves.data, moves.data+moves.length);
---- 		}
---- 
----+		//illegal move. Since list is sorted or, in case ind=0, best move is first, we can leave here: all further moves are also illegal.
----+		//---------------------------------------------------------------------------------------------------------------------------------
---- 		if(moves[ind].sortEval < -10000){
---- 			break;
---- 		}
---- 
-----
----+		//now make move and check for legality
----+		//---------------------------------------
---- 		makeMove(&moves[ind], position);
---- 		uint16_t kingField = findLSB( position->pieceTables[1- position->toMove][king]);
---- 
-----		if(isFieldAttacked( position,  position->toMove, kingField)){
-----			if(ind > 0){
-----				assert(moves[ind].type != kingMove); //all king moves moving into check should be found by move ordering!
-----			}
-----		} else {
-----			searchCounts.nodes[depth]++;
-----			searchCounts.totalNodes++;
-----			legalMovesAvailable = true;
-----			chessMove mv;
-----			uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
-----			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
-----			uint16_t reduction = 0;
-----			uint16_t extension = 0;
-----			if(!check && !movingSideInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
-----				if((ind > 3)){
-----					reduction = 1;
-----//#ifdef EXPERIMENTAL
-----					if(moves[ind].sortEval < -50) {
-----						reduction = 2;
-----					}
-----//#endif
-----				}
-----			}
-----
-----			/*if(reduction != fake_reduction){
-----				std::cout << "Different reductions found " << reduction << " " << fake_reduction <<std::endl;
-----			}*/
-----
-----			/*if((ind > 3) &&  && (depth > 2) && !isInCheck) { //LMR
-----				if(!check){
-----
-----				}
-----			}*/
-----
-----			if(check && ((ply+depth < max_ply-1) || ((depth == 1) && (ply+depth < max_ply)) )){
-----				extension = 1;
-----				reduction = 0;
-----			}
-----
-----
-----			bool closeToPromotion = (moves[ind].type == pawnMove) && ( (moves[ind].targetField > 48) || (moves[ind].targetField < 16));
-----
-----			if( (closeToPromotion || (moves[ind].type == promotionQueen)) && (ply+depth+extension < max_ply-1)) {
-----				extension++;
-----				reduction = 0;
----+		if(isInCheck || (BIT64(moves[ind].sourceField) & (rookFieldTable[kingField] | bishopFieldTable[kingField]))) {
----+			if(isFieldAttacked( position,  position->toMove, kingField)){
----+				//move exposed our king, undo and continue
----+				//---------------------------------------------
----+                assert(moves[ind].type != kingMove); //all king moves moving into check should be found by move ordering!
----+				undoMove(position);
----+				continue;
---- 			}
----+		}
---- 
-----			//PVSearch, currently a small gain for us with the > 3
-----			//-------------------------------------------------
-----			if(((ind > 3) || foundGoodMove )&& (depth > 2)) {
-----				int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &mv);
-----				if(value < alpha+1){
-----					undoMove(position);
-----					continue;
-----				}
----+//#ifdef DEBUG
----+		if(isFieldAttacked( position,  position->toMove, kingField)) {
----+			std::cout << chessPositionToOutputString(*position);
----+			std::cout <<  (rookFieldTable[kingField] | bishopFieldTable[kingField]);
----+			std::cout << "WTF" << std::endl;
----+		}
----+//#endif
----+		searchCounts.nodes[depth]++;
----+		searchCounts.totalNodes++;
----+		legalMovesAvailable = true;
----+		chessMove mv;
----+		uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
----+
----+		//check whether last move gave check (so its a check-check)
----+		//----------------------------------------------------------------
----+		bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField);
----+
----+		//get extensions and reductions
----+		//------------------------------
----+		uint16_t reduction = 0;
----+		uint16_t extension = 0;
----+		get_extensions_reductions(&reduction, &extension, check, movingSideInCheck, ply, max_ply, depth, &moves[ind], ind);
----+
----+		//PVSearch, currently a small gain for us with the > 3
----+		//-------------------------------------------------
----+		if(((ind > 3) || foundGoodMove )&& (depth > 2)) {
----+			int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &mv);
----+			if(value < alpha+1){
----+				undoMove(position);
----+				continue;
---- 			}
----+		}
---- 
-----			volatile int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
-----
-----			if(value > alpha){
-----				foundGoodMove = true;
-----				alpha = value;
-----				*bestMove = moves[ind];
-----				bestIndex = ind;
-----			}
----+		//this is the real, full-fledged search now
----+		//-------------------------------------------
----+		int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
----+
----+		//in case move is better than previous, remember
----+		//------------------------------------------------
----+		if(value > alpha){
----+			foundGoodMove = true;
----+			alpha = value;
----+			*bestMove = moves[ind];
----+			bestIndex = ind;
---- 		}
----+
---- 		undoMove(position);
---- 
----+		//in case of beta cutoff, leave
----+		//----------------------------------
---- 		if((alpha >= beta)) {
-----#ifdef HASH
-----			setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
-----#endif
----+			handleBetaCutoff(bestMove, position->zobristHash, beta, depth, ply, searchId);
---- 			if(bestIndex != -1){
---- 				searchCounts.bestIndex[depth][bestIndex]++;
---- 			}
-----			if(bestMove->captureType == none){
-----				uint16_t toRemember = (bestMove->sourceField | (bestMove->targetField << 8));
-----
-----				if ( (killerMoves[ply][0] != toRemember)) {
-----					killerMoves[ply][1] = killerMoves[ply][0];
-----					killerMoves[ply][0] = toRemember;
-----				}
-----			}
-----
---- 			qmvStack.release();
---- 			assert(stackCounter == qmvStack.getCounter());
---- 			return beta;
---- 		}
---- 	}
---- 
----+	//no cutoff. Check whether we found a good move, mate/stalemate handling accordingly. Then Cleanup/bookkeeping, then return alpha
----+	//-------------------------------------------------
---- 	if(bestIndex != -1){
-----		if(bestMove->captureType == none){
-----			historyTable[position->toMove][bestMove->sourceField][bestMove->targetField] += 2*depth*depth;
-----			int32_t cutoff = HISTORY_CUTOFF;
-----			if(historyTable[position->toMove][bestMove->sourceField][bestMove->targetField] > cutoff){
-----				//std::cout << "Rescaling history table " << std::endl;
-----				rescaleHistoryTable();
-----			}
-----		}
-----		for(uint16_t cnt=0; cnt < bestIndex; cnt++){
-----			chessMove mv = moves[cnt];
-----			if(mv.captureType == none){
-----				int32_t cutoff = HISTORY_CUTOFF;
-----				historyTable[position->toMove][mv.sourceField][mv.targetField] -= depth*depth;
-----				if(historyTable[position->toMove][mv.sourceField][mv.targetField] < (-cutoff)){
-----					rescaleHistoryTable();
-----				}
-----			}
-----		}
----+		updateHistoryTables(bestMove, depth, &moves, bestIndex, position->toMove);
---- 		searchCounts.bestIndex[depth][bestIndex]++;
---- 	}
---- 
----+	//mate scores originate here!
----+	//------------------------------
---- 	if(!legalMovesAvailable){
---- 		if(movingSideInCheck){
---- 			alpha = -30000+ply;
----@@ -387,16 +446,19 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
---- 		}
---- 	}
---- 
-----#ifdef HASH
-----
----+	//set hash entry
----+	//----------------------
---- 	if(foundGoodMove) {
---- 		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
---- 	} else { //we failed low, remember as well
---- 		setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
---- 	}
-----#endif
----+	//return memory
----+	//---------------------
---- 	qmvStack.release();
---- 	assert(stackCounter == qmvStack.getCounter());
---- 
----+	//and finally return alpha
----+	//--------------------------
---- 	return alpha;
---- }
----diff --git a/Cpp/src/Search/search.hpp b/Cpp/src/Search/search.hpp
----index 62bcfad..09676a8 100644
------- a/Cpp/src/Search/search.hpp
----+++ b/Cpp/src/Search/search.hpp
----@@ -14,7 +14,7 @@ void rescaleHistoryTable();
---- int16_t negamax(chessPosition* position,  uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
---- int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta, uint16_t depth);
---- void resetNodes();
-----bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget);
----+bool calculateStandardSortEvals(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget);
---- void orderCaptureMoves(chessPosition* position, vdt_vector<chessMove>* moves);
---- uint32_t getNodes();
---- 
----diff --git a/Cpp/src/lib/basics.hpp b/Cpp/src/lib/basics.hpp
----index 0abee8d..44d738e 100644
------- a/Cpp/src/lib/basics.hpp
----+++ b/Cpp/src/lib/basics.hpp
----@@ -11,7 +11,7 @@
---- #include <stdint.h>
---- #include <string>
---- #include <DataTypes/vdt_vector.hpp>
-----
----+#include <assert.h>
---- #define NUM_DIFFERENT_PIECES 6
---- 
---- #define BIT64(x) (1ULL << x)
----@@ -35,7 +35,7 @@ struct chessMove{
---- 	figureType captureType;
---- 	int16_t sortEval;
---- 	bool operator<(chessMove move) const{
-----		return sortEval > move.sortEval;
----+			return sortEval > move.sortEval;
---- 	}
---- };
---- 
----diff --git a/Cpp/src/lib/moveGeneration/topLevelMoveGeneration.cpp b/Cpp/src/lib/moveGeneration/topLevelMoveGeneration.cpp
----index c7bca3a..0844466 100644
------- a/Cpp/src/lib/moveGeneration/topLevelMoveGeneration.cpp
----+++ b/Cpp/src/lib/moveGeneration/topLevelMoveGeneration.cpp
----@@ -213,7 +213,6 @@ void generatePawnMoves(vdt_vector<chessMove>* vec, chessPosition* position) {
---- 		#ifdef DEBUG
---- 		if(captureType == none){
---- 			std::cout << "Pawn capture move generation is buggy" << std::endl;
-----
---- 		}
---- 		#endif
---- 		chessMove move;
----diff --git a/Cpp/src/tests/perftTests.cpp b/Cpp/src/tests/perftTests.cpp
----index 8fa7bfa..91b4215 100644
------- a/Cpp/src/tests/perftTests.cpp
----+++ b/Cpp/src/tests/perftTests.cpp
----@@ -24,7 +24,7 @@ uint64_t perftNodes(chessPosition* position, uint16_t depth){
---- 	uint64_t nodes = 0;
---- 	vdt_vector<chessMove> moves = vdt_vector<chessMove>(150);
---- 	generateAllMoves(&moves, position);
-----	orderStandardMoves(position, &moves, 0, 0, NO_REFUTATION);
----+	calculateStandardSortEvals(position, &moves, 0, 0, NO_REFUTATION);
---- 	std::sort(moves.data, moves.data+moves.length);
---- 	bool isMate = true;
---- 	for(uint16_t ind=0; ind < moves.length; ind++){
----diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
----index 589257e..3a19ef8 100644
------- a/Cpp/src/userInterface/UIfunctions.cpp
----+++ b/Cpp/src/userInterface/UIfunctions.cpp
----@@ -641,7 +641,7 @@ bool checkAndMakeMove(chessPosition& position, std::string move){
---- 	vdt_vector<chessMove> moves = vdt_vector<chessMove>(100);
---- 		uint64_t mv = stringToMove(move);
---- 		generateAllMoves(&moves, &position);
-----		orderStandardMoves(&position, &moves, 0, 0, NO_REFUTATION);
----+		calculateStandardSortEvals(&position, &moves, 0, 0, NO_REFUTATION);
---- 		std::sort(moves.data, moves.data+moves.length);
---- 		bool found = false;
---- 		chessMove m;
----diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
----index 4e3b16f..a664bfe 100644
------- a/Cpp/src/userInterface/UImainLoop.cpp
----+++ b/Cpp/src/userInterface/UImainLoop.cpp
----@@ -26,8 +26,13 @@
---- #include <map>
---- #include <atomic>
---- #include <thread>
-----#include "mingw.thread.h"
---- #include <tests/tests.hpp>
----+#include <mutex>
----+
----+//necessary to get windows compile to run
----+//----------------------------------------
----+#include "mingw.thread.h"
----+#include "mingw.mutex.h"
---- 
---- extern uint8_t searchId;
---- extern uint16_t killerMoves[20][2];
----@@ -50,13 +55,17 @@ T StringToNumber ( const std::string &Text )//Text not by const reference so tha
---- 	return ss >> result ? result : 0;
---- }
---- 
----+std::mutex m;
---- 
-----
----+void putLine(std::string output) {
----+	m.lock();
----+	std::cout << output << std::endl;
----+	m.unlock();
----+}
---- 
---- 
---- searchParameters paramsToUse;
---- std::atomic<bool> continueSearch;
-----chessPosition cposition;
---- 
---- uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t numMadeMoves, uint32_t* worst_case_time) {
---- 
----@@ -70,11 +79,7 @@ uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t n
---- 		return UINT32_MAX;
---- 	}
---- 
-----	/*if(depth < 7){
-----		return true;
-----	} else {
-----		return false;
-----	}*/
----+	//TODO: implement the movesToGo parameter handling - currently we play stuff like "40 moves in 40 min" extremely badly
---- 	if(params.totalTime[toMove] > 0) {
---- 		uint32_t total = params.totalTime[toMove];
---- 		uint32_t increment = params.increment[toMove];
----@@ -89,8 +94,6 @@ uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t n
---- 		}
---- 
---- 		uint32_t completeExpectedTime = total+remainingMoves*increment;
-----		std::cout << remainingMoves << std::endl;
-----		std::cout << completeExpectedTime << std::endl;
---- 		float timeAllotted = completeExpectedTime/(2.0*remainingMoves);
---- 
---- 		if(timeAllotted > total/10.0){
----@@ -106,7 +109,9 @@ uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t n
---- void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth, std::string bestMove){
---- 	double nps = ((double) nodes)/((double) time)*1000.0;
---- 	uint64_t npsInt = nps;
-----	std::cout << "info depth " << depth << " score cp " << eval << " nps " << npsInt << " nodes " << nodes << " pv " << bestMove << std::endl;
----+	std::stringstream out;
----+	out << "info depth " << depth << " score cp " << eval << " nps " << npsInt << " nodes " << nodes << " pv " << bestMove;
----+	putLine(out.str());
---- }
---- 
---- 
----@@ -157,7 +162,7 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* node
---- 			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
---- 			if(doAspiration) {
---- 				if ((*eval <= alpha) || (*eval >= beta)) {
-----					std::cout << "Aspiration window search failed, researching..." <<std::endl;
----+
---- 					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &localBestMove, true, false);
---- 				}
---- 
----@@ -167,7 +172,7 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* node
---- 
---- 			*bestMove = localBestMove;
---- 		} catch(timeoutException& e) {
-----			std::cout << "Search timed out" << std::endl;
----+			//std::cout << "Search timed out" << std::endl;
---- 			break;
---- 		}
---- 
----@@ -208,16 +213,17 @@ void setSearchParams(searchParameters params) {
---- }
---- 
---- std::thread engineThread;
----+std::atomic<bool> isSearching(false);
---- 
-----void search(chessPosition p, searchParameters params){
-----	std::cout << "Thread started" <<std::endl;
----+void search(chessPosition cposition, searchParameters params){
---- 	chessMove bestMove;
---- 	uint32_t nodeCount = 0;
---- 	uint64_t mtime = 0;
---- 	int32_t eval = 0;
-----	searchMove(&p, &bestMove,&nodeCount, &mtime, &eval, false, params);
-----	std::cout << "bestmove " << moveToString(bestMove, p) << std::endl;
-----	std::cout << "Leaving thread" <<std::endl;
----+	searchMove(&cposition, &bestMove,&nodeCount, &mtime, &eval, false, params);
----+	putLine("bestmove " + moveToString(bestMove, cposition));
----+	free_position(&cposition);
----+	isSearching = false;
---- }
---- 
---- void launchSearch() {
----@@ -225,8 +231,9 @@ void launchSearch() {
---- 	if(engineThread.joinable()) {
---- 		engineThread.join();
---- 	}
----+	isSearching = true;
----+	chessPosition cposition = memoryLibrarianRetrievePosition();
---- 	engineThread = std::thread(search, cposition, paramsToUse);
-----	std::cout << "Launched thread" <<std::endl;
---- }
---- 
---- 
----@@ -236,7 +243,7 @@ void handleStop() {
---- 	if(engineThread.joinable()) {
---- 		engineThread.join();
---- 	}
-----	std::cout << "Joined engine thread" << std::endl;
----+	assert(!isSearching);
---- }
---- 
---- void handleGo(std::list<std::string> input) {
----@@ -257,7 +264,7 @@ void handleGo(std::list<std::string> input) {
---- 		if("wtime" == current) {
---- 			iterator++;
---- 			if(iterator == input.end()) {
-----				std::cout << "Missing parameter for " << current << std::endl;
----+				putLine( "Missing parameter for " + current);
---- 				params.type = unknown;
---- 				break;
---- 			}
----@@ -268,7 +275,7 @@ void handleGo(std::list<std::string> input) {
---- 		if("btime" == current) {
---- 			iterator++;
---- 			if(iterator == input.end()) {
-----				std::cout << "Missing parameter for " << current << std::endl;
----+				putLine( "Missing parameter for " + current);
---- 				params.type = unknown;
---- 				break;
---- 			}
----@@ -279,7 +286,7 @@ void handleGo(std::list<std::string> input) {
---- 		if("winc" == current) {
---- 			iterator++;
---- 			if(iterator == input.end()) {
-----				std::cout << "Missing parameter for " << current << std::endl;
----+				putLine( "Missing parameter for " + current);
---- 				params.type = unknown;
---- 				break;
---- 			}
----@@ -290,7 +297,7 @@ void handleGo(std::list<std::string> input) {
---- 		if("binc" == current) {
---- 			iterator++;
---- 			if(iterator == input.end()) {
-----				std::cout << "Missing parameter for " << current << std::endl;
----+				putLine( "Missing parameter for " + current);
---- 				params.type = unknown;
---- 				break;
---- 			}
----@@ -306,7 +313,7 @@ void handleGo(std::list<std::string> input) {
---- 		if("movetime" == current) {
---- 			iterator++;
---- 			if(iterator == input.end()) {
-----				std::cout << "Missing parameter for " << current << std::endl;
----+				putLine( "Missing parameter for " + current);
---- 				params.type = unknown;
---- 				break;
---- 			}
----@@ -318,7 +325,7 @@ void handleGo(std::list<std::string> input) {
---- 		if("depth" == current) {
---- 			iterator++;
---- 			if(iterator == input.end()) {
-----				std::cout << "Missing parameter for " << current << std::endl;
----+				putLine( "Missing parameter for " + current);
---- 				params.type = unknown;
---- 				break;
---- 			}
----@@ -331,7 +338,7 @@ void handleGo(std::list<std::string> input) {
---- 		if("movestogo" == current) {
---- 			iterator++;
---- 			if(iterator == input.end()) {
-----				std::cout << "Missing parameter for " << current << std::endl;
----+				putLine( "Missing parameter for " + current);
---- 				params.type = unknown;
---- 				break;
---- 			}
----@@ -343,7 +350,7 @@ void handleGo(std::list<std::string> input) {
---- 	}
---- 
---- 
-----	std::cout << params.type << std::endl;
----+	/*std::cout << params.type << std::endl;
---- 
---- 	if(params.type == time_until_move) {
---- 		std::cout << "White time "      << params.totalTime[0] << std::endl;
----@@ -351,12 +358,10 @@ void handleGo(std::list<std::string> input) {
---- 		std::cout << "White increment " << params.increment[0] << std::endl;
---- 		std::cout << "Black increment " << params.increment[1] << std::endl;
---- 		std::cout << "Moves to go "     << params.movesToGo    << std::endl;
-----	}
----+	}*/
---- 
---- 	if(params.type != unknown) {
---- 		setSearchParams(params);
-----
-----
---- 		launchSearch();
---- 	}
---- 
----@@ -368,9 +373,12 @@ void handlePerft(std::list<std::string> input){
---- 
---- 		if(iterator != input.end()) {
---- 			uint16_t depth = StringToNumber<int32_t>(*iterator);
-----			uint32_t perftret = perftNodes(&cposition, depth);
-----			std::cout << "Perft result " << perftret << std::endl;
-----
----+			chessPosition p = memoryLibrarianRetrievePosition();
----+			uint32_t perftret = perftNodes(&p, depth);
----+			free_position(&p);
----+			std::stringstream ret;
----+			ret << "perftresult " << perftret;
----+			putLine(ret.str());
---- 		}
---- }
---- 
----@@ -380,7 +388,7 @@ void handlePosition(std::list<std::string> input) {
---- 	std::string fen = "";
---- 
---- 	if(input.empty()) {
-----		std::cout << "Invalid position request" << std::endl;
----+		//std::cout << "Invalid position request" << std::endl;
---- 		return;
---- 	}
---- 	auto iterator = input.begin();
----@@ -389,7 +397,7 @@ void handlePosition(std::list<std::string> input) {
---- 		iterator++;
---- 	} else {
---- 		if(*iterator != "fen") {
-----			std::cout << "Invalid position request" << std::endl;
----+			putLine("Invalid position request");
---- 			return;
---- 		}
---- 		iterator++;
----@@ -403,9 +411,6 @@ void handlePosition(std::list<std::string> input) {
---- 		}
---- 
---- 	}
-----
-----
-----
---- 	std::vector<std::string> moveList;
---- 	while(iterator != input.end()) {
---- 		if("moves" !=*iterator) {
----@@ -414,36 +419,26 @@ void handlePosition(std::list<std::string> input) {
---- 		iterator++;
---- 	}
---- 
-----	std::cout << fen << std::endl;
-----
-----	for(auto iterator = moveList.begin(); iterator != moveList.end(); iterator++) {
-----		std::cout << *iterator << std::endl;
-----	}
-----
-----	free_position(&cposition);
-----	cposition = FENtoChessPosition(fen);
-----	for(std::string seg: moveList){
-----		//std::cout << seg << std::endl;
-----		if(!checkAndMakeMove(cposition, seg)){
-----			std::cout << "Illegal move detected" << std::endl;
-----		}
-----	}
-----
----+	memoryLibrarianAdd(fen, moveList);
---- }
---- 
---- void handleEval() {
----+
----+	chessPosition cposition = memoryLibrarianRetrievePosition();
---- 	int32_t eval = evaluation(&cposition, -32000, 32000);
---- 	evaluationResult res = getEvaluationResult();
-----	std::cout << "Total " << eval;
-----	std::cout << " Material " << cposition.figureEval;
-----	std::cout << " PSQ " << res.PSQ-cposition.figureEval;
-----	std::cout << " King safety " <<  res.kingSafety;
-----	std::cout << " Mobility " << res.mobility;
-----	std::cout << " Pawns " << res.staticPawn;
-----	std::cout << " Passed pawns " << res.passedPawn;
-----	std::cout << " rook open files " << res.rookOpenFiles;
-----	std::cout << " bishoppair " << res.bishoppair;
-----	std::cout << std::endl;
----+	std::stringstream evalInfo;
----+	evalInfo << "Total " << eval;
----+	evalInfo << " Material " << cposition.figureEval;
----+	evalInfo << " PSQ " << res.PSQ-cposition.figureEval;
----+	evalInfo << " King safety " <<  res.kingSafety;
----+	evalInfo << " Mobility " << res.mobility;
----+	evalInfo << " Pawns " << res.staticPawn;
----+	evalInfo << " Passed pawns " << res.passedPawn;
----+	evalInfo << " rook open files " << res.rookOpenFiles;
----+	evalInfo << " bishoppair " << res.bishoppair;
----+	putLine(evalInfo.str());
----+	free_position(&cposition);
---- }
---- 
---- void UIloop() {
----@@ -452,34 +447,59 @@ void UIloop() {
---- 	while(continueLoop) {
---- 		userEvent ev = getNextUserEvent();
---- 
-----		switch(ev.input) {
-----			case uci:
-----				handleUciInput(std::cout);
-----				break;
-----			case isready:
-----				handleIsReady(std::cout);
-----				break;
-----			case go:
-----				handleGo(ev.data);
-----				break;
-----			case position:
-----				handlePosition(ev.data);
-----				break;
-----			case stop:
-----				handleStop();
-----				break;
-----			case quit:
-----				handleStop();
-----				continueLoop = false;
-----				break;
-----			case perft:
-----				handlePerft(ev.data);
-----				break;
-----			case eval:
-----				handleEval();
-----				break;
-----			default:
-----				std::cout << "Not yet implemented" << std::endl;
----+		//restricted interface during search
----+		//------------------------------------
----+		if(isSearching) {
----+			switch(ev.input) {
----+				case isready:
----+					handleIsReady(std::cout);
----+					break;
----+				case stop:
----+					handleStop();
----+					break;
----+				case quit:
----+					handleStop();
----+					continueLoop = false;
----+					break;
----+				default:
----+					putLine("Invalid request during search");
----+			}
----+
----+		} else {
----+			//full interface otherwise
----+			//---------------------------
----+			switch(ev.input) {
----+				case uci:
----+					handleUciInput(std::cout);
----+					break;
----+				case isready:
----+					handleIsReady(std::cout);
----+					break;
----+				case go:
----+					handleGo(ev.data);
----+					break;
----+				case position:
----+					handlePosition(ev.data);
----+					break;
----+				case stop:
----+					handleStop();
----+					break;
----+				case quit:
----+					handleStop();
----+					continueLoop = false;
----+					break;
----+				case perft:
----+					handlePerft(ev.data);
----+					break;
----+				case eval:
----+					handleEval();
----+					break;
----+				case invalid:
----+					putLine("Invalid request");
----+					break;
----+				default:
----+					putLine("Not yet implemented");
----+			}
---- 		}
---- 	}
---- 
----diff --git a/Cpp/src/userInterface/uciInterface.hpp b/Cpp/src/userInterface/uciInterface.hpp
----index ae5f566..efc5bd2 100644
------- a/Cpp/src/userInterface/uciInterface.hpp
----+++ b/Cpp/src/userInterface/uciInterface.hpp
----@@ -10,25 +10,6 @@
---- 
---- #include "userInterface.hpp"
---- #include <vector>
-----class uciInterface: public userInterface {
-----	public:
-----		uciInterface(){
-----			initialize();
-----		}
-----		void initialize();
-----		void sendNewPosition(std::string position);
-----		void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth, std::string bestMove);
-----		bool receiveMove(std::string& move);
-----		bool receiveUndoMove();
-----		bool receiveForceMove();
-----		bool receiveNewPosition(std::string& position, std::vector<std::string>& moves);
-----		void readInput();
-----		void sendBestMove(std::string position);
-----		bool receiveAnalyze(std::string& position, searchParameters& params);
-----		bool positionRequested();
-----};
-----
-----
---- 
---- 
---- #endif /* USERINTERFACE_UCIINTERFACE_HPP_ */
----diff --git a/Cpp/src/userInterface/userInterface.hpp b/Cpp/src/userInterface/userInterface.hpp
----index 48a9248..b0d7f83 100644
------- a/Cpp/src/userInterface/userInterface.hpp
----+++ b/Cpp/src/userInterface/userInterface.hpp
----@@ -11,23 +11,9 @@
---- #include <string>
---- #include <vector>
---- #include "interfaceStructs.hpp"
----+#include <lib/basics.hpp>
---- 
-----
-----class userInterface {
-----	public:
-----		virtual void initialize()=0;
-----		virtual void sendNewPosition(std::string newPosition)=0;
-----		virtual void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth, std::string bestMove)=0;
-----		virtual bool receiveMove(std::string& move)=0;
-----		virtual bool receiveUndoMove()=0;
-----		virtual bool receiveForceMove()=0;
-----		virtual bool receiveNewPosition(std::string& position, std::vector<std::string>& moves)=0;
-----		virtual~ userInterface(){};
-----		virtual void readInput()=0;
-----		virtual void sendBestMove(std::string position)=0;
-----		virtual bool receiveAnalyze(std::string& position, searchParameters& params)=0;
-----		virtual bool positionRequested()=0;
-----};
-----
----+void memoryLibrarianAdd(std::string newPosition, std::vector<std::string> moves);
----+chessPosition memoryLibrarianRetrievePosition();
---- 
---- #endif /* USERINTERFACE_USERINTERFACE_HPP_ */
----diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
----index dfb428d..8c197e2 100644
------- a/chessGui/.idea/workspace.xml
----+++ b/chessGui/.idea/workspace.xml
----@@ -72,8 +72,8 @@
----       <file leaf-file-name="uciEngineHandler.java" pinned="false" current-in-tab="false">
----         <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
----           <provider selected="true" editor-type-id="text-editor">
-----            <state relative-caret-position="299">
-----              <caret line="79" column="23" selection-start-line="79" selection-start-column="23" selection-end-line="79" selection-end-column="23" />
----+            <state relative-caret-position="457">
----+              <caret line="115" column="0" selection-start-line="115" selection-start-column="0" selection-end-line="115" selection-end-column="0" />
----               <folding />
----             </state>
----           </provider>
----@@ -82,8 +82,8 @@
----       <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
----         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----           <provider selected="true" editor-type-id="text-editor">
-----            <state relative-caret-position="501">
-----              <caret line="109" column="44" selection-start-line="109" selection-start-column="33" selection-end-line="109" selection-end-column="44" />
----+            <state relative-caret-position="285">
----+              <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
----               <folding />
----             </state>
----           </provider>
----@@ -102,8 +102,44 @@
----       <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
----         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----           <provider selected="true" editor-type-id="text-editor">
-----            <state relative-caret-position="660">
-----              <caret line="60" column="30" selection-start-line="60" selection-start-column="30" selection-end-line="60" selection-end-column="30" />
----+            <state relative-caret-position="465">
----+              <caret line="61" column="53" selection-start-line="61" selection-start-column="53" selection-end-line="61" selection-end-column="53" />
----+              <folding />
----+            </state>
----+          </provider>
----+        </entry>
----+      </file>
----+      <file leaf-file-name="TestSuite.java" pinned="false" current-in-tab="false">
----+        <entry file="file://$PROJECT_DIR$/src/Tests/TestSuite.java">
----+          <provider selected="true" editor-type-id="text-editor">
----+            <state relative-caret-position="817">
----+              <caret line="67" column="7" selection-start-line="67" selection-start-column="7" selection-end-line="67" selection-end-column="7" />
----+              <folding>
----+                <element signature="imports" expanded="true" />
----+                <element signature="e#291#292#0" expanded="true" />
----+                <element signature="e#325#326#0" expanded="true" />
----+              </folding>
----+            </state>
----+          </provider>
----+        </entry>
----+      </file>
----+      <file leaf-file-name="TestDebugVsRelease.java" pinned="false" current-in-tab="false">
----+        <entry file="file://$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java">
----+          <provider selected="true" editor-type-id="text-editor">
----+            <state relative-caret-position="585">
----+              <caret line="39" column="0" selection-start-line="13" selection-start-column="4" selection-end-line="39" selection-end-column="0" />
----+              <folding>
----+                <element signature="imports" expanded="true" />
----+              </folding>
----+            </state>
----+          </provider>
----+        </entry>
----+      </file>
----+      <file leaf-file-name="PlayingGUI.java" pinned="false" current-in-tab="false">
----+        <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingGUI.java">
----+          <provider selected="true" editor-type-id="text-editor">
----+            <state relative-caret-position="105">
----+              <caret line="15" column="13" selection-start-line="15" selection-start-column="13" selection-end-line="15" selection-end-column="13" />
----               <folding />
----             </state>
----           </provider>
----@@ -187,7 +223,11 @@
----         <option value="$PROJECT_DIR$/params1/params.txt" />
----         <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
----         <option value="$PROJECT_DIR$/params2/params.txt" />
----+        <option value="$PROJECT_DIR$/src/Tests/testDebugVsRelease.java" />
----+        <option value="$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java" />
----+        <option value="$PROJECT_DIR$/src/Tests/TestPerft.java" />
----         <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
----+        <option value="$PROJECT_DIR$/src/Tests/TestSuite.java" />
----         <option value="$PROJECT_DIR$/src/sample/Main.java" />
----       </list>
----     </option>
----@@ -235,7 +275,6 @@
----       <foldersAlwaysOnTop value="true" />
----     </navigator>
----     <panes>
-----      <pane id="Scope" />
----       <pane id="ProjectPane">
----         <subPane>
----           <PATH>
----@@ -254,10 +293,43 @@
----               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----             </PATH_ELEMENT>
----           </PATH>
----+          <PATH>
----+            <PATH_ELEMENT>
----+              <option name="myItemId" value="chessGui" />
----+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
----+            </PATH_ELEMENT>
----+            <PATH_ELEMENT>
----+              <option name="myItemId" value="chessGui" />
----+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+            </PATH_ELEMENT>
----+            <PATH_ELEMENT>
----+              <option name="myItemId" value="src" />
----+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+            </PATH_ELEMENT>
----+          </PATH>
----+          <PATH>
----+            <PATH_ELEMENT>
----+              <option name="myItemId" value="chessGui" />
----+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
----+            </PATH_ELEMENT>
----+            <PATH_ELEMENT>
----+              <option name="myItemId" value="chessGui" />
----+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+            </PATH_ELEMENT>
----+            <PATH_ELEMENT>
----+              <option name="myItemId" value="src" />
----+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+            </PATH_ELEMENT>
----+            <PATH_ELEMENT>
----+              <option name="myItemId" value="Tests" />
----+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+            </PATH_ELEMENT>
----+          </PATH>
----         </subPane>
----       </pane>
----       <pane id="Scratches" />
----       <pane id="PackagesPane" />
----+      <pane id="Scope" />
----     </panes>
----   </component>
----   <component name="PropertiesComponent">
----@@ -538,7 +610,7 @@
----     <option name="totallyTimeSpent" value="1302000" />
----   </component>
----   <component name="ToolWindowManager">
-----    <frame x="0" y="24" width="1920" height="1056" extended-state="7" />
----+    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
----     <editor active="true" />
----     <layout>
----       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----@@ -548,11 +620,10 @@
----       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.060020346" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
----       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
----       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
-----      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----+      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
----       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----       <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
-----      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
----@@ -569,6 +640,7 @@
----       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
----       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
----       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
----+      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----     </layout>
----   </component>
----   <component name="Vcs.Log.UiProperties">
----@@ -593,38 +665,6 @@
----     <option name="FILTER_TARGETS" value="false" />
----   </component>
----   <component name="editorHistoryManager">
-----    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-----      <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="1230">
-----          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
-----          <folding />
-----        </state>
-----      </provider>
-----    </entry>
-----    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
-----      <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="195">
-----          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
-----          <folding />
-----        </state>
-----      </provider>
-----    </entry>
-----    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
-----      <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="825">
-----          <caret line="71" column="26" selection-start-line="71" selection-start-column="26" selection-end-line="71" selection-end-column="26" />
-----          <folding />
-----        </state>
-----      </provider>
-----    </entry>
-----    <entry file="file://$PROJECT_DIR$/params2/params.txt">
-----      <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="0">
-----          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
-----          <folding />
-----        </state>
-----      </provider>
-----    </entry>
----     <entry file="file://$PROJECT_DIR$/params1/params.txt">
----       <provider selected="true" editor-type-id="text-editor">
----         <state relative-caret-position="135">
----@@ -953,14 +993,6 @@
----         </state>
----       </provider>
----     </entry>
-----    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-----      <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="501">
-----          <caret line="109" column="44" selection-start-line="109" selection-start-column="33" selection-end-line="109" selection-end-column="44" />
-----          <folding />
-----        </state>
-----      </provider>
-----    </entry>
----     <entry file="file://$PROJECT_DIR$/src/core/Core.java">
----       <provider selected="true" editor-type-id="text-editor">
----         <state relative-caret-position="195">
----@@ -969,18 +1001,18 @@
----         </state>
----       </provider>
----     </entry>
-----    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
----+    <entry file="file://$PROJECT_DIR$/params2/params.txt">
----       <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="299">
-----          <caret line="79" column="23" selection-start-line="79" selection-start-column="23" selection-end-line="79" selection-end-column="23" />
----+        <state relative-caret-position="0">
----+          <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
----           <folding />
----         </state>
----       </provider>
----     </entry>
-----    <entry file="file://$PROJECT_DIR$/params2/params.txt">
----+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----       <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="0">
-----          <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
----+        <state relative-caret-position="285">
----+          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
----           <folding />
----         </state>
----       </provider>
----@@ -993,10 +1025,56 @@
----         </state>
----       </provider>
----     </entry>
----+    <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingGUI.java">
----+      <provider selected="true" editor-type-id="text-editor">
----+        <state relative-caret-position="105">
----+          <caret line="15" column="13" selection-start-line="15" selection-start-column="13" selection-end-line="15" selection-end-column="13" />
----+          <folding />
----+        </state>
----+      </provider>
----+    </entry>
----+    <entry file="file://$PROJECT_DIR$/src/Tests/TestPerft.java">
----+      <provider selected="true" editor-type-id="text-editor">
----+        <state relative-caret-position="120">
----+          <caret line="8" column="4" selection-start-line="8" selection-start-column="4" selection-end-line="8" selection-end-column="4" />
----+          <folding />
----+        </state>
----+      </provider>
----+    </entry>
----+    <entry file="file://$PROJECT_DIR$/src/Tests/TestDebugVsRelease.java">
----+      <provider selected="true" editor-type-id="text-editor">
----+        <state relative-caret-position="585">
----+          <caret line="39" column="0" selection-start-line="13" selection-start-column="4" selection-end-line="39" selection-end-column="0" />
----+          <folding>
----+            <element signature="imports" expanded="true" />
----+          </folding>
----+        </state>
----+      </provider>
----+    </entry>
----+    <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
----+      <provider selected="true" editor-type-id="text-editor">
----+        <state relative-caret-position="457">
----+          <caret line="115" column="0" selection-start-line="115" selection-start-column="0" selection-end-line="115" selection-end-column="0" />
----+          <folding />
----+        </state>
----+      </provider>
----+    </entry>
----+    <entry file="file://$PROJECT_DIR$/src/Tests/TestSuite.java">
----+      <provider selected="true" editor-type-id="text-editor">
----+        <state relative-caret-position="817">
----+          <caret line="67" column="7" selection-start-line="67" selection-start-column="7" selection-end-line="67" selection-end-column="7" />
----+          <folding>
----+            <element signature="imports" expanded="true" />
----+            <element signature="e#291#292#0" expanded="true" />
----+            <element signature="e#325#326#0" expanded="true" />
----+          </folding>
----+        </state>
----+      </provider>
----+    </entry>
----     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----       <provider selected="true" editor-type-id="text-editor">
-----        <state relative-caret-position="660">
-----          <caret line="60" column="30" selection-start-line="60" selection-start-column="30" selection-end-line="60" selection-end-column="30" />
----+        <state relative-caret-position="465">
----+          <caret line="61" column="53" selection-start-line="61" selection-start-column="53" selection-end-line="61" selection-end-column="53" />
----           <folding />
----         </state>
----       </provider>
----diff --git a/chessGui/src/sample/Main.java b/chessGui/src/sample/Main.java
----index 9a6fb6e..0101d88 100644
------- a/chessGui/src/sample/Main.java
----+++ b/chessGui/src/sample/Main.java
----@@ -1,5 +1,6 @@
---- package sample;
---- 
----+import Tests.TestDebugVsRelease;
---- import core.Core;
---- import javafx.application.Application;
---- import javafx.application.Platform;
----@@ -15,6 +16,7 @@ import java.io.BufferedReader;
---- import java.io.File;
---- import java.io.IOException;
---- import java.io.InputStreamReader;
----+import java.math.BigInteger;
---- import java.util.ArrayList;
---- import java.util.List;
---- 
----@@ -56,7 +58,31 @@ public class Main extends Application {
----             System.out.println(st);
----         }*/
---- 
-----       UciProcessing processesList[] = new UciProcessing[3];
----+
----+        String s = "110000010010001000010100000000000";
----+        s = new StringBuilder(s).reverse().toString();
----+
----+        for(int ind=0; ind < s.length(); ind++) {
----+            if(s.charAt(ind) == '1') {
----+                System.out.println(ind);
----+            }
----+        }
----+       /* if(TestDebugVsRelease.testDebugvsRelease("/home/vabi/code/chessEngine/Cpp/Debug/Vabi", "/home/vabi/code/chessEngine/Cpp/Release/Vabi")) {
----+            System.out.println("Test passed");
----+        } else {
----+            System.out.println("Test failed");
----+        }*/
----+
----+
----+
----+        /*uciEngineHandler handler = new uciEngineHandler("/home/vabi/code/chessEngine/Cpp/Release/Vabi",  "params1");
----+        List<String> debugSearchOutput = handler.debugSearchOutput(12);
----+
----+        for(String s: debugSearchOutput){
----+            System.out.println(s);
----+        }*/
----+
----+      /* UciProcessing processesList[] = new UciProcessing[3];
---- 
----         for(int ind=0; ind < 3; ind++) {
----             processesList[ind] = new UciProcessing("/home/vabi/code/chessEngine/Cpp/uciDefenderRelease/Vabi", "params1", "/home/vabi/code/chessEngine/Cpp/uciChallengeRelease/Vabi", "params2", 10000);
----@@ -107,7 +133,7 @@ public class Main extends Application {
---- 
---- 
----             Thread.sleep(10000);
-----        }
----+        }*/
---- 
---- 
---- 
----diff --git a/chessGui/src/uciClient/uciEngineHandler.java b/chessGui/src/uciClient/uciEngineHandler.java
----index b74d4c3..89963b8 100644
------- a/chessGui/src/uciClient/uciEngineHandler.java
----+++ b/chessGui/src/uciClient/uciEngineHandler.java
----@@ -1,6 +1,7 @@
---- package uciClient;
---- 
---- import java.io.*;
----+import java.util.ArrayList;
---- import java.util.List;
---- 
---- /**
----@@ -37,7 +38,7 @@ public class uciEngineHandler {
---- 
----             String answer = reader.readLine();
---- 
-----            if("uciok".equals(answer)){
----+            if("readyok".equals(answer)){
----                 break;
----             }
----         }
----@@ -45,20 +46,24 @@ public class uciEngineHandler {
---- 
----     }
---- 
-----    public String getCurrentPosition() throws IOException { //This is a dirty hack
-----        put("getPosition");
-----        while(true){
----+
----+    public List<String> debugSearchOutput(int depth) throws IOException {
----+        put("go depth "+depth);
----+        List<String> ret = new ArrayList<>();
----+        while(true) {
----             String answer = reader.readLine();
-----           // System.out.println(answer);
-----            String[] splitted = answer.split(" ");
-----            if("currentPosition".equals(splitted[0])){
-----                return splitted[1];
----+            ret.add(answer);
----+            System.out.println(answer);
----+
----+            if((answer.length() >= 8) && ("bestmove".equals(answer.substring(0, 8)))){
----+                break;
----             }
----         }
-----
----+        return ret;
----     }
---- 
---- 
----+
----     public void setPosition(String fenPosition, List<String> moveList) throws IOException{
----         String putStr = "position fen "+fenPosition;
---- 
----@@ -77,7 +82,7 @@ public class uciEngineHandler {
---- 
---- 
----     public void startSearch() throws IOException{
-----        put("go depth 5");
----+        put("go depth 7");
----     }
---- 
----     public int readBestmove(String[] in) throws IOException {
----@@ -108,6 +113,9 @@ public class uciEngineHandler {
----         return eval;
----     }
---- 
----+
----+
----+
----     public void close(){
----         process.destroy();
----     }
----diff --git a/output b/output
----deleted file mode 100644
----index e69de29..0000000
----diff --git a/to_checkin.diff b/to_checkin.diff
----index 57e0281..9ca633c 100644
------- a/to_checkin.diff
----+++ b/to_checkin.diff
----@@ -1,1738 +0,0 @@
-----diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
-----index 12fbe51..a3d58b9 100644
-------- a/Cpp/src/Search/moveOrdering.cpp
-----+++ b/Cpp/src/Search/moveOrdering.cpp
-----@@ -147,6 +147,8 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 
----- 	if(targetAttacked && mv->type == kingMove) {
----- 		sortEval = ILLEGAL;
-----+		mv->sortEval = sortEval;
-----+		return;
----- 	}
----- 
----- 	if( (mv->captureType != none) && ((BIT64(mv->targetField) & opponentAttackTable->completeAttackTable) == 0)) {
-----@@ -203,11 +205,15 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 		sortEval  = 110;
----- 		if(kingBlockers[position->toMove] & opponentAttackTable->completeAttackTable) {
----- 			sortEval = ILLEGAL;
-----+			mv->sortEval = sortEval;
-----+			return;
----- 		}
----- 	} else if(mv->type == castlingQueenside) {
----- 		sortEval  = 70;
----- 		if(queenBlockers[position->toMove] & opponentAttackTable->completeAttackTable) {
----- 			sortEval = ILLEGAL;
-----+			mv->sortEval = sortEval;
-----+		    return;
----- 		}
----- 	}
----- 
-----@@ -243,8 +249,12 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 		sortEval = sortEval+100;
----- 	}
----- 
-----+	if(sortEval > 20000) {
-----+		std::cout << "????" <<std::endl;
-----+	}
-----+
----- 	if( ((mv->sourceField) | (mv->targetField << 8)) == hashedMove) {
------			sortEval = sortEval+2000;
-----+			sortEval = sortEval+10000;
----- 	}
----- 
----- 	mv->sortEval = sortEval;
-----diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
-----index 35d6724..9b25c84 100644
-------- a/Cpp/src/Search/negamax.cpp
-----+++ b/Cpp/src/Search/negamax.cpp
-----@@ -43,6 +43,28 @@ void setTotalTime(uint32_t tTime, uint64_t start){
----- }
----- 
----- 
-----+uint64_t trueRets = 0;
-----+uint64_t falseRets = 0;
-----+
-----+bool getHashMoveToFront(vdt_vector<chessMove>* moves, uint16_t hashMove, chessMove* mov) {
-----+
-----+	for(uint16_t ind=0; ind < moves->length; ind++) {
-----+		chessMove mv = (*moves)[ind];
-----+		if( ((mv.sourceField) | (mv.targetField << 8)) == hashMove) {
-----+			 chessMove buffer = (*moves)[0];
-----+			 (*moves)[0] = (*moves)[ind];
-----+			 (*moves)[ind] = buffer;
-----+			 *mov = mv;
-----+			 trueRets++;
-----+			 return true;
-----+		}
-----+
-----+	}
-----+	falseRets++;
-----+	return false;
-----+
-----+}
-----+
----- uint16_t killerMoves[40][2];
----- 
----- //static chessMove buffer[5000];
-----@@ -187,23 +209,32 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 	if((depth == 1) && (alpha > -2000)) {
----- 		if(!movingSideInCheck) {
----- 			searchCounts.futility_tried++;
------			int32_t base = evaluation(position, alpha-151, alpha);
------			if(base+150 < alpha){
------				searchCounts.futility_successful++;
------				//in this case, trying a silent move is pointless.
------				//std::cout << "Successful futility pruning" << std::endl;
------				return  negamaxQuiescence(position, alpha, beta, 0);
-----+			int32_t simpleEval = evaluation(position, alpha-151, alpha, true);
-----+			if(simpleEval < alpha+100) {
-----+				int32_t base = evaluation(position, alpha-151, alpha);
-----+				if(base+150 < alpha){
-----+					searchCounts.futility_successful++;
-----+					//in this case, trying a silent move is pointless.
-----+					//std::cout << "Successful futility pruning" << std::endl;
-----+					return  negamaxQuiescence(position, alpha, beta, 0);
-----+				}
----- 			}
----- 		}
----- 	}
----- 
------
----- 	uint16_t stackCounter = qmvStack.getCounter();
----- 	vdt_vector<chessMove> moves = qmvStack.getNext();
----- 	generateAllMoves(&moves, position);
------	bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
-----+	chessMove mv;
-----+	bool foundHashMove = getHashMoveToFront(&moves, hashVal.bestMove, &mv);
-----+
-----+	if(!foundHashMove) {
-----+		bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
-----+		assert(isInCheck == movingSideInCheck);
-----+	}
-----+
-----+
----- 
------	assert(isInCheck == movingSideInCheck);
----- 	bool legalMovesAvailable = false;
----- 	bool foundGoodMove = false;
----- 	searchCounts.wentToSearch++;
-----@@ -211,6 +242,10 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 	for(uint16_t ind=0; ind < moves.length; ind++){
----- 
----- 		if(ind == 1){
-----+			if(foundHashMove) {
-----+				orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
-----+			}
-----+
----- 			searchCounts.neededSort++;
----- 			std::sort(moves.data, moves.data+moves.length);
----- 		}
-----@@ -236,7 +271,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
----- 			uint16_t reduction = 0;
----- 			uint16_t extension = 0;
------			if(!check && !isInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
-----+			if(!check && !movingSideInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
----- 				if((ind > 3)){
----- 					reduction = 1;
----- //#ifdef EXPERIMENTAL
-----@@ -334,7 +369,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 	}
----- 
----- 	if(!legalMovesAvailable){
------		if(isInCheck){
-----+		if(movingSideInCheck){
----- 			alpha = -30000+ply;
----- 		} else {
----- 			alpha = 0;
-----diff --git a/Cpp/src/Search/quiescence.cpp b/Cpp/src/Search/quiescence.cpp
-----index 5aae8de..fede8a4 100644
-------- a/Cpp/src/Search/quiescence.cpp
-----+++ b/Cpp/src/Search/quiescence.cpp
-----@@ -75,7 +75,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----- 	}
----- //#endif
----- 
------	/*hashEntry hashVal      = getHashTableEntry(position->zobristHash);
-----+	hashEntry hashVal      = getHashTableEntry(position->zobristHash);
----- 
----- 	uint32_t zobristHigher = (uint32_t) (position->zobristHash >> 32);
----- 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (position->zobristHash & 0xFFFFFFFF)) >> 16);
-----@@ -102,11 +102,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----- 				return oldEval;
----- 			}
----- 		}
------	}*/
------
------
------
------
-----+	}
----- 
----- 	int32_t baseEval = evaluation(position, alpha, beta);
----- 
-----diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
-----index 393a357..d2a6b01 100644
-------- a/Cpp/src/Vabi.cpp
-----+++ b/Cpp/src/Vabi.cpp
-----@@ -91,8 +91,9 @@ int main() {
----- 		latexOutput(line, out);
----- 	}*/
----- 
------	/*runPerformanceTests();
------	return 0;*/
-----+
-----+	runPerformanceTests();
-----+	return 0;
----- 	/*std::cout << testPerftTestSuite().passed << std::endl;
----- 	return 0;*/
----- 	UIloop();
-----diff --git a/Cpp/src/hashTables/zobristHash.cpp b/Cpp/src/hashTables/zobristHash.cpp
-----index 14d9f64..9d3ad11 100644
-------- a/Cpp/src/hashTables/zobristHash.cpp
-----+++ b/Cpp/src/hashTables/zobristHash.cpp
-----@@ -33,12 +33,14 @@ static uint16_t permutations[4][4] = {{0,1,2,3}, {1,2,3,0}, {2,3,0,1}, {3,0,1,2}
----- hashEntry getHashTableEntry(uint64_t zobristKey) {
----- 	hashBucket current = moveOrderingHashTable[zobristKey & HASHSIZE];
----- 
------	hashEntry ret = current.hashData[0];
-----+	hashEntry ret;
-----+	ret.bestMove = 0;
-----+	ret.depth   = 0;
----- 
----- 	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----- 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----- 
------	for(uint8_t ind=1; ind < 4; ind++){
-----+	for(uint8_t ind=0; ind < 4; ind++){
----- 		hashEntry entry = current.hashData[ind];
----- 		if((entry.hashHighBits == zobristHigher) && (entry.hashLower == zobristLower)){
----- 			ret = entry;
-----diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
-----index 02e4fcd..497cb00 100644
-------- a/Cpp/src/lib/Evaluation/evaluation.cpp
-----+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
-----@@ -69,7 +69,7 @@ static int32_t rookOpenFiles(const chessPosition* position, uint8_t* pawnOccupan
----- 
----- //static uint32_t counter = 0;
----- 
------int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
-----+int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta, bool PSQ_only){
----- 
----- 
----- 	if( (position->pieceTables[white][pawn] == 0) &&
-----@@ -106,6 +106,10 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----- 
----- 	int32_t pieceTableEval = ((256-taperingValues[phase])*bufferEndgame+taperingValues[phase]*bufferMidgame)/256; //division by 256
----- 	eval = eval+pieceTableEval;
-----+
-----+	if(PSQ_only) {
-----+		return (1-2*position->toMove)*eval;
-----+	}
----- 	result.PSQ = pieceTableEval;
----- 
----- 	int32_t evalsigned = (1-2*position->toMove)*eval;
-----diff --git a/Cpp/src/lib/Evaluation/evaluation.hpp b/Cpp/src/lib/Evaluation/evaluation.hpp
-----index 14f85cd..bfd44e6 100644
-------- a/Cpp/src/lib/Evaluation/evaluation.hpp
-----+++ b/Cpp/src/lib/Evaluation/evaluation.hpp
-----@@ -13,7 +13,7 @@
----- #include <parameters/parameters.hpp>
----- 
----- 
------int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta);
-----+int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta, bool PSQ_only=false);
----- int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, const evalParameters* evalPars);
----- int32_t staticPawnEval(uint64_t pawns, playerColor color, const staticPawnEvalParameters* evalPars);
----- int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccupancy, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable, const kingSafetyEvalParameters* par);
-----diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
-----index ab5c564..589257e 100644
-------- a/Cpp/src/userInterface/UIfunctions.cpp
-----+++ b/Cpp/src/userInterface/UIfunctions.cpp
-----@@ -20,6 +20,8 @@
----- #include <lib/moveGeneration/moveGeneration.hpp>
----- #include <algorithm>
----- #include <lib/Evaluation/evaluation.hpp>
-----+#include <atomic>
-----+
----- static char figureNames[2][6] = {{'P', 'N', 'B', 'R', 'Q', 'K'},
----- 		{'p', 'n', 'b', 'r', 'q', 'k'},
----- };
-----@@ -702,8 +704,10 @@ bool checkAndMakeMove(chessPosition& position, std::string move){
----- 		moves.free_array();
----- 		return found;
----- }
-----+extern std::atomic<bool> continueSearch;
----- 
----- void runPerformanceTests(){
-----+	continueSearch = true;
----- 	for(int depth = 3; depth < 11; depth++){
----- 		std::ifstream file;
----- 		file.open("chesspositionsfixed.txt");
-----diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
-----index 2fdc19d..91d978f 100644
-------- a/Cpp/src/userInterface/UImainLoop.cpp
-----+++ b/Cpp/src/userInterface/UImainLoop.cpp
-----@@ -27,6 +27,7 @@
----- #include <atomic>
----- #include <thread>
----- #include "mingw.thread.h"
-----+#include <tests/tests.hpp>
----- 
----- extern uint8_t searchId;
----- extern uint16_t killerMoves[20][2];
-----@@ -106,6 +107,10 @@ void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth,
----- 
----- bool checkContinue(searchParameters params, uint16_t depth, uint16_t passedTime, uint16_t allottedTime) {
----- 
-----+	if(depth > 27) {
-----+		return false;
-----+	}
-----+
----- 	if(params.type == infinite) {
----- 		return true;
----- 	}
-----@@ -351,6 +356,18 @@ void handleGo(std::list<std::string> input) {
----- 
----- }
----- 
-----+void handlePerft(std::list<std::string> input){
-----+
-----+		auto iterator = input.begin();
-----+
-----+		if(iterator != input.end()) {
-----+			uint16_t depth = StringToNumber<int32_t>(*iterator);
-----+			uint32_t perftret = perftNodes(&cposition, depth);
-----+			std::cout << "Perft result " << perftret << std::endl;
-----+
-----+		}
-----+}
-----+
----- 
----- void handlePosition(std::list<std::string> input) {
----- 
-----@@ -365,10 +382,17 @@ void handlePosition(std::list<std::string> input) {
----- 		fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
----- 		iterator++;
----- 	} else {
-----+		if(*iterator != "fen") {
-----+			std::cout << "Invalid position request" << std::endl;
-----+			return;
-----+		}
-----+		iterator++;
----- 		fen = *iterator;
----- 		iterator++;
----- 		while((iterator != input.end()) && ("moves" != *iterator)) {
-----+			if("fen" != *iterator) {
----- 			fen = fen+" "+*iterator;
-----+			}
----- 			iterator++;
----- 		}
----- 
-----@@ -424,8 +448,12 @@ void UIloop() {
----- 				handleStop();
----- 				break;
----- 			case quit:
-----+				handleStop();
----- 				continueLoop = false;
----- 				break;
-----+			case perft:
-----+				handlePerft(ev.data);
-----+				break;
----- 			default:
----- 				std::cout << "Not yet implemented" << std::endl;
----- 		}
-----diff --git a/Cpp/src/userInterface/uciInputHandler.cpp b/Cpp/src/userInterface/uciInputHandler.cpp
-----index 32fb25c..8270099 100644
-------- a/Cpp/src/userInterface/uciInputHandler.cpp
-----+++ b/Cpp/src/userInterface/uciInputHandler.cpp
-----@@ -43,6 +43,7 @@ void initUserEvents() {
----- 	userEventList["stop"] 				= stop;
----- 	userEventList["ponderhit"] 			= ponderhit;
----- 	userEventList["quit"] 				= quit;
-----+	userEventList["perft"] 				= perft;
----- }
----- 
----- userEvent getNextUserEvent() {
-----diff --git a/Cpp/src/userInterface/userEvents.hpp b/Cpp/src/userInterface/userEvents.hpp
-----index 18da836..a460051 100644
-------- a/Cpp/src/userInterface/userEvents.hpp
-----+++ b/Cpp/src/userInterface/userEvents.hpp
-----@@ -10,7 +10,7 @@
----- #include <string>
----- #include <list>
----- 
------enum uciInput {invalid, uci, debug, isready, setoption, ucinewgame, position, go, stop, ponderhit, quit};
-----+enum uciInput {invalid, uci, debug, isready, setoption, ucinewgame, position, go, stop, ponderhit, quit, perft};
----- 
----- struct userEvent {
----- public:
-----diff --git a/output b/output
-----deleted file mode 100644
-----index e69de29..0000000
-----diff --git a/to_checkin.diff b/to_checkin.diff
-----index 8ee8277..6ba681a 100644
-------- a/to_checkin.diff
-----+++ b/to_checkin.diff
-----@@ -1,1361 +0,0 @@
------diff --git a/Cpp/.cproject b/Cpp/.cproject
------index 2efc1dd..c4592e1 100644
--------- a/Cpp/.cproject
------+++ b/Cpp/.cproject
------@@ -41,6 +41,9 @@
------ 							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.debug.169184492" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.debug"/>
------ 							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug.404430608" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug">
------ 								<option id="gnu.cpp.link.option.debugging.gprof.1616037315" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="true" valueType="boolean"/>
------+								<option id="gnu.cpp.link.option.libs.1848616475" superClass="gnu.cpp.link.option.libs" useByScannerDiscovery="false" valueType="libs">
------+									<listOptionValue builtIn="false" value="pthread"/>
------+								</option>
------ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.624604855" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
------ 									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
------ 									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
------@@ -88,7 +91,7 @@
------ 								<option id="gnu.cpp.compiler.option.warnings.toerrors.1369119801" name="Warnings as errors (-Werror)" superClass="gnu.cpp.compiler.option.warnings.toerrors" useByScannerDiscovery="false" value="true" valueType="boolean"/>
------ 								<option id="gnu.cpp.compiler.option.other.other.1052557102" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
------ 								<option id="gnu.cpp.compiler.option.optimization.flags.1382838263" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
-------								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1780748801" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="true" valueType="boolean"/>
------+								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1780748801" name="Extra warnings (-Wextra)" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="true" valueType="boolean"/>
------ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.1496015459" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
------ 							</tool>
------ 							<tool command="gcc" id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.1303530301" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
------diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
------index d2406d5..b93c9c7 100644
--------- a/Cpp/src/userInterface/UImainLoop.cpp
------+++ b/Cpp/src/userInterface/UImainLoop.cpp
------@@ -18,301 +18,277 @@
------ #include <userInterface/interfaceStructs.hpp>
------ #include <lib/moveGeneration/moveGeneration.hpp>
------ #include <logging/logger.hpp>
-------userInterface* UI;
------+#include <iostream>
------+#include "userEvents.hpp"
------+#include <sstream>
------+#include <vector>
------+#include <list>
------+#include <map>
------+#include <atomic>
------+#include <thread>
------+
------+void handleUciInput(std::ostream& stream) {
------+	stream << "id name Vabi" << std::endl;
------+	stream << "id author Fabian Lenhardt" << std::endl;
------+	stream << "uciok" << std::endl;
------+}
------ 
-------extern uint8_t searchId;
-------extern uint16_t killerMoves[20][2];
-------//#define UCI
------+void handleIsReady(std::ostream& stream) {
------+	stream << "readyok" <<std::endl;
------+}
------ 
------+template <typename T>
------+T StringToNumber ( const std::string &Text )//Text not by const reference so that the function can be used with a
------+{                               //character array as argument
------+	std::stringstream ss(Text);
------+	T result;
------+	return ss >> result ? result : 0;
------+}
------ 
-------uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t numMadeMoves, uint32_t* worst_case_time) {
------+enum searchType {unknown, fixed_time, time_until_move, fixed_depth, infinite};
------ 
-------	/*if(depth < 7){
-------		return true;
-------	} else {
-------		return false;
-------	}*/
-------	if(params.totalTime[toMove] > 0) {
-------		uint32_t total = params.totalTime[toMove];
-------		uint32_t increment = params.increment[toMove];
-------
-------		//estimate remaining moves
-------		uint16_t totalExpectedMoves = 1/2*numMadeMoves+60;
-------		int16_t remainingMoves = totalExpectedMoves-numMadeMoves;
-------
-------		if(remainingMoves < 20){
-------			remainingMoves = 20;
-------		}
------+struct searchParameters {
------+	searchType type;
------+	int16_t depth;
------+	int32_t fixedTime;
------+	int32_t totalTime[2];
------+	int32_t increment[2];
------+	uint16_t movesToGo;
------+};
------ 
-------		uint32_t completeExpectedTime = total+remainingMoves*increment;
-------		std::cout << remainingMoves << std::endl;
-------		std::cout << completeExpectedTime << std::endl;
-------		float timeAllotted = completeExpectedTime/(2.0*remainingMoves);
------+searchParameters paramsToUse;
------+std::atomic<bool> continueSearch;
------+chessPosition cposition;
------ 
-------		if(timeAllotted > total/10.0){
-------			timeAllotted = total/10.0;
-------		}
-------		*worst_case_time = total/10.0;
-------		return timeAllotted;
-------	}
------+void setSearchParams(searchParameters params) {
------+	paramsToUse = params;
------+}
------+
------+std::thread engineThread;
------ 
-------	return 100; //some default
------+void search(chessPosition p, searchParameters params){
------+	std::cout << "Thread started" <<std::endl;
------+	while(continueSearch);
------+	std::cout << "Leaving thread" <<std::endl;
------ }
------ 
------+void launchSearch() {
------+	continueSearch = true;
------+	engineThread = std::thread(search);
------+	std::cout << "Launched thread" <<std::endl;
------+}
------ 
-------uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* nodeCount, uint64_t* mtime, int32_t* eval, bool doAspiration, searchParameters params) {
-------	memset(killerMoves,0, 20*2*sizeof(uint16_t));
-------	resetSearchData();
-------	resetQuiescenceNodes();
-------	uint64_t start_ts  = get_timestamp();
-------	uint16_t depth = 3;
-------	/*uint64_t qnodes = 0;
-------	uint64_t nodes = 0;*/
-------	*eval = 0;
-------	int32_t alpha = -32000;
-------	int32_t beta  = 32000;
-------	searchId++;
-------	uint64_t searchedNodes = 0;
-------#ifdef FIXEDDEPTH
-------	uint16_t maxdepth = 7;
-------#ifdef EXPERIMENTAL
-------	maxdepth = 8;
-------#endif
-------	setTotalTime(100000000, start_ts);
-------	while(depth < maxdepth){
-------#else
-------	uint32_t worst_case_search_time = 0;
-------	uint32_t totalTime = calcSearchTime(params, position->toMove, position->madeMoves.length, &worst_case_search_time);
-------	setTotalTime(worst_case_search_time, start_ts);
-------	uint16_t madeMoves = position->madeMoves.length;
-------
-------	//uint64_t goalNodes = 1800*maximal_time;
-------	while(get_timestamp()-start_ts <= totalTime) {
-------		/*setTotalTime(100000000, start_ts);
-------		while(depth < 14) {*/
-------#endif
-------		try{
-------			chessMove localBestMove;
-------			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
-------			if(doAspiration) {
-------				if ((*eval <= alpha) || (*eval >= beta)) {
-------					//std::cout << "Aspiration window search failed, researching..." <<std::endl;
-------					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &localBestMove, true, false);
-------				}
-------
-------				alpha = *eval-50;
-------				beta  = *eval+50;
-------			}
------ 
-------			*bestMove = localBestMove;
-------		} catch(timeoutException e) {
-------			std::cout << "Search timed out" << std::endl;
-------			break;
-------		}
------ 
-------		//std::cout << depth <<std::endl;
-------
-------		//qnodes = getQuiescenceNodes();
-------		//nodes  = getNodes();
-------		*mtime = get_timestamp()-start_ts;
-------		/*double nps = ((double) *nodeCount)/((double) *mtime)*1000.0;
-------		std::cout << "Searched " <<  *nodeCount << " positions in " << *mtime << " for " << nps << " nodes per second" << std::endl;*/
-------		uint64_t totalNodes=0;
-------		searchDebugData data = getSearchData();
-------		for(uint16_t ind=0; ind < 25; ind++){
-------/*#ifndef UCI
-------			std::cout << ind << "  " << data.nodes[ind] << std::endl;
-------			std::cout << std::setw(16) << " ";
-------
-------			for(int k=0; k < 50; k++){
-------				std::cout << std::setw(9) << data.bestIndex[ind][k];
------+void handleStop() {
------+	continueSearch = false;
------+	engineThread.join();
------+	std::cout << "Joined engine thread" << std::endl;
------+}
------+
------+void handleGo(std::list<std::string> input) {
------+
------+	searchParameters params;
------+	params.type = unknown;
------+	params.depth = 0;
------+	params.fixedTime = 0;
------+	params.totalTime[0] = 0;
------+	params.totalTime[1] = 0;
------+	params.increment[0] = 0;
------+	params.increment[1] = 0;
------+	params.movesToGo = UINT16_MAX;
------+
------+
------+	for(auto iterator = input.begin(), end = input.end(); iterator != end; ++iterator) {
------+		std::string current = *iterator;
------+		if("wtime" == current) {
------+			iterator++;
------+			if(iterator == input.end()) {
------+				std::cout << "Missing parameter for " << current << std::endl;
------+				params.type = unknown;
------+				break;
------+			}
------+			std::string time = *iterator;
------+			params.totalTime[0] = StringToNumber<int32_t>(time);
------+			params.type = time_until_move;
------+		}
------+		if("btime" == current) {
------+			iterator++;
------+			if(iterator == input.end()) {
------+				std::cout << "Missing parameter for " << current << std::endl;
------+				params.type = unknown;
------+				break;
------ 			}
-------			std::cout << std::endl;
-------#endif*/
-------			totalNodes = totalNodes+data.nodes[ind];
------+			std::string time = *iterator;
------+			params.totalTime[1] = StringToNumber<int32_t>(time);
------+			params.type = time_until_move;
------ 		}
-------/*#ifndef UCI
-------
-------		std::cout << "SEARCH DEBUG DATA" << std::endl;
-------		std::cout << "negamax called: "  << data.called << std::endl;
-------		std::cout << "Went to quiescence: " << data.wentToQuiescence << std::endl;
-------		std::cout << "By depht:"         << std::endl;
-------
-------		std::cout << "Total " <<totalNodes << std::endl;
-------		std::cout << "Threefold repetition hashhits " << data.fake_3fold_repetitions+data.threefold_repetitions << std::endl;
-------		std::cout << "Actual repetitions " << data.threefold_repetitions << std::endl;
-------		std::cout << "Ratio "              << ((float) data.threefold_repetitions)/((float) data.fake_3fold_repetitions+data.threefold_repetitions) << std::endl;
-------		std::cout << "Futility tries "     << data.futility_tried <<std::endl;
-------		std::cout << "Successful futility " << data.futility_successful << std::endl;
-------		std::cout << "Nullmove tries "     << data.nullMovePruningTried <<std::endl;
-------		std::cout << "Successful nullmove " << data.nullMovePruningSuccessful << std::endl;
-------		std::cout << "Went to search "     << data.wentToSearch <<std::endl;
-------		std::cout << "Had to sort " << data.neededSort << std::endl;
-------#endif*/
-------
-------		*nodeCount = (data.totalNodes+getQuiescenceNodes());
-------		UI->sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
-------		logSearch(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
-------		depth++;
-------		searchedNodes = searchedNodes+*nodeCount;
-------		if(*eval > 29000) {
-------			break;
------+		if("winc" == current) {
------+			iterator++;
------+			if(iterator == input.end()) {
------+				std::cout << "Missing parameter for " << current << std::endl;
------+				params.type = unknown;
------+				break;
------+			}
------+			std::string time = *iterator;
------+			params.increment[0] = StringToNumber<int32_t>(time);
------+			params.type = time_until_move;
------+		}
------+		if("binc" == current) {
------+			iterator++;
------+			if(iterator == input.end()) {
------+				std::cout << "Missing parameter for " << current << std::endl;
------+				params.type = unknown;
------+				break;
------+			}
------+			std::string time = *iterator;
------+			params.increment[1] = StringToNumber<int32_t>(time);
------+			params.type = time_until_move;
------ 		}
------ 
-------		if((*eval > 500) && (depth > 14)) {
-------			break;
------+		if("infinite" == current) {
------+			params.type = infinite;
------ 		}
-------	}
-------	depth--;
-------	//std::cout << "Depth searched " << depth << std::endl;
-------	*mtime = get_timestamp()-start_ts;
------ 
-------	//undo moves until we are back to start
------+		if("movetime" == current) {
------+			iterator++;
------+			if(iterator == input.end()) {
------+				std::cout << "Missing parameter for " << current << std::endl;
------+				params.type = unknown;
------+				break;
------+			}
------+			std::string time = *iterator;
------+			params.fixedTime = StringToNumber<int32_t>(time);
------+			params.type = fixed_time;
------+		}
------ 
------+		if("depth" == current) {
------+			iterator++;
------+			if(iterator == input.end()) {
------+				std::cout << "Missing parameter for " << current << std::endl;
------+				params.type = unknown;
------+				break;
------+			}
------+			std::string d =  *iterator;
------+			params.depth = StringToNumber<int32_t>(d);
------+			params.type = fixed_depth;
------+		}
------ 
-------#ifndef FIXEDDEPTH
-------	while(position->madeMoves.length > madeMoves){
-------		chessMove current = position->madeMoves[position->madeMoves.length-1];
------ 
-------		if(current.move == 0) {
-------			undoNullMove(position);
-------		} else {
-------			undoMove(position);
------+		if("movestogo" == current) {
------+			iterator++;
------+			if(iterator == input.end()) {
------+				std::cout << "Missing parameter for " << current << std::endl;
------+				params.type = unknown;
------+				break;
------+			}
------+			std::string togo =*iterator;
------+			params.movesToGo = StringToNumber<int32_t>(togo);
------+			params.type = time_until_move;
------ 		}
------+
------ 	}
-------#endif
-------	/*std::cout << "Qnodes " <<  qnodes << " normal nodes " << nodes <<std::endl;
-------	std::cout << "Forced move " << moveToString(*bestMove, *position) << std::endl;
-------	std::cout << "Evaluation "  << eval << std::endl;
-------	std::cout << "Negamax called " << getCalled() << " with depth >0; sort called " << getSortCalled() << " times for ratio " << ((double) getSortCalled())/((double) getCalled()) << std::endl;
-------	std::cout << "Quiescence called " << getqCalled() << " with depth >0; sort called " << getSortqCalled() << " times for ratio " << ((double) getSortqCalled())/((double) getqCalled()) << std::endl;
-------
-------	int32_t* indices = getIndexCounts();
-------	for(uint16_t k=0; k < 50; k++){
-------		std::cout << indices[k] << " ";
-------	}
-------	std::cout << std::endl;
-------	int32_t* qindices = getqIndexCounts();
-------	for(uint16_t k=0; k < 50; k++){
-------		std::cout << qindices[k] << " ";
------+
------+
------+	std::cout << params.type << std::endl;
------+
------+	if(params.type == time_until_move) {
------+		std::cout << "White time "      << params.totalTime[0] << std::endl;
------+		std::cout << "Black time "      << params.totalTime[1] << std::endl;
------+		std::cout << "White increment " << params.increment[0] << std::endl;
------+		std::cout << "Black increment " << params.increment[1] << std::endl;
------+		std::cout << "Moves to go "     << params.movesToGo    << std::endl;
------ 	}
-------	std::cout << std::endl;*/
-------	//int16_t neval = evaluation(position, -32000, 32000);
-------	//latexOutput(position,  getEvaluationResult(), neval);
-------	return depth;
-------}
------ 
------+	if(params.type != unknown) {
------+		setSearchParams(params);
------ 
------ 
-------void sendNewPosition(chessPosition* position) {
-------	std::string newPosition = chessPositionToString(*position);
-------	UI->sendNewPosition(newPosition);
------+		launchSearch();
------+	}
------ 
------ }
------ 
-------void UIloop() {
-------	UI = new uciInterface();
-------	std::string positionstr = "RNBQKBNRPPPPPPPP00000000000000000000000000000000pppppppprnbqkbnrwKQkq";
-------	chessPosition position = stringToChessPosition(positionstr);
-------	/*std::string positionstr = " ";*/
-------	/*std::string fen = "7k/p7/1p5p/3p4/3P4/P5np/1P2R1rK/8 w - - 0";
-------	chessPosition position = FENtoChessPosition(fen);*/
-------
-------	/*chessMove mv;
-------	mv.sourceField = 29;
-------	mv.targetField = 15;
-------	mv.move = BIT64(29) | BIT64(15);
-------	mv.type = queenMove;
-------	mv.captureType = pawn;
-------	makeMove(&mv, &position);
-------	std::cout << SEE(&position, &mv) << std::endl;
-------	undoMove(&position);*/
-------
-------
-------	/*vdt_vector<chessMove> mvVec = vdt_vector<chessMove>(150);
-------	generateAllMoves(&mvVec, &position);
-------	orderStandardMoves(&position, &mvVec, 0, 0);*/
-------
-------
-------	std::string move;
-------	while(1){
-------		UI->readInput();
-------		std::vector<std::string> moveList = std::vector<std::string>();
-------		if(UI->receiveNewPosition(positionstr, moveList)){
-------			free_position(&position);
-------			position = FENtoChessPosition(positionstr);
-------			for(std::string seg: moveList){
-------				//std::cout << seg << std::endl;
-------				if(!checkAndMakeMove(position, seg)){
-------					std::cout << "Illegal move detected" << std::endl;
-------				}
-------			}
-------		}
------ 
-------		if(UI->positionRequested()){
-------			sendNewPosition(&position);
-------		}
------+void handlePosition(std::list<std::string> input) {
------ 
-------		if(UI->receiveMove(move)){
-------			if(checkAndMakeMove(position, move)){
-------				sendNewPosition(&position);
-------				/*chessMove bestMove;
-------				uint32_t nodeCount;
-------				uint64_t mtime;
-------				int32_t eval = 0;
-------				searchMove(&position, &bestMove, 2000, &nodeCount, &mtime, &eval);
-------				std::cout << eval << std::endl;
-------				makeMove(&bestMove, &position);*/
-------				sendNewPosition(&position);
-------			}
------+	std::string fen = "";
------+
------+	if(input.empty()) {
------+		std::cout << "Invalid position request" << std::endl;
------+		return;
------+	}
------+	auto iterator = input.begin();
------+	if("startpos" == *iterator){
------+		fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
------+		iterator++;
------+	} else {
------+		fen = *iterator;
------+		iterator++;
------+		while((iterator != input.end()) && ("moves" != *iterator)) {
------+			fen = fen+" "+*iterator;
------+			iterator++;
------ 		}
------ 
-------		if (UI->receiveUndoMove()) {
-------			std::cout << "Got undo event!" << std::endl;
-------			undoMove(&position);
-------			sendNewPosition(&position);
------+	}
------+
------+
------+
------+	std::vector<std::string> moveList;
------+	while(iterator != input.end()) {
------+		if("moves" !=*iterator) {
------+			moveList.push_back(*iterator);
------ 		}
------+		iterator++;
------+	}
------+
------+	std::cout << fen << std::endl;
------+
------+	for(auto iterator = moveList.begin(); iterator != moveList.end(); iterator++) {
------+		std::cout << *iterator << std::endl;
------+	}
------ 
-------		if(UI->receiveForceMove()) {
-------			chessMove bestMove;
-------			uint32_t nodeCount;
-------			uint64_t mtime;
-------			int32_t eval = 0;
-------			searchParameters params;
-------			searchMove(&position, &bestMove, &nodeCount, &mtime, &eval, true, params);
-------			makeMove(&bestMove, &position);
-------			sendNewPosition(&position);
------+	free_position(&cposition);
------+	cposition = FENtoChessPosition(fen);
------+	for(std::string seg: moveList){
------+		//std::cout << seg << std::endl;
------+		if(!checkAndMakeMove(cposition, seg)){
------+			std::cout << "Illegal move detected" << std::endl;
------ 		}
------+	}
------ 
-------		std::string newPosition;
-------		searchParameters params;
-------		if(UI->receiveAnalyze(newPosition, params)){
-------			std::cout << params.increment[0] << std::endl;
-------			std::cout << params.increment[1] << std::endl;
-------			std::cout << params.totalTime[0] << std::endl;
-------			std::cout << params.totalTime[1] << std::endl;
-------			chessMove bestMove;
-------			uint32_t nodeCount;
-------			uint64_t mtime;
-------			int32_t eval = 0;
-------			searchMove(&position, &bestMove, &nodeCount, &mtime, &eval, true, params);
-------			std::cout << "Found move " << moveToString(bestMove, position) << std::endl;
-------			UI->sendBestMove(moveToString(bestMove, position));
-------			makeMove(&bestMove, &position);
-------			int16_t e  = evaluation(&position, -32000, 32000);
-------			evaluationResult res = getEvaluationResult();
-------			std::cout << "Eval " << e << std::endl;
-------			std::cout << "PSQ " << res.PSQ << std::endl;
-------			std::cout << "mobility " << res.mobility << std::endl;
-------			std::cout << "static pawn " << res.staticPawn << std::endl;
-------			std::cout << "passed pawn " << res.passedPawn << std::endl;
-------			std::cout << "rook files "  << res.rookOpenFiles << std::endl;
-------			std::cout << "king safety " << res.kingSafety << std::endl;
-------			std::cout << "bishop pair" << res.bishoppair << std::endl;
-------			undoMove(&position);
------+}
------ 
------+int main() {
------+	initUserEvents();
------+	bool continueLoop = true;
------+	while(continueLoop) {
------+		userEvent ev = getNextUserEvent();
------+
------+		switch(ev.input) {
------+			case uci:
------+				handleUciInput(std::cout);
------+				break;
------+			case isready:
------+				handleIsReady(std::cout);
------+				break;
------+			case go:
------+				handleGo(ev.data);
------+				break;
------+			case position:
------+				handlePosition(ev.data);
------+				break;
------+			case stop:
------+				handleStop();
------+				break;
------+			case quit:
------+				continueLoop = false;
------+				break;
------+			default:
------+				std::cout << "Not yet implemented" << std::endl;
------ 		}
------ 	}
------+	return 0;
------ }
------ 
------ 
------diff --git a/Cpp/src/userInterface/userInterface.hpp b/Cpp/src/userInterface/userInterface.hpp
------index 9d8f390..48a9248 100644
--------- a/Cpp/src/userInterface/userInterface.hpp
------+++ b/Cpp/src/userInterface/userInterface.hpp
------@@ -12,6 +12,7 @@
------ #include <vector>
------ #include "interfaceStructs.hpp"
------ 
------+
------ class userInterface {
------ 	public:
------ 		virtual void initialize()=0;
------diff --git a/output b/output
------deleted file mode 100644
------index e69de29..0000000
------diff --git a/to_checkin.diff b/to_checkin.diff
------index f2f092d..ab68531 100644
--------- a/to_checkin.diff
------+++ b/to_checkin.diff
------@@ -1,782 +0,0 @@
-------diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
-------index f60c727..12e53ab 100644
---------- a/Cpp/src/Search/negamax.cpp
-------+++ b/Cpp/src/Search/negamax.cpp
-------@@ -135,15 +135,15 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
------- 			int16_t oldEval  = hashVal.eval;
------- 			if((depth <= hashVal.depth) && (oldEval > -10000) && (oldEval < 10000) && (oldEval != 0)){ //TODO: the != 0 is stupid, but somehwere something goes wrong with 3fold rep scores, so excluded ehre for safety
------- 				if( ((hashVal.flag == FAILHIGH) || (hashVal.flag == FULLSEARCH)) && (oldEval >= beta)){
--------					setSearchId(searchId, position->zobristHash);
-------+					setSearchId(searchId, position->zobristHash, hashVal.index);
------- 					return beta;
------- 				}
------- 				else if( ((hashVal.flag == FAILLOW) || (hashVal.flag == FULLSEARCH)) && (oldEval <= alpha)){
--------					setSearchId(searchId, position->zobristHash);
-------+					setSearchId(searchId, position->zobristHash, hashVal.index);
------- 					return alpha; //node will fail low
------- 				}
------- 				else if((hashVal.flag == FULLSEARCH)){ //TODO: this condition can be vastly improved
--------					setSearchId(searchId, position->zobristHash);
-------+					setSearchId(searchId, position->zobristHash, hashVal.index);
------- 					if(oldEval <= alpha){
------- 						return alpha;
------- 					}
-------@@ -266,9 +266,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
------- 		undoMove(position);
------- 
------- 		if((alpha >= beta)) {
--------			if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
--------				setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
--------			}
-------+			setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
------- 			if(bestIndex != -1){
------- 				searchCounts.bestIndex[depth][bestIndex]++;
------- 			}
-------@@ -317,13 +315,9 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
------- 
------- 
------- 	if(foundGoodMove) {
--------		if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
--------			setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
--------		}
-------+		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
------- 	} else { //we failed low, remember as well
--------		if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
------- 			setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
--------		}
------- 	}
------- 
------- 	qmvStack.release();
-------diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
-------index 5d9bd3d..4456608 100644
---------- a/Cpp/src/Vabi.cpp
-------+++ b/Cpp/src/Vabi.cpp
-------@@ -69,7 +69,11 @@ int main() {
------- 	for(uint32_t index=0; index < 7; index++) {
------- 		for(uint32_t t=0; t < 2; t++) {
------- 			for(uint32_t k=0; k < 64; k++) {
-------+#ifdef EXPERIMENTAL
-------+					completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]/2+figureValues[index])) << 16);
-------+#else
------- 					completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]+figureValues[index])) << 16);
-------+#endif
------- 			}
------- 		}
------- 	}
-------@@ -86,8 +90,8 @@ int main() {
------- 		latexOutput(line, out);
------- 	}*/
------- 
--------	/*runPerformanceTests();
--------	return 0;*/
-------+	runPerformanceTests();
-------+	return 0;
------- 	/*std::cout << testPerftTestSuite().passed << std::endl;
------- 	return 0;*/
------- 	UIloop();
-------diff --git a/Cpp/src/hashTables/hashTables.hpp b/Cpp/src/hashTables/hashTables.hpp
-------index aded8bc..feea41b 100644
---------- a/Cpp/src/hashTables/hashTables.hpp
-------+++ b/Cpp/src/hashTables/hashTables.hpp
-------@@ -9,7 +9,7 @@
------- #define HASHTABLES_HASHTABLES_HPP_
------- 
------- 
--------#define HASHSIZE 0x3FFFFFF //needs to be a power of 2!
-------+#define HASHSIZE 0xFFFFFF //needs to be a power of 2!
------- 
------- void fillZobristHash();
------- uint64_t calcZobristHash(const chessPosition* position);
-------@@ -18,6 +18,6 @@ void setHashEntry(hashEntry entry, uint64_t zobristKey);
------- uint16_t getHashMove(uint64_t zobristKey);
------- void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId);
------- void setHashEntry(hashFlag flag, int16_t eval, uint8_t depth, uint8_t searchId, uint16_t bestMove, uint64_t key);
--------void setSearchId(uint8_t searchId, uint64_t key);
-------+void setSearchId(uint8_t searchId, uint64_t key, uint16_t index);
------- 
------- #endif /* HASHTABLES_HASHTABLES_HPP_ */
-------diff --git a/Cpp/src/hashTables/zobristHash.cpp b/Cpp/src/hashTables/zobristHash.cpp
-------index 1406c4b..b5b240c 100644
---------- a/Cpp/src/hashTables/zobristHash.cpp
-------+++ b/Cpp/src/hashTables/zobristHash.cpp
-------@@ -12,54 +12,99 @@
------- #include <assert.h>
------- #include <iostream>
------- 
--------static hashEntry moveOrderingHashTable[HASHSIZE+1];
-------+static hashBucket moveOrderingHashTable[HASHSIZE+1];
------- 
------- uint64_t zobristHash[7][2][64];
------- uint64_t movingSideHash[2];
------- uint64_t castlingHash[16];
------- uint64_t enpassantHash[9];
------- 
-------+
-------+static uint16_t permutationIndex = 0;
-------+
-------+
-------+static uint16_t permutations[4][4] = {{0,1,2,3}, {1,2,3,0}, {2,3,0,1}, {3,0,1,2}};
-------+
-------+
-------+
-------+
------- //TODO: somehow force-inline these functions everywhere
------- 
------- hashEntry getHashTableEntry(uint64_t zobristKey) {
--------	return moveOrderingHashTable[zobristKey & HASHSIZE];
--------}
-------+	hashBucket current = moveOrderingHashTable[zobristKey & HASHSIZE];
------- 
--------void setHashEntry(hashEntry entry, uint64_t zobristKey){
--------	moveOrderingHashTable[zobristKey & HASHSIZE] = entry;
--------}
-------+	hashEntry ret = current.hashData[0];
------- 
--------void setSearchId(uint8_t searchId, uint64_t key) {
--------	moveOrderingHashTable[key & HASHSIZE].searchId = searchId;
-------+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
-------+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
------- 
-------+	for(uint8_t ind=1; ind < 4; ind++){
-------+		hashEntry entry = current.hashData[ind];
-------+		if((entry.hashHighBits == zobristHigher) && (entry.hashLower == zobristLower)){
-------+			ret = entry;
-------+		}
-------+	}
-------+	return ret;
-------+}
-------+
-------+void setSearchId(uint8_t searchId, uint64_t key, uint16_t index) {
-------+	moveOrderingHashTable[key & HASHSIZE].hashData[index].searchId = searchId;
------- }
------- 
------- void setHashEntry(hashFlag flag, int16_t eval, uint8_t depth, uint8_t searchId, uint16_t bestMove, uint64_t key){
--------	hashEntry entry;
--------	entry.flag = flag;
--------	entry.eval  = eval;
--------	entry.depth = depth;
--------	entry.searchId = searchId;
--------	entry.bestMove = bestMove;
--------	entry.hashHighBits = (uint32_t) (key >> 32);
--------	entry.hashLower    = (uint16_t) (((uint32_t) (key & 0xFFFFFFFF)) >> 16);
--------	moveOrderingHashTable[key & HASHSIZE] = entry;
-------+	hashBucket* current = &moveOrderingHashTable[key & HASHSIZE];
-------+
-------+	for(uint8_t ind=0; ind < 4; ind++){
-------+		hashEntry* entry = &current->hashData[permutations[permutationIndex][ind]];
-------+		if((entry->depth <= depth) || (entry->searchId != searchId)) {
-------+			entry->flag = flag;
-------+			entry->eval  = eval;
-------+			entry->depth = depth;
-------+			entry->searchId = searchId;
-------+			entry->bestMove = bestMove;
-------+			entry->hashHighBits = (uint32_t) (key >> 32);
-------+			entry->hashLower    = (uint16_t) (((uint32_t) (key & 0xFFFFFFFF)) >> 16);
-------+			entry->index        = permutations[permutationIndex][ind];
-------+			break;
-------+		}
-------+	}
-------+	permutationIndex = (permutationIndex+1) & 3;
------- }
------- 
------- uint16_t getHashMove(uint64_t zobristKey){
--------	return moveOrderingHashTable[zobristKey & HASHSIZE].bestMove;
-------+	hashBucket* current = &moveOrderingHashTable[zobristKey & HASHSIZE];
-------+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
-------+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
-------+	for(uint8_t ind=0; ind < 4; ind++){
-------+		hashEntry* entry = &current->hashData[ind];
-------+		if ((entry->hashHighBits == zobristHigher) && (entry->hashLower == zobristLower)) {
-------+			return entry->bestMove;
-------+		}
-------+	}
-------+	return 0;
-------+
------- }
------- 
------- void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId) {
--------	if(moveOrderingHashTable[zobristKey & HASHSIZE].searchId != searchId) {
--------		moveOrderingHashTable[zobristKey & HASHSIZE].bestMove = move;
--------		moveOrderingHashTable[zobristKey & HASHSIZE].depth    = 0;
-------+	hashBucket* current = &moveOrderingHashTable[zobristKey & HASHSIZE];
-------+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
-------+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
-------+	for(uint8_t ind=0; ind < 4; ind++){
-------+		hashEntry* entry = &current->hashData[permutations[permutationIndex][ind]];
-------+		if ((entry->searchId != searchId)){
-------+			entry->searchId = searchId;
-------+			entry->depth    = 0;
-------+			entry->bestMove = move;
-------+			entry->hashHighBits = zobristHigher;
-------+			entry->hashLower    = zobristLower;
-------+		}
------- 	}
-------+	permutationIndex = (permutationIndex+1) & 3;
------- }
------- 
------- 
------- void clearHashTables() {
--------	memset(moveOrderingHashTable, 0, sizeof(hashEntry)*(HASHSIZE+1));
-------+	memset(moveOrderingHashTable, 0, sizeof(hashBucket)*(HASHSIZE+1));
------- }
------- 
------- void fillZobristHash(){
-------diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
-------index 276a2a6..68809d1 100644
---------- a/Cpp/src/lib/Defines/pieceTables.cpp
-------+++ b/Cpp/src/lib/Defines/pieceTables.cpp
-------@@ -7,7 +7,7 @@
------- 
------- #include <stdint.h>
------- 
--------
-------+//TODO: We are actually using 1/2 these values - change all values here instead!
------- 
------- int16_t pieceTables[7][2][64] = {
------- 		{
-------@@ -254,12 +254,12 @@ int16_t endGamepieceTables[7][2][64] = {
------- 						-15,-5,0,0,0,0,-5,-15,
------- 						-10,-5,0,0,0,0,-5,-10,
------- 						-15,-5,0,0,0,0,-5,15,
--------						30,30,40,40,40,40,30,30,
-------+						10,20,20,20,20,20,20,10,
------- 						10,20,20,20,20,20,20,10
------- 				},
------- 				{ //black rooks
------- 						10,20,20,20,20,20,20,10,
--------						30,30,40,40,40,40,30,30,
-------+						10,20,20,20,20,20,20,10,
------- 						0,0,0,0,0,0,0,0,
------- 						0,0,0,0,0,0,0,0,
------- 						-15,-5,0,0,0,0,-5,-15,
-------@@ -276,13 +276,13 @@ int16_t endGamepieceTables[7][2][64] = {
------- 						-15,-5,10,30,30,10,-5,-15,
------- 						-10,-5,5,20,20,5,-5,-10,
------- 						-15,-5,10,15,15,10,-5,15,
--------						30,30,40,40,40,40,30,30,
-------+						-20,-10,10,15,15,10,-10,-20,
------- 						0,10,20,20,20,20,10,0
------- 
------- 				},
------- 				{ //black queens
------- 						0,10,20,20,20,20,10,0,
--------						30,30,40,40,40,40,30,30,
-------+						-20,-10,10,15,15,10,-10,-20,
------- 						-15,-5,10,15,15,10,-5,15,
------- 						-10,-5,5,20,20,5,-5,-10,
------- 						-15,-5,10,30,30,10,-5,-15,
-------@@ -293,27 +293,25 @@ int16_t endGamepieceTables[7][2][64] = {
------- 		},
------- 		{
------- 				{ //white kings
--------						-100,-70,-40,-25,-25,-40,-70,-100,
--------						-70,-50,-30,-10,-10,-30,-50,-70,
--------						-40,-30,-10, 10, 10,-10,-30,-40,
--------						-25,-10, 10, 30, 30, 10,-10,-25,
--------						-25,-10, 10, 30, 30, 10,-10,-25,
--------						-40,-30,-10, 10, 10,-10,-30,-40,
--------						-70,-50,-30,-10,-10,-30,-50,-70,
--------						-100,-70,-40,-25,-25,-40,-70,-100,
-------+						-200,-140,-80,-50,-50,-80,-140,-200,
-------+						-140,-100,-60,-20,-20,-60,-100,-140,
-------+						-80,-60,-20, 20, 20,-20,-60,-80,
-------+						-50,-20, 20, 60, 60, 20,-20,-50,
-------+						-50,-20, 20, 60, 60, 20,-20,-50,
-------+						-80,-60,-20, 20, 20,-20,-60,-80,
-------+						-140,-100,-60,-20,-20,-60,-100,-140,
-------+						-200,-140,-80,-50,-50,-80,-140,-200,
------- 				},
------- 				{ //black kings
--------						-100,-70,-40,-25,-25,-40,-70,-100,
--------						-70,-50,-30,-10,-10,-30,-50,-70,
--------						-40,-30,-10, 10, 10,-10,-30,-40,
--------						-25,-10, 10, 30, 30, 10,-10,-25,
--------						-25,-10, 10, 30, 30, 10,-10,-25,
--------						-40,-30,-10, 10, 10,-10,-30,-40,
--------						-70,-50,-30,-10,-10,-30,-50,-70,
--------						-100,-70,-40,-25,-25,-40,-70,-100,
-------+						200,-140,-80,-50,-50,-80,-140,-200,
-------+						-140,-100,-60,-20,-20,-60,-100,-140,
-------+						-80,-60,-20, 20, 20,-20,-60,-80,
-------+						-50,-20, 20, 60, 60, 20,-20,-50,
-------+						-50,-20, 20, 60, 60, 20,-20,-50,
-------+						-80,-60,-20, 20, 20,-20,-60,-80,
-------+						-140,-100,-60,-20,-20,-60,-100,-140,
-------+						-200,-140,-80,-50,-50,-80,-140,-200,
------- 				}
--------
--------
------- 		},
------- 		{			//non-captures
------- 					{
-------@@ -336,10 +334,7 @@ int16_t endGamepieceTables[7][2][64] = {
------- 							0,0,0,0,0,0,0,0,
------- 							0,0,0,0,0,0,0,0
------- 					}
--------
------- 			}
--------
--------
------- };
------- 
------- int32_t completePieceTables[7][2][64];
-------diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
-------index 64cf5d8..0d33e3d 100644
---------- a/Cpp/src/lib/Evaluation/evaluation.cpp
-------+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
-------@@ -22,7 +22,7 @@ evaluationResult getEvaluationResult(){
------- 	return result;
------- }
------- 
--------//std::ofstream out("/home/vabi/TeX/Chess/positions.tex");
-------+
------- 
------- uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
------- 						       	 0,  0,  0,  0,  0,  0,  0,  0,
-------diff --git a/Cpp/src/lib/basics.hpp b/Cpp/src/lib/basics.hpp
-------index fd2cb6f..2bd8e39 100644
---------- a/Cpp/src/lib/basics.hpp
-------+++ b/Cpp/src/lib/basics.hpp
-------@@ -66,6 +66,8 @@ struct chessPosition {
------- 
------- enum hashFlag: uint16_t {FULLSEARCH=0,FAILLOW=1,FAILHIGH=2};
------- 
-------+
-------+
------- struct hashEntry{
------- 	uint32_t hashHighBits;
------- 	uint16_t hashLower;
-------@@ -74,8 +76,13 @@ struct hashEntry{
------- 	uint16_t eval;
------- 	uint8_t depth;
------- 	uint8_t searchId;
-------+	uint16_t index;
------- } __attribute__((packed));
------- 
-------+struct hashBucket{
-------+	hashEntry hashData[4];
-------+};
-------+
------- class timeoutException: public std::exception
------- {
-------   virtual const char* what() const throw()
-------diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
-------index 91392c7..e331694 100644
---------- a/Cpp/src/userInterface/UIfunctions.cpp
-------+++ b/Cpp/src/userInterface/UIfunctions.cpp
-------@@ -24,47 +24,10 @@ static char figureNames[2][6] = {{'P', 'N', 'B', 'R', 'Q', 'K'},
------- 		{'p', 'n', 'b', 'r', 'q', 'k'},
------- };
------- 
--------void putTableLine(std::ostream& out, int16_t value, std::string name) {
--------	out << name << " & " << value << "\\\\ \\hline" << std::endl;
--------}
------- 
--------static int clearPageCounter = 0;
--------
--------void latexOutput(const chessPosition* pos, std::ostream& out, evaluationResult ev, int16_t eval) {
--------
--------	int16_t figureVal = calcFigureEvaluation(pos);
--------	out << "\\begin{figure}[!htbp] " << std::endl;
--------	out << "\\newgame" << std::endl;
--------	out << "\\fenboard{"+chessPositionToFenString(*pos, false)+"}" << std::endl;
--------
--------	out << "\\begin{tabular}{ll}" << std::endl;
--------	out << "\\raisebox{-.5\\height}{\\showboard}&   \\begin{tabular}{ l | c  }" << std::endl;
--------
--------	putTableLine(out, eval, "Total");
--------	putTableLine(out, figureVal, "Material");
--------	putTableLine(out, ev.PSQ-figureVal, "Piece Square Tables");
--------	putTableLine(out, ev.mobility, "Mobility");
--------	putTableLine(out, ev.kingSafety, "King Safety");
--------	putTableLine(out, ev.bishoppair, "Bishop pair");
--------	putTableLine(out, ev.staticPawn, "Pawn structure");
--------	putTableLine(out, ev.passedPawn, "Passed pawns");
--------	putTableLine(out, ev.rookOpenFiles, "Rooks on open files");
--------	out << "\\end{tabular}" << std::endl;
--------	out << "\\end{tabular}" << std::endl;
--------	out << "\\end{figure}" << std::endl;
--------	clearPageCounter++;
--------	if(clearPageCounter == 3) {
--------		out << "\\clearpage" << std::endl;
--------		clearPageCounter = 0;
--------	}
--------}
------- 
--------void latexOutput(std::string FEN, std::ostream& out) {
--------	chessPosition pos = FENtoChessPosition(FEN);
--------	int16_t eval = evaluation(&pos, -32000, 32000);
--------	evaluationResult ev = getEvaluationResult();
--------	latexOutput(&pos, out,  ev, eval);
--------}
-------+
-------+
------- 
------- 
------- uint8_t searchId = 0;
-------diff --git a/Cpp/src/userInterface/UIlayer.hpp b/Cpp/src/userInterface/UIlayer.hpp
-------index 8022c27..5f5d2d0 100644
---------- a/Cpp/src/userInterface/UIlayer.hpp
-------+++ b/Cpp/src/userInterface/UIlayer.hpp
-------@@ -23,7 +23,6 @@ uint64_t stringToMove(std::string mv);
------- bool checkAndMakeMove(chessPosition& position, std::string move);
------- void runPerformanceTests();
------- uint64_t get_timestamp();
--------void latexOutput(std::string FEN, std::ostream& out);
--------void latexOutput(const chessPosition* pos, std::ostream& out, evaluationResult ev, int16_t eval);
-------+
------- std::string moveToExtendedString(chessMove move, chessPosition position);
------- #endif /* USERINTERFACE_UILAYER_HPP_ */
-------diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
-------index 153d6b8..a7b750c 100644
---------- a/Cpp/src/userInterface/UImainLoop.cpp
-------+++ b/Cpp/src/userInterface/UImainLoop.cpp
-------@@ -18,6 +18,7 @@
------- #include <iomanip>
------- #include <userInterface/interfaceStructs.hpp>
------- #include <lib/moveGeneration/moveGeneration.hpp>
-------+#include <logging/logger.hpp>
------- userInterface* UI;
------- 
------- extern uint8_t searchId;
-------@@ -85,6 +86,8 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
------- 
------- 	//uint64_t goalNodes = 1800*maximal_time;
------- 	while(get_timestamp()-start_ts <= totalTime) {
-------+		/*setTotalTime(100000000, start_ts);
-------+		while(depth < 14) {*/
------- #endif
------- 		try{
------- 			chessMove localBestMove;
-------@@ -148,6 +151,7 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
------- 
------- 		*nodeCount = (data.totalNodes+getQuiescenceNodes());
------- 		UI->sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
-------+		logSearch(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
------- 		depth++;
------- 		searchedNodes = searchedNodes+*nodeCount;
------- 		if(*eval > 29000) {
-------@@ -192,6 +196,8 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
------- 		std::cout << qindices[k] << " ";
------- 	}
------- 	std::cout << std::endl;*/
-------+	int16_t neval = evaluation(position, -32000, 32000);
-------+	latexOutput(position,  getEvaluationResult(), neval);
------- 	return depth;
------- }
------- 
-------diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
-------index fa98113..2908af8 100644
---------- a/chessGui/.idea/workspace.xml
-------+++ b/chessGui/.idea/workspace.xml
-------@@ -67,11 +67,7 @@
-------           <provider selected="true" editor-type-id="text-editor">
-------             <state relative-caret-position="1035">
-------               <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
--------              <folding>
--------                <element signature="imports" expanded="false" />
--------                <element signature="e#1121#1122#0" expanded="false" />
--------                <element signature="e#1168#1169#0" expanded="false" />
--------              </folding>
-------+              <folding />
-------             </state>
-------           </provider>
-------         </entry>
-------@@ -81,21 +77,7 @@
-------           <provider selected="true" editor-type-id="text-editor">
-------             <state relative-caret-position="1290">
-------               <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
--------              <folding>
--------                <element signature="imports" expanded="false" />
--------                <element signature="e#1047#1048#0" expanded="false" />
--------                <element signature="e#1117#1118#0" expanded="false" />
--------                <element signature="e#1165#1166#0" expanded="false" />
--------                <element signature="e#1229#1230#0" expanded="false" />
--------                <element signature="e#1540#1541#0" expanded="false" />
--------                <element signature="e#1607#1608#0" expanded="false" />
--------                <element signature="e#3451#3452#0" expanded="false" />
--------                <element signature="e#3517#3518#0" expanded="false" />
--------                <element signature="e#6836#6837#0" expanded="false" />
--------                <element signature="e#6888#6889#0" expanded="false" />
--------                <element signature="e#7967#7968#0" expanded="false" />
--------                <element signature="e#8015#8016#0" expanded="false" />
--------              </folding>
-------+              <folding />
-------             </state>
-------           </provider>
-------         </entry>
-------@@ -113,8 +95,8 @@
-------       <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
-------         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
-------           <provider selected="true" editor-type-id="text-editor">
--------            <state relative-caret-position="225">
--------              <caret line="28" column="26" selection-start-line="28" selection-start-column="26" selection-end-line="28" selection-end-column="26" />
-------+            <state relative-caret-position="585">
-------+              <caret line="52" column="0" selection-start-line="52" selection-start-column="0" selection-end-line="52" selection-end-column="0" />
-------               <folding />
-------             </state>
-------           </provider>
-------@@ -125,11 +107,7 @@
-------           <provider selected="true" editor-type-id="text-editor">
-------             <state relative-caret-position="1845">
-------               <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
--------              <folding>
--------                <element signature="imports" expanded="false" />
--------                <element signature="e#5464#5465#0" expanded="false" />
--------                <element signature="e#5490#5491#0" expanded="false" />
--------              </folding>
-------+              <folding />
-------             </state>
-------           </provider>
-------         </entry>
-------@@ -139,11 +117,7 @@
-------           <provider selected="true" editor-type-id="text-editor">
-------             <state relative-caret-position="855">
-------               <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
--------              <folding>
--------                <element signature="imports" expanded="false" />
--------                <element signature="e#2569#2570#0" expanded="false" />
--------                <element signature="e#2602#2603#0" expanded="false" />
--------              </folding>
-------+              <folding />
-------             </state>
-------           </provider>
-------         </entry>
-------@@ -163,9 +137,7 @@
-------           <provider selected="true" editor-type-id="text-editor">
-------             <state relative-caret-position="240">
-------               <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
--------              <folding>
--------                <element signature="imports" expanded="false" />
--------              </folding>
-------+              <folding />
-------             </state>
-------           </provider>
-------         </entry>
-------@@ -185,16 +157,7 @@
-------           <provider selected="true" editor-type-id="text-editor">
-------             <state relative-caret-position="180">
-------               <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
--------              <folding>
--------                <element signature="e#492#493#0" expanded="false" />
--------                <element signature="e#531#532#0" expanded="false" />
--------                <element signature="e#575#576#0" expanded="false" />
--------                <element signature="e#618#619#0" expanded="false" />
--------                <element signature="e#677#678#0" expanded="false" />
--------                <element signature="e#713#714#0" expanded="false" />
--------                <element signature="e#773#774#0" expanded="false" />
--------                <element signature="e#819#820#0" expanded="false" />
--------              </folding>
-------+              <folding />
-------             </state>
-------           </provider>
-------         </entry>
-------@@ -307,8 +270,6 @@
-------     </navigator>
-------     <panes>
-------       <pane id="Scope" />
--------      <pane id="Scratches" />
--------      <pane id="PackagesPane" />
-------       <pane id="ProjectPane">
-------         <subPane>
-------           <PATH>
-------@@ -361,6 +322,8 @@
-------           </PATH>
-------         </subPane>
-------       </pane>
-------+      <pane id="PackagesPane" />
-------+      <pane id="Scratches" />
-------     </panes>
-------   </component>
-------   <component name="PropertiesComponent">
-------@@ -642,21 +605,17 @@
-------     <layout>
-------       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-------       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
--------      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
-------       <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
-------       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
-------       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
-------       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
--------      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-------       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
-------       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
--------      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
--------      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
-------+      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
-------       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
-------       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
-------       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
-------       <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
--------      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-------       <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
-------       <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
-------       <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
-------@@ -664,10 +623,14 @@
-------       <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
-------       <window_info id="Profiler" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
-------       <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
-------+      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-------       <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
-------+      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
-------       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
-------+      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-------       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
-------       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
-------+      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
-------     </layout>
-------   </component>
-------   <component name="Vcs.Log.UiProperties">
-------@@ -914,14 +877,14 @@
-------       </provider>
-------     </entry>
-------     <entry file="file://$PROJECT_DIR$/src/EditorGUI/editorgui.fxml">
-------+      <provider editor-type-id="JavaFX-Scene-Builder">
-------+        <state />
-------+      </provider>
-------       <provider selected="true" editor-type-id="text-editor">
-------         <state relative-caret-position="270">
-------           <caret line="18" column="28" selection-start-line="18" selection-start-column="28" selection-end-line="18" selection-end-column="28" />
-------         </state>
-------       </provider>
--------      <provider editor-type-id="JavaFX-Scene-Builder">
--------        <state />
--------      </provider>
-------     </entry>
-------     <entry file="file://$PROJECT_DIR$/src/EditorGUI/EditorGUI.java">
-------       <provider selected="true" editor-type-id="text-editor">
-------@@ -966,34 +929,20 @@
-------       </provider>
-------     </entry>
-------     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/playinggui.fxml">
-------+      <provider editor-type-id="JavaFX-Scene-Builder">
-------+        <state />
-------+      </provider>
-------       <provider selected="true" editor-type-id="text-editor">
-------         <state relative-caret-position="679">
-------           <caret line="59" column="90" selection-start-line="59" selection-start-column="90" selection-end-line="59" selection-end-column="90" />
-------         </state>
-------       </provider>
--------      <provider editor-type-id="JavaFX-Scene-Builder">
--------        <state />
--------      </provider>
-------     </entry>
-------     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingController.java">
-------       <provider selected="true" editor-type-id="text-editor">
-------         <state relative-caret-position="1290">
-------           <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
--------          <folding>
--------            <element signature="imports" expanded="false" />
--------            <element signature="e#1047#1048#0" expanded="false" />
--------            <element signature="e#1117#1118#0" expanded="false" />
--------            <element signature="e#1165#1166#0" expanded="false" />
--------            <element signature="e#1229#1230#0" expanded="false" />
--------            <element signature="e#1540#1541#0" expanded="false" />
--------            <element signature="e#1607#1608#0" expanded="false" />
--------            <element signature="e#3451#3452#0" expanded="false" />
--------            <element signature="e#3517#3518#0" expanded="false" />
--------            <element signature="e#6836#6837#0" expanded="false" />
--------            <element signature="e#6888#6889#0" expanded="false" />
--------            <element signature="e#7967#7968#0" expanded="false" />
--------            <element signature="e#8015#8016#0" expanded="false" />
--------          </folding>
-------+          <folding />
-------         </state>
-------       </provider>
-------     </entry>
-------@@ -1001,11 +950,7 @@
-------       <provider selected="true" editor-type-id="text-editor">
-------         <state relative-caret-position="1035">
-------           <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
--------          <folding>
--------            <element signature="imports" expanded="false" />
--------            <element signature="e#1121#1122#0" expanded="false" />
--------            <element signature="e#1168#1169#0" expanded="false" />
--------          </folding>
-------+          <folding />
-------         </state>
-------       </provider>
-------     </entry>
-------@@ -1017,15 +962,27 @@
-------         </state>
-------       </provider>
-------     </entry>
-------+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
-------+      <provider selected="true" editor-type-id="text-editor">
-------+        <state relative-caret-position="585">
-------+          <caret line="52" column="0" selection-start-line="52" selection-start-column="0" selection-end-line="52" selection-end-column="0" />
-------+          <folding />
-------+        </state>
-------+      </provider>
-------+    </entry>
-------+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-------+      <provider selected="true" editor-type-id="text-editor">
-------+        <state relative-caret-position="1845">
-------+          <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
-------+          <folding />
-------+        </state>
-------+      </provider>
-------+    </entry>
-------     <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
-------       <provider selected="true" editor-type-id="text-editor">
-------         <state relative-caret-position="855">
-------           <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
--------          <folding>
--------            <element signature="imports" expanded="false" />
--------            <element signature="e#2569#2570#0" expanded="false" />
--------            <element signature="e#2602#2603#0" expanded="false" />
--------          </folding>
-------+          <folding />
-------         </state>
-------       </provider>
-------     </entry>
-------@@ -1041,9 +998,7 @@
-------       <provider selected="true" editor-type-id="text-editor">
-------         <state relative-caret-position="240">
-------           <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
--------          <folding>
--------            <element signature="imports" expanded="false" />
--------          </folding>
-------+          <folding />
-------         </state>
-------       </provider>
-------     </entry>
-------@@ -1059,35 +1014,6 @@
-------       <provider selected="true" editor-type-id="text-editor">
-------         <state relative-caret-position="180">
-------           <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
--------          <folding>
--------            <element signature="e#492#493#0" expanded="false" />
--------            <element signature="e#531#532#0" expanded="false" />
--------            <element signature="e#575#576#0" expanded="false" />
--------            <element signature="e#618#619#0" expanded="false" />
--------            <element signature="e#677#678#0" expanded="false" />
--------            <element signature="e#713#714#0" expanded="false" />
--------            <element signature="e#773#774#0" expanded="false" />
--------            <element signature="e#819#820#0" expanded="false" />
--------          </folding>
--------        </state>
--------      </provider>
--------    </entry>
--------    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
--------      <provider selected="true" editor-type-id="text-editor">
--------        <state relative-caret-position="1845">
--------          <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
--------          <folding>
--------            <element signature="imports" expanded="false" />
--------            <element signature="e#5464#5465#0" expanded="false" />
--------            <element signature="e#5490#5491#0" expanded="false" />
--------          </folding>
--------        </state>
--------      </provider>
--------    </entry>
--------    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
--------      <provider selected="true" editor-type-id="text-editor">
--------        <state relative-caret-position="225">
--------          <caret line="28" column="26" selection-start-line="28" selection-start-column="26" selection-end-line="28" selection-end-column="26" />
-------           <folding />
-------         </state>
-------       </provider>
-------diff --git a/output b/output
-------deleted file mode 100644
-------index e69de29..0000000
----diff --git a/to_old.diff b/to_old.diff
----index d143b52..1f797b9 100644
------- a/to_old.diff
----+++ b/to_old.diff
----@@ -1,1620 +1,4044 @@
----+diff --git a/Cpp/.cproject b/Cpp/.cproject
----+index 13653c0..91f122f 100644
----+--- a/Cpp/.cproject
----++++ b/Cpp/.cproject
----+@@ -28,7 +28,7 @@
----+ 								</option>
----+ 								<option id="gnu.cpp.compiler.option.dialect.std.925735192" name="Language standard" superClass="gnu.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++1y" valueType="enumerated"/>
----+ 								<option id="gnu.cpp.compiler.option.preprocessor.def.858912106" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
----+-									<listOptionValue builtIn="false" value="DEBUG"/>
----++									<listOptionValue builtIn="false" value="HASH"/>
----+ 								</option>
----+ 								<option id="gnu.cpp.compiler.option.debugging.gprof.1552489047" name="Generate gprof information (-pg)" superClass="gnu.cpp.compiler.option.debugging.gprof" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----+ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.855014974" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----+@@ -82,7 +82,7 @@
----+ 							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1283391186" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
----+ 							<tool command="g++" id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.1275758125" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
----+ 								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.818781076" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
----+-								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.1939078689" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
----++								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.1939078689" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" useByScannerDiscovery="false" value="gnu.cpp.compiler.debugging.level.max" valueType="enumerated"/>
----+ 								<option id="gnu.cpp.compiler.option.include.paths.2128545554" name="Include paths (-I)" superClass="gnu.cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
----+ 									<listOptionValue builtIn="false" value="/home/vabi/code/chessEngine/Cpp/src"/>
----+ 								</option>
----+@@ -92,6 +92,9 @@
----+ 								<option id="gnu.cpp.compiler.option.other.other.1052557102" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.optimization.flags.1382838263" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1780748801" name="Extra warnings (-Wextra)" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----++								<option id="gnu.cpp.compiler.option.preprocessor.def.2109827828" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
----++									<listOptionValue builtIn="false" value="HASH"/>
----++								</option>
----+ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.1496015459" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----+ 							</tool>
----+ 							<tool command="gcc" id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.1303530301" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
----+@@ -153,6 +156,9 @@
----+ 								<option id="gnu.cpp.compiler.option.warnings.toerrors.441224128" name="Warnings as errors (-Werror)" superClass="gnu.cpp.compiler.option.warnings.toerrors" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----+ 								<option id="gnu.cpp.compiler.option.other.other.2052230228" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.optimization.flags.1563218069" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
----++								<option id="gnu.cpp.compiler.option.preprocessor.def.1877028967" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
----++									<listOptionValue builtIn="false" value="HASH"/>
----++								</option>
----+ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.208539094" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----+ 							</tool>
----+ 							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.142901682" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
----+@@ -212,10 +218,7 @@
----+ 								<option id="gnu.cpp.compiler.option.other.other.1181205897" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.optimization.flags.910347230" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.preprocessor.def.77283027" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
----+-									<listOptionValue builtIn="false" value="UCI"/>
----+-									<listOptionValue builtIn="false" value="FIXEDDEPTH"/>
----+-									<listOptionValue builtIn="false" value="RANDOMEVAL"/>
----+-									<listOptionValue builtIn="false" value="EXPERIMENTAL"/>
----++									<listOptionValue builtIn="false" value="HASH"/>
----+ 								</option>
----+ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.198579438" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----+ 							</tool>
----+@@ -228,6 +231,9 @@
----+ 							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release.1820318665" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release">
----+ 								<option id="gnu.cpp.link.option.debugging.gprof.1672464423" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="false" valueType="boolean"/>
----+ 								<option id="gnu.cpp.link.option.flags.258710476" name="Linker flags" superClass="gnu.cpp.link.option.flags" useByScannerDiscovery="false" value="" valueType="string"/>
----++								<option id="gnu.cpp.link.option.libs.62530067" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" valueType="libs">
----++									<listOptionValue builtIn="false" value="pthread"/>
----++								</option>
----+ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.292898201" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
----+ 									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
----+ 									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
----+@@ -276,9 +282,7 @@
----+ 								<option id="gnu.cpp.compiler.option.other.other.164347651" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.optimization.flags.1368435843" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.preprocessor.def.22861188" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
----+-									<listOptionValue builtIn="false" value="UCI"/>
----+-									<listOptionValue builtIn="false" value="FIXEDDEPTH"/>
----+-									<listOptionValue builtIn="false" value="RANDOMEVAL"/>
----++									<listOptionValue builtIn="false" value="HASH"/>
----+ 								</option>
----+ 								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1843942148" name="Extra warnings (-Wextra)" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="false" valueType="boolean"/>
----+ 								<option id="gnu.cpp.compiler.option.warnings.pedantic.1518046007" name="Pedantic (-pedantic)" superClass="gnu.cpp.compiler.option.warnings.pedantic" useByScannerDiscovery="false" value="false" valueType="boolean"/>
----+@@ -293,6 +297,9 @@
----+ 							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release.736819361" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release">
----+ 								<option id="gnu.cpp.link.option.debugging.gprof.506475878" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="false" valueType="boolean"/>
----+ 								<option id="gnu.cpp.link.option.flags.672204101" name="Linker flags" superClass="gnu.cpp.link.option.flags" useByScannerDiscovery="false" value="" valueType="string"/>
----++								<option id="gnu.cpp.link.option.libs.1908967652" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" useByScannerDiscovery="false" valueType="libs">
----++									<listOptionValue builtIn="false" value="pthread"/>
----++								</option>
----+ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.1617245180" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
----+ 									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
----+ 									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
----+@@ -340,8 +347,8 @@
----+ 								<option id="gnu.cpp.compiler.option.warnings.toerrors.1415290087" name="Warnings as errors (-Werror)" superClass="gnu.cpp.compiler.option.warnings.toerrors" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----+ 								<option id="gnu.cpp.compiler.option.other.other.596169180" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
----+ 								<option id="gnu.cpp.compiler.option.optimization.flags.1217448668" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="" valueType="string"/>
----+-								<option id="gnu.cpp.compiler.option.preprocessor.def.1628151150" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
----+-									<listOptionValue builtIn="false" value="WINDOWS"/>
----++								<option id="gnu.cpp.compiler.option.preprocessor.def.1628151150" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
----++									<listOptionValue builtIn="false" value="HASH"/>
----+ 								</option>
----+ 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.656620263" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----+ 							</tool>
----+diff --git a/Cpp/gmon.out b/Cpp/gmon.out
----+index e50ed16..9184480 100644
----+Binary files a/Cpp/gmon.out and b/Cpp/gmon.out differ
---- diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
-----index e578371..25923c9 100644
----+index 12fbe51..a436910 100644
---- --- a/Cpp/src/Search/moveOrdering.cpp
---- +++ b/Cpp/src/Search/moveOrdering.cpp
-----@@ -39,7 +39,7 @@ int16_t captureEvals[6][7] = {
----- 		{0, 	50, 	50, 	220, 	700, 	10000,	0},
----- 		{-20, 	40, 	40, 	210, 	400, 	10000,	0},
----- 		{-70, 	30, 	30, 	160, 	400, 	10000,	0},
------		{100, 	200, 	200, 	300, 	400, 	10000,	0},
-----+		{0, 	200, 	200, 	300, 	700, 	10000,	0},
----- };
----- 
----- void calcCaptureSortEval(chessPosition* position, chessMove* mv, uint16_t hashedMove) {
-----@@ -69,7 +69,7 @@ void calcCaptureSortEval(chessPosition* position, chessMove* mv, uint16_t hashed
----- 
----- #define ILLEGAL -20000
----- 
------static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackTable* opponentAttackTable, AttackTable* ownAttackTable, uint16_t hashedMove, uint16_t killerA, uint16_t killerB) {
-----+static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackTable* opponentAttackTable, AttackTable* ownAttackTable, uint16_t hashedMove, uint16_t killerA, uint16_t killerB, uint16_t refutationTarget) {
----- 
----- 	int16_t sortEval = 0;
----- 
-----@@ -84,7 +84,7 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 	}*/
----+@@ -147,6 +147,8 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----  
----- 	if (((uint16_t) mv->type) < 6) {
------		sortEval = sortEval+pieceTables[mv->type][position->toMove][mv->targetField]-pieceTables[mv->type][position->toMove][mv->sourceField];
-----+		sortEval = sortEval+(pieceTables[mv->type][position->toMove][mv->targetField]-pieceTables[mv->type][position->toMove][mv->sourceField])/4;
----+ 	if(targetAttacked && mv->type == kingMove) {
----+ 		sortEval = ILLEGAL;
----++		mv->sortEval = sortEval;
----++		return;
----  	}
----  
----- 	if(mv->type == promotionQueen) {
-----@@ -158,21 +158,25 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 
----- 		uint16_t targetFile = FILE(mv->targetField);
----- 		uint64_t pawns      = position->pieceTables[position->toMove][pawn];
------
-----+		uint64_t opppawns      = position->pieceTables[1-position->toMove][pawn];
----- 		if((targetFile & pawns) == 0) {
------			sortEval = sortEval+30;
-----+			sortEval = sortEval+10;
-----+			if((targetFile & opppawns) == 0){
-----+				sortEval = sortEval+30;
-----+			}
----- 		}
----- 
----- 	}
----- 
----- 
----- 	if((mv->type == pawnMove)) {
------
----- 		if(BIT64(mv->targetField) & CENTER){
----- 			sortEval = sortEval+80;
----- 		} else if(BIT64(mv->targetField) & WIDECENTER){
----- 			sortEval = sortEval+50;
------		}
-----+		} /*else {
-----+			sortEval = sortEval+30;
-----+		}*/
----- 	}
----- 	if((position->madeMoves.length > 0) && (mv->captureType != none)){
----- 		chessMove previousMove = position->madeMoves[position->madeMoves.length-1];
-----@@ -196,12 +200,9 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 
----- 	if(mv->type == castlingKingside) {
----+ 	if( (mv->captureType != none) && ((BIT64(mv->targetField) & opponentAttackTable->completeAttackTable) == 0)) {
----+@@ -203,11 +205,15 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----  		sortEval  = 110;
------
----  		if(kingBlockers[position->toMove] & opponentAttackTable->completeAttackTable) {
----  			sortEval = ILLEGAL;
----++			mv->sortEval = sortEval;
----++			return;
----  		}
------
------
----  	} else if(mv->type == castlingQueenside) {
----  		sortEval  = 70;
----  		if(queenBlockers[position->toMove] & opponentAttackTable->completeAttackTable) {
-----@@ -216,11 +217,11 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 	if(mv->captureType == none){
----- 		int32_t historyValue = historyTable[position->toMove][mv->sourceField][mv->targetField];
----- 		if(historyValue > 20){
------			historyValue = 21+(historyValue/16);
-----+			historyValue = 21+(historyValue/8);
----- 		}
----- 
----- 		if(historyValue < -20){
------			historyValue = -21+(historyValue/16);
-----+			historyValue = -21+(historyValue/8);
----+ 			sortEval = ILLEGAL;
----++			mv->sortEval = sortEval;
----++		    return;
----  		}
----+ 	}
----  
----- 		sortEval = sortEval+historyValue;
-----@@ -228,6 +229,10 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----- 		//std::cout << (historyTable[position->toMove][mv->sourceField][mv->targetField] >> 6) << std::endl;
----+@@ -243,8 +249,12 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----+ 		sortEval = sortEval+100;
----  	}
----  
-----+	if( mv->sourceField == refutationTarget) {
-----+		sortEval = sortEval+100;
----++	if(sortEval > 20000) {
----++		std::cout << "????" <<std::endl;
---- +	}
---- +
----  	if( ((mv->sourceField) | (mv->targetField << 8)) == hashedMove) {
----- 			sortEval = sortEval+2000;
----+-			sortEval = sortEval+2000;
----++			sortEval = sortEval+10000;
----  	}
-----@@ -235,7 +240,7 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----+ 
----  	mv->sortEval = sortEval;
----- }
----+@@ -283,7 +293,11 @@ void orderCaptureMoves(chessPosition* position, vdt_vector<chessMove>* moves) {
----+ 		return;
----+ 	}
----+ 
----++#ifdef HASH
----+ 	uint16_t hashedMove = getHashMove(position->zobristHash);
----++#else
----++	uint16_t hashedMove = 0;
----++#endif
----+ 	int16_t bestEval = INT16_MIN;
----+ 	uint16_t bestIndex = 0;
----  
------bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove) {
-----+bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget) {
----- 
----- 	AttackTable opponentAttackTable = makeAttackTable(position, (playerColor) (1-position->toMove), position->pieceTables[position->toMove][king]);
----- 	AttackTable ownAttackTable 		= makeAttackTable(position, position->toMove);
-----@@ -245,7 +250,7 @@ bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, u
----- 	uint16_t killerMoveA = killerMoves[ply][0];
----- 	uint16_t killerMoveB = killerMoves[ply][1];
----- 	for (uint16_t ind=0; ind < moves->length; ind++) {
------		calcSortEval(position, &(*moves)[ind], &opponentAttackTable, &ownAttackTable, hashedMove, killerMoveA, killerMoveB);
-----+		calcSortEval(position, &(*moves)[ind], &opponentAttackTable, &ownAttackTable, hashedMove, killerMoveA, killerMoveB, refutationTarget);
----- 		if((*moves)[ind].sortEval > bestEval){
----- 			bestEval = (*moves)[ind].sortEval;
----- 			bestIndex = ind;
---- diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
-----index 61b5fc2..3075bc8 100644
----+index 35d6724..39ca566 100644
---- --- a/Cpp/src/Search/negamax.cpp
---- +++ b/Cpp/src/Search/negamax.cpp
-----@@ -29,10 +29,19 @@ static searchDebugData searchCounts;
----- searchDebugData getSearchData(){
----- 	return searchCounts;
----- }
-----+
----- void resetSearchData(){
----- 	memset(&searchCounts, 0, sizeof(searchCounts));
----+@@ -43,6 +43,28 @@ void setTotalTime(uint32_t tTime, uint64_t start){
----  }
----  
-----+static uint32_t totalTime;
-----+static uint64_t start_ts;
----+ 
----++uint64_t trueRets = 0;
----++uint64_t falseRets = 0;
----++
----++bool getHashMoveToFront(vdt_vector<chessMove>* moves, uint16_t hashMove, chessMove* mov) {
----++
----++	for(uint16_t ind=0; ind < moves->length; ind++) {
----++		chessMove mv = (*moves)[ind];
----++		if( ((mv.sourceField) | (mv.targetField << 8)) == hashMove) {
----++			 chessMove buffer = (*moves)[0];
----++			 (*moves)[0] = (*moves)[ind];
----++			 (*moves)[ind] = buffer;
----++			 *mov = mv;
----++			 trueRets++;
----++			 return true;
----++		}
----++
----++	}
----++	falseRets++;
----++	return false;
---- +
-----+void setTotalTime(uint32_t tTime, uint64_t start){
-----+	totalTime = tTime;
-----+	start_ts = start;
---- +}
---- +
----- 
----  uint16_t killerMoves[40][2];
----  
-----@@ -57,14 +66,14 @@ static inline bool backtrack_position_for_repetition(chessPosition* position) {
----- 	return false;
----- }
----- 
------static uint8_t nullmoveReductions[40] = {0,1,2,2,2,2,2,3,
------										 3,3,3,3,3,3,3,3,
-----+static uint8_t nullmoveReductions[40] = {0,1,2,2,2,2,2,2,
-----+										 2,2,2,2,2,2,2,2,
----- 										 3,3,3,3,3,3,3,3,
----- 										 3,3,3,3,3,3,3,3,
----- 										 3,3,3,3,3,3,3,3,
----+ //static chessMove buffer[5000];
----+@@ -74,7 +96,7 @@ static uint8_t nullmoveReductions[40] = {0,1,2,2,2,2,2,2,
----  };
----  
------static inline bool check_nullmove(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int32_t beta){
-----+static inline bool check_nullmove(chessPosition* position, uint16_t* refutationMoveTarget, uint16_t ply, uint16_t max_ply, int16_t depth, int32_t beta){
----- 
----+ static inline bool check_nullmove(chessPosition* position, uint16_t* refutationMoveTarget, uint16_t ply, uint16_t max_ply, int16_t depth, int32_t beta){
----+-
----++	//return false;
----  
----  	if(beta > 10000){ //TODO: more dynamic condition here?
-----@@ -76,8 +85,8 @@ static inline bool check_nullmove(chessPosition* position, uint16_t ply, uint16_
----- 	}*/
----- 	int32_t eval = evaluation(position, beta-1, beta);
----- 
------	if(eval < beta){
------		return false; //no point in trying nullmove when the current evaluation is already worse than beta
-----+	if(eval < beta-100){
-----+		return false; //no point in trying nullmove when the current evaluation is already much worse than beta
----- 	}
----- 
----- 
-----@@ -87,16 +96,24 @@ static inline bool check_nullmove(chessPosition* position, uint16_t ply, uint16_
----- 	int32_t value = -negamax(position, ply+1, max_ply, depth-1-nullmoveReductions[depth], -beta, -beta+1, &mv, false);
----+ 		return false;
----+@@ -90,19 +112,27 @@ static inline bool check_nullmove(chessPosition* position, uint16_t* refutationM
----+ 
----+ 	makeNullMove(position);
----+ 	chessMove mv;
----++	mv.targetField = 64;
----+ 	searchCounts.nullMovePruningTried++;
----+ 	int32_t value = -negamax(position, ply+1, max_ply-nullmoveReductions[depth], depth-1-nullmoveReductions[depth], -beta, -beta+1, &mv, false);
----  	undoNullMove(position);
----  	if(value < beta) {
-----+		*refutationMoveTarget = mv.targetField;
----+ 		*refutationMoveTarget = mv.targetField;
----++		assert(*refutationMoveTarget < 65);
----  		return false; //didnt manage a cutoff :(
----  	}
----  	searchCounts.nullMovePruningSuccessful++;
----  	return true;
----  }
----  
------int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe) {
-----+int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe){
----++//std::ofstream plogger("/home/vabi/Tools/log.txt");
----++
----+ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe){
----  
-----+	if(depth >= 3) { //TODO: be careful here - we may have to reset the stack in quiescence search as well!
-----+		if(get_timestamp()-start_ts >= totalTime){ //TODO: how is this performance wise?
-----+			qmvStack.reset();
-----+			throw timeoutException();
-----+		}
----++	/*std::string pos = chessPositionToFenString(*position, false);
----++	plogger << pos << " DEPTH " << depth  << " ply " << ply << " alpha " << alpha << " beta " << beta << std::endl;*/
----++
----++
----+ 	if(depth > 3) { //TODO: be careful here - we may have to reset the stack in quiescence search as well!
----+ 		if(get_timestamp()-start_ts >= totalTime){ //TODO: how is this performance wise?
----+ 			qmvStack.reset();
----+@@ -133,6 +163,11 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+ 		}
----+ 	}
----+ 
----++	if(doHashProbe) {
----++		trueRets++;
---- +	}
----- 	assert(alpha < beta);
----- 	assert(ply+depth <= max_ply);
---- +
----- 	searchCounts.called++;
----- 	if(position->data.fiftyMoveRuleCounter >= 100){
----- 		return 0;
-----@@ -148,8 +165,9 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 	uint64_t ownKing = position->pieceTables[position->toMove][king];
----- 	bool movingSideInCheck = isFieldAttacked(position, (playerColor) (1-position->toMove), findLSB(ownKing));
----- 
------	if(allowNullMove && !movingSideInCheck){
------		if(check_nullmove(position, ply, max_ply, depth, beta)){
-----+	uint16_t refutationTarget = NO_REFUTATION; //invalid
-----+	if(allowNullMove && !movingSideInCheck && (depth >= 2)){
-----+		if(check_nullmove(position, &refutationTarget, ply, max_ply, depth, beta)){
----- 			return beta;
----++#ifdef HASH
----+ 	hashEntry hashVal      = getHashTableEntry(position->zobristHash);
----+ 
----+ 	uint32_t zobristHigher = (uint32_t) (position->zobristHash >> 32);
----+@@ -162,7 +197,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+ 			}
----  		}
----  	}
-----@@ -160,11 +178,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 	//futility pruning
----- 	//-----------------
----- 	if(depth == 1){
---- -
------//#ifdef EXPERIMENTAL
------		 //TODO: need to fix move stack first!!
----++#endif
----+ 	//go to quiescence on depth 0
----+ 	//---------------------------
----+ 	if(depth <= 0) {
----+@@ -187,32 +222,41 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+ 	if((depth == 1) && (alpha > -2000)) {
----  		if(!movingSideInCheck) {
------//#endif
----  			searchCounts.futility_tried++;
----- 			int32_t base = evaluation(position, alpha-151, alpha);
----- 			if(base+150 < alpha){
-----@@ -174,14 +188,13 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 				return  negamaxQuiescence(position, alpha, beta, 0);
----+-			int32_t base = evaluation(position, alpha-151, alpha);
----+-			if(base+150 < alpha){
----+-				searchCounts.futility_successful++;
----+-				//in this case, trying a silent move is pointless.
----+-				//std::cout << "Successful futility pruning" << std::endl;
----+-				return  negamaxQuiescence(position, alpha, beta, 0);
----++			int32_t simpleEval = evaluation(position, alpha-151, alpha, true);
----++			if(simpleEval < alpha+100) {
----++				int32_t base = evaluation(position, alpha-151, alpha);
----++				if(base+150 < alpha){
----++					searchCounts.futility_successful++;
----++					//in this case, trying a silent move is pointless.
----++					//std::cout << "Successful futility pruning" << std::endl;
----++					return  negamaxQuiescence(position, alpha, beta, 0);
----++				}
----  			}
----  		}
------//#ifdef EXPERIMENTAL
----  	}
------//#endif
-----+
----  
----+-
----  	uint16_t stackCounter = qmvStack.getCounter();
----  	vdt_vector<chessMove> moves = qmvStack.getNext();
----  	generateAllMoves(&moves, position);
------	bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove);
-----+	bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
----- 
----+-	bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
----  
----++#ifdef HASH
----++	uint16_t hashmove = hashVal.bestMove;
----++#else
----++	uint16_t hashmove = 0;
----++#endif
----++
----++	bool isInCheck = orderStandardMoves(position, &moves, ply, hashmove, refutationTarget);
----+ 	assert(isInCheck == movingSideInCheck);
----++
----  	bool legalMovesAvailable = false;
-----@@ -231,12 +244,11 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 			if((ind > 3) && (moves[ind].captureType == none) && (depth > 2) && !isInCheck) { //LMR
----- 				if(!check){
----+ 	bool foundGoodMove = false;
----+ 	searchCounts.wentToSearch++;
----+ 
----+-	for(uint16_t ind=0; ind < moves.length; ind++){
----++	for(volatile uint16_t ind=0; ind < moves.length; ind++){
----+ 
----+ 		if(ind == 1){
----+ 			searchCounts.neededSort++;
----+-			std::sort(moves.data, moves.data+moves.length);
----++			std::stable_sort(moves.data, moves.data+moves.length);
----+ 		}
----+ 
----+ 		if(moves[ind].sortEval < -10000){
----+@@ -236,7 +280,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+ 			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
----+ 			uint16_t reduction = 0;
----+ 			uint16_t extension = 0;
----+-			if(!check && !isInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
----++			if(!check && !movingSideInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
----+ 				if((ind > 3)){
----  					reduction = 1;
-----+//#ifdef EXPERIMENTAL
----- 					if(ind > 15) {
----- 						reduction = 2;
----- 					}
------					if((depth > 8) && (ind > 6)) {
------						reduction = depth/3;
------					}
-----+//#endif
----+ //#ifdef EXPERIMENTAL
----+@@ -280,7 +324,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----  				}
----  			}
----  
-----@@ -266,7 +278,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----- 		}
----+-			int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
----++			volatile int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
----+ 
----+ 			if(value > alpha){
----+ 				foundGoodMove = true;
----+@@ -292,7 +336,9 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----  		undoMove(position);
----  
------		if(alpha >= beta) {
-----+		if((alpha >= beta)) {
----- 			if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----- 				setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----+ 		if((alpha >= beta)) {
----++#ifdef HASH
----+ 			setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----++#endif
----+ 			if(bestIndex != -1){
----+ 				searchCounts.bestIndex[depth][bestIndex]++;
----  			}
-----@@ -316,6 +328,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+@@ -334,21 +380,23 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+ 	}
----+ 
----+ 	if(!legalMovesAvailable){
----+-		if(isInCheck){
----++		if(movingSideInCheck){
----+ 			alpha = -30000+ply;
----+ 		} else {
----+ 			alpha = 0;
----  		}
----  	}
----  
-----+
----++#ifdef HASH
----+ 
----  	if(foundGoodMove) {
----- 		if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----- 			setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----+ 		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----+ 	} else { //we failed low, remember as well
----+ 		setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
----+ 	}
----+-
----++#endif
----+ 	qmvStack.release();
----+ 	assert(stackCounter == qmvStack.getCounter());
----++
----+ 	return alpha;
----+ }
---- diff --git a/Cpp/src/Search/quiescence.cpp b/Cpp/src/Search/quiescence.cpp
-----index d73f4c5..c153d16 100644
----+index 5aae8de..99856e8 100644
---- --- a/Cpp/src/Search/quiescence.cpp
---- +++ b/Cpp/src/Search/quiescence.cpp
-----@@ -112,7 +112,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----- 	int16_t bestIndex = -1;
----- 	for(uint16_t ind=0; ind < moves.length; ind++){
----+@@ -75,7 +75,8 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----+ 	}
----+ //#endif
----  
------		if(moves[ind].sortEval < -50){ //TODO: This means we prune bishopxKnight! This is not intended
-----+		if(moves[ind].sortEval < -50){
----- 			break; //SEE pruning
----+-	/*hashEntry hashVal      = getHashTableEntry(position->zobristHash);
----++#ifdef HASH
----++	hashEntry hashVal      = getHashTableEntry(position->zobristHash);
----+ 
----+ 	uint32_t zobristHigher = (uint32_t) (position->zobristHash >> 32);
----+ 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (position->zobristHash & 0xFFFFFFFF)) >> 16);
----+@@ -102,19 +103,17 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----+ 				return oldEval;
----+ 			}
----  		}
----- 		if(ind == 1){
-----diff --git a/Cpp/src/Search/search.hpp b/Cpp/src/Search/search.hpp
-----index f4647cf..fa070e6 100644
-------- a/Cpp/src/Search/search.hpp
-----+++ b/Cpp/src/Search/search.hpp
-----@@ -9,12 +9,12 @@
----- #define SEARCH_SEARCH_HPP_
----- #include <assert.h>
----- #define HISTORY_CUTOFF (1ULL << 12)
----+-	}*/
----+-
----+-
----+-
---- -
-----+#define NO_REFUTATION 64
----- void rescaleHistoryTable();
----- int16_t negamax(chessPosition* position,  uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
----- int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta, uint16_t depth);
----- void resetNodes();
------bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove);
-----+bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove, uint16_t refutationTarget);
----- void orderCaptureMoves(chessPosition* position, vdt_vector<chessMove>* moves);
----- uint32_t getNodes();
----- 
-----@@ -61,6 +61,7 @@ class moveStack {
----+-
----++	}
----++#endif
----+ 	int32_t baseEval = evaluation(position, alpha, beta);
----  
----- public:
----- 	vdt_vector<chessMove> getNext(){
-----+		assert(counter < 33);
----- 		counter++;
----- 		//std::cout << counter << std::endl;
----- 		return vdt_vector<chessMove>(moveArray+(counter-1)*150,150);
-----@@ -75,11 +76,17 @@ public:
----- 		return counter;
----+ 	if(baseEval > alpha){
----+ 		alpha = baseEval;
----+ 	}
----+ 	if(alpha >= beta) {
----++#ifdef HASH
----+ 		setHashEntry(FAILHIGH, alpha, 0, searchId, 0, position->zobristHash);
----++#endif
----+ 		return beta;
----  	}
----+ 	//delta pruning preparations
----+@@ -149,7 +148,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----+ 		}
----+ 		if(ind == 1){
----+ 			sortqCalled++;
----+-			std::sort(moves.data, moves.data+moves.length);
----++			std::stable_sort(moves.data, moves.data+moves.length);
----+ 		}
----+ 
----+ 		//delta pruning. TODO: make define
----+@@ -176,7 +175,9 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----+ 		}
----+ 		undoMove(position);
----+ 		if(alpha >= beta) {
----++#ifdef HASH
----+ 			setHashEntry(FAILHIGH, alpha, 0, searchId, (bestMove.sourceField | (bestMove.targetField << 8)), position->zobristHash);
----++#endif
----+ 			mvStack.release();
----+ 			assert(stackCounter == mvStack.getCounter());
----+ 			if(bestIndex != -1){
----+@@ -186,12 +187,14 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----+ 		}
----+ 	}
----+ 
----++#ifdef HASH
----+ 	if(bestIndex != -1){
----+ 		qindices[bestIndex]++;
----+ 		setHashEntry(FULLSEARCH, alpha, 0, searchId, (bestMove.sourceField | (bestMove.targetField << 8)), position->zobristHash);
----+ 	} else {
----+ 		setHashEntry(FAILLOW, alpha, 0, searchId, 0, position->zobristHash);
----+ 	}
----++#endif
----+ 	mvStack.release();
----+ 	assert(stackCounter == mvStack.getCounter());
----+ 	return alpha;
----+diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
----+index 393a357..084d26a 100644
----+--- a/Cpp/src/Vabi.cpp
----++++ b/Cpp/src/Vabi.cpp
----+@@ -91,6 +91,7 @@ int main() {
----+ 		latexOutput(line, out);
----+ 	}*/
----  
-----+	void reset(){
-----+		counter = 0;
-----+	}
---- +
----+ 	/*runPerformanceTests();
----+ 	return 0;*/
----+ 	/*std::cout << testPerftTestSuite().passed << std::endl;
----+diff --git a/Cpp/src/hashTables/zobristHash.cpp b/Cpp/src/hashTables/zobristHash.cpp
----+index 14d9f64..5e97919 100644
----+--- a/Cpp/src/hashTables/zobristHash.cpp
----++++ b/Cpp/src/hashTables/zobristHash.cpp
----+@@ -19,7 +19,7 @@ uint64_t movingSideHash[2];
----+ uint64_t castlingHash[16];
----+ uint64_t enpassantHash[9];
----  
----+-
----++#ifdef HASH
----+ static uint16_t permutationIndex = 0;
----  
----- };
----  
----- searchDebugData getSearchData();
----- void resetSearchData();
-----+bool isSearchValid();
-----+void setTotalTime(uint32_t tTime, uint64_t start);
----- 
----- #endif /* SEARCH_SEARCH_HPP_ */
-----diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
-----index a463e63..7cfad94 100644
-------- a/Cpp/src/lib/Defines/pieceTables.cpp
-----+++ b/Cpp/src/lib/Defines/pieceTables.cpp
-----@@ -56,6 +56,30 @@ int16_t pieceTables[7][2][64] = {
----- 				},
----- 		},
----- 		{
-----+
-----+#ifdef EXPERIMENTAL
-----+				{//white bishops
-----+						-40,-35,-35,-25,-25,-35,-35,-40,
-----+						-10,15,5,15,15,5,15,-10,
-----+						-5,5,10,5,5,10,5,-5,
-----+						0,15,10,15,15,10,15,0,
-----+						0,20,5,10,10,5,20,0,
-----+						-5,5,10,10,10,10,5,-5,
-----+						-15,-10,-10,-10,-10,-10,-10,-15,
-----+						-40,-25,-15,-15,-15,-15,-25,-40
-----+				},
-----+				{ //black bishops
-----+						-40,-25,-15,-15,-15,-15,-25,-40,
-----+						-15,-10,-10,-10,-10,-10,-10,-15,
-----+						-5,5,10,10,10,10,5,-5,
-----+						0,20,5,10,10,5,20,0,
-----+						0,15,10,15,15,10,15,0,
-----+						-5,5,10,5,5,10,5,-5,
-----+						-10,15,5,15,15,5,15,-10,
-----+						-40,-35,-35,-25,-25,-35,-35,-40,
-----+				}
----+@@ -32,13 +32,20 @@ static uint16_t permutations[4][4] = {{0,1,2,3}, {1,2,3,0}, {2,3,0,1}, {3,0,1,2}
----+ 
----+ hashEntry getHashTableEntry(uint64_t zobristKey) {
----+ 	hashBucket current = moveOrderingHashTable[zobristKey & HASHSIZE];
----+-
----+-	hashEntry ret = current.hashData[0];
----++	hashEntry ret;
----++	ret.bestMove = 0;
----++	ret.depth   = 0;
----++	ret.eval    = 0;
----++	ret.hashHighBits = 0;
----++	ret.hashLower = 0;
----++	ret.index = 0;
----++	ret.searchId = 0;
----++	ret.flag = FULLSEARCH;
----+ 
----+ 	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----+ 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----+ 
----+-	for(uint8_t ind=1; ind < 4; ind++){
----++	for(uint8_t ind=0; ind < 4; ind++){
----+ 		hashEntry entry = current.hashData[ind];
----+ 		if((entry.hashHighBits == zobristHigher) && (entry.hashLower == zobristLower)){
----+ 			ret = entry;
----+@@ -85,6 +92,7 @@ uint16_t getHashMove(uint64_t zobristKey){
----+ 
----+ }
----+ 
---- +
-----+#else
----- 				{//white bishops
----- 						-30,-15,-15,-10,-10,-15,-15,-30,
----- 						-10,15,5,15,15,5,15,-10,
-----@@ -76,6 +100,8 @@ int16_t pieceTables[7][2][64] = {
----- 						-10,15,5,15,15,5,15,-10,
----- 						-30,-15,-15,-10,-10,-15,-15,-30,
----- 				}
----+ void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId) {  //DEPRECATED
----+ 	hashBucket* current = &moveOrderingHashTable[zobristKey & HASHSIZE];
----+ 	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----+@@ -100,11 +108,12 @@ void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId) {  //DEPR
----+ 			entry->flag     = FAILHIGH;
----+ 			entry->hashHighBits = zobristHigher;
----+ 			entry->hashLower    = zobristLower;
----++			entry->index        = ind;
----+ 		}
----+ 	}
----+ 	permutationIndex = (permutationIndex+1) & 3;
----+ }
----+-
---- +#endif
-----+
----- 		},
----  
----- 		{
----+ void clearHashTables() {
----+ 	memset(moveOrderingHashTable, 0, sizeof(hashBucket)*(HASHSIZE+1));
---- diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
-----index fa1d727..dc825b6 100644
----+index 02e4fcd..497cb00 100644
---- --- a/Cpp/src/lib/Evaluation/evaluation.cpp
---- +++ b/Cpp/src/lib/Evaluation/evaluation.cpp
-----@@ -14,7 +14,11 @@
----- #include <lib/Attacks/attacks.hpp>
----- #include <lib/bitfiddling.h>
----- 
-----+evaluationResult result;
----+@@ -69,7 +69,7 @@ static int32_t rookOpenFiles(const chessPosition* position, uint8_t* pawnOccupan
----  
-----+evaluationResult getEvaluationResult(){
-----+	return result;
-----+}
----+ //static uint32_t counter = 0;
----  
----- uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
----- 						       	 0,  0,  0,  0,  0,  0,  0,  5,
-----@@ -49,16 +53,13 @@ extern int16_t endGamepieceTables[7][2][64];
----+-int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----++int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta, bool PSQ_only){
----  
----- int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----  
-----+
----  	if( (position->pieceTables[white][pawn] == 0) &&
----- 		(position->pieceTables[black][pawn] == 0) &&
----- 		position->totalFigureEval < 400) {
----- 		return 0; //insufficent material
----- 	}
----- 
------
------
------
------
----- 	/*uint16_t blackkingField = findLSB(position->pieceTables[black][king]);
----- 	return endGamepieceTables[king][black][blackkingField];*/ //in nthis way, we actually win endgames vs lone king. But be careful with searchdepth! higher depths may delay the moving of the king
----- 	//into corner indefinitely
-----@@ -82,7 +83,7 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----+@@ -106,6 +106,10 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----  
----  	int32_t pieceTableEval = ((256-taperingValues[phase])*bufferEndgame+taperingValues[phase]*bufferMidgame)/256; //division by 256
----  	eval = eval+pieceTableEval;
------
-----+	result.PSQ = pieceTableEval;
----++
----++	if(PSQ_only) {
----++		return (1-2*position->toMove)*eval;
----++	}
----+ 	result.PSQ = pieceTableEval;
----  
----  	int32_t evalsigned = (1-2*position->toMove)*eval;
----- 
-----@@ -97,31 +98,43 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----- 	int16_t mobilityScore = 0;
----- 	AttackTable whiteAttackTable 		= makeAttackTableWithMobility(position, white, &mobilityScore);
----- 	eval = eval+mobilityScore;
-----+	result.mobility = mobilityScore;
----- 	mobilityScore = 0;
----- 	AttackTable blackAttackTable 		= makeAttackTableWithMobility(position, black, &mobilityScore);
----- 	eval = eval-mobilityScore;
-----+	result.mobility = result.mobility-mobilityScore;
----- 
----- 
------	eval = eval+rookOpenFiles(position, pawnColumnOccupancy);
-----+	int16_t rookFiles = rookOpenFiles(position, pawnColumnOccupancy);
-----+	eval = eval+rookFiles;
-----+	result.rookOpenFiles = rookFiles;
----- 
----- 
----- 	uint64_t numWhiteBishops = popcount(position->pieceTables[white][bishop]);
----- 
----- 	if(numWhiteBishops > 1){
----- 		eval = eval+50;
-----+		result.bishoppair = 50;
----- 	}
----- 
----- 	uint64_t numblackBishops = popcount(position->pieceTables[black][bishop]);
----- 
----- 	if(numblackBishops > 1){
----- 		eval = eval-50;
-----+		result.bishoppair = result.bishoppair-50;
----- 	}
----- 
----- 	int32_t kingSafetyComplete = kingSafety(position, pawnColumnOccupancy, &whiteAttackTable, &blackAttackTable);;
----- 	int32_t kingSafetyTapered = (taperingValues[phase]*kingSafetyComplete)/256;
----- 	eval = eval+kingSafetyTapered;
------
------
-----+	result.kingSafety = kingSafetyTapered;
-----+#ifdef EXPERIMENTAL
-----+	if(position->toMove == white) {
-----+		eval = eval+10;
-----+	} else {
-----+		eval = eval-10;
-----+	}
-----+#endif
----- #ifdef RANDOMEVAL
----- 	eval = eval+(rand() & 7)-3; //TODO: how is this performance-wise?
----- #endif
---- diff --git a/Cpp/src/lib/Evaluation/evaluation.hpp b/Cpp/src/lib/Evaluation/evaluation.hpp
-----index 9448f31..869bee1 100644
----+index 14f85cd..bfd44e6 100644
---- --- a/Cpp/src/lib/Evaluation/evaluation.hpp
---- +++ b/Cpp/src/lib/Evaluation/evaluation.hpp
-----@@ -18,4 +18,14 @@ int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccup
----- int32_t debugPawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, VDTpawnEvaluation* pawnEval);
----- int32_t debugEvaluation(const chessPosition* position, VDTevaluation* debugStruct);
----- 
-----+struct evaluationResult {
-----+	int16_t PSQ;
-----+	int16_t staticPawn;
-----+	int16_t passedPawn;
-----+	int16_t kingSafety;
-----+	int16_t bishoppair;
-----+	int16_t mobility;
-----+	int16_t rookOpenFiles;
-----+};
-----+evaluationResult getEvaluationResult();
----- #endif /* EVALUATION_EVALUATION_HPP_ */
-----diff --git a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
-----index 7d1195a..e201a27 100644
-------- a/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
-----+++ b/Cpp/src/lib/Evaluation/pawnEvaluation.cpp
-----@@ -71,9 +71,20 @@ int32_t staticPawnEval(uint64_t pawns, playerColor color, uint8_t* pawnColumnOcc
----- 	eval = eval-50*popcount(isolatedDoublePawns)-20*popcount(nonIsolatedDoublePawns);
----- 
----- 	eval = eval-10*popcount(isolatedPawns);
-----+
-----+/*#ifdef EXPERIMENTAL
-----+	//reward pawns covered by other pawns
-----+	//---------------------------------------
-----+	uint64_t takesRight = (color ? pawns >> 7 : pawns << 9) & NOTFILEA;
-----+	uint64_t takesLeft = (color ? pawns >> 9 : pawns << 7) & NOTFILEH;
-----+	uint64_t takes = takesLeft | takesRight;
-----+	eval = eval+3*popcount(takes & pawns);
-----+#endif*/
-----+
----- 	return eval*(1-2*color);
----- }
----- 
-----+extern evaluationResult result;
----- 
----- int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase) {
----- 
-----@@ -81,11 +92,14 @@ int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupan
----- 	uint64_t whitePawns = position->pieceTables[white][pawn];
----- 	uint64_t blackPawns = position->pieceTables[black][pawn];
----- 
------
------	eval = eval+staticPawnEval(whitePawns, white, pawnColumnOccupancy)+staticPawnEval(blackPawns, black,  pawnColumnOccupancy+1);
-----+	int16_t staticPawn = staticPawnEval(whitePawns, white, pawnColumnOccupancy)+staticPawnEval(blackPawns, black,  pawnColumnOccupancy+1);
-----+	eval = eval+staticPawn;
-----+	result.staticPawn = staticPawn;
----- 	int32_t passedPawns = passedPawnEval(whitePawns, blackPawns);
----- 	passedPawns = ((256-taperingValues[phase])*passedPawns)/256;
----- 	eval = eval+passedPawns;
-----+	result.passedPawn = passedPawns;
-----+
----- 
----- /*#ifdef EXPERIMENTAL  looks like very small gain (~ 5-6 elo), but I was hoping for more...
----- 	//backwards pawn
-----diff --git a/Cpp/src/lib/basics.hpp b/Cpp/src/lib/basics.hpp
-----index 5f39770..fd2cb6f 100644
-------- a/Cpp/src/lib/basics.hpp
-----+++ b/Cpp/src/lib/basics.hpp
-----@@ -76,6 +76,15 @@ struct hashEntry{
----- 	uint8_t searchId;
----- } __attribute__((packed));
----- 
-----+class timeoutException: public std::exception
-----+{
-----+  virtual const char* what() const throw()
-----+  {
-----+    return "Timeout";
-----+  }
-----+};
-----+
----+@@ -13,7 +13,7 @@
----+ #include <parameters/parameters.hpp>
----+ 
----+ 
----+-int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta);
----++int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta, bool PSQ_only=false);
----+ int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, const evalParameters* evalPars);
----+ int32_t staticPawnEval(uint64_t pawns, playerColor color, const staticPawnEvalParameters* evalPars);
----+ int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccupancy, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable, const kingSafetyEvalParameters* par);
----+diff --git a/Cpp/src/parameters/externalParamReader.cpp b/Cpp/src/parameters/externalParamReader.cpp
----+index ec9bc97..d45c6ea 100644
----+--- a/Cpp/src/parameters/externalParamReader.cpp
----++++ b/Cpp/src/parameters/externalParamReader.cpp
----+@@ -36,12 +36,10 @@ bool parameterReader::readParameters(preParameters* pars, std::string filename){
----+ 
----+ 		std::ifstream input = std::ifstream(filename);
----+ 		if(!input.is_open()) {
----+-			std::cout << "No parameter file found" << std::endl;
----+ 			return false;
----+ 		}
----+ 		std::string line;
----+ 		int64_t* ptr = (int64_t*) pars;
----+-		std::cout << "trying to read parameters " << filename << std::endl;
----+ 		while(std::getline(input, line)) {
----+ 			std::stringstream line_stream(line);
----+ 			std::string key;
----+@@ -50,14 +48,11 @@ bool parameterReader::readParameters(preParameters* pars, std::string filename){
----+ 			auto pair = parameterFields.find(key);
----+ 
----+ 			if(pair != parameterFields.end()) {
----+-				std::cout << "Key found" << std::endl;
----+-				std::cout << pair->first << std::endl;
----+-				std::cout << pair->second << std::endl;
----+ 				int64_t value;
----+ 				line_stream >> value;
----+ 				*(ptr+pair->second) = value;
----+ 			} else {
----+-				std::cout << "Key not found" << std::endl;
---- +
----+ 			}
----  
----- uint64_t getRandUint64();
----- void debug_incremental_calculations(const chessPosition* position);
-----diff --git a/Cpp/src/lib/moveMaking/undoMove.cpp b/Cpp/src/lib/moveMaking/undoMove.cpp
-----index 27f14bf..ce7a824 100644
-------- a/Cpp/src/lib/moveMaking/undoMove.cpp
-----+++ b/Cpp/src/lib/moveMaking/undoMove.cpp
-----@@ -116,6 +116,17 @@ void undoMove(chessPosition* position) {
----- 		std::cout << "Nothing to undo" << std::endl;
----- 		return;
----- 	}
-----+
-----+	/*if(repetitionData[position->zobristHash & 16383] == 0){
-----+		std::cout << position->madeMoves.length << std::endl;
-----+		std::cout << chessPositionToOutputString(*position) << std::endl;
-----+		std::cout << chessPositionToFenString(*position, false) << std::endl;
-----+		for(uint16_t ind=0; ind < position->madeMoves.length; ind++) {
-----+			std::cout << position->madeMoves[ind].sourceField << " " << position->madeMoves[ind].targetField << std::endl;
-----+		}
-----+		std::cout << "WTF" << std::endl;
-----+	}*/
-----+
----- 	assert(repetitionData[position->zobristHash & 16383] != 0);
----- 	repetitionData[position->zobristHash & 16383]--;
----- 	chessMove move = position->madeMoves.pop();
-----diff --git a/Cpp/src/tests/perftTests.cpp b/Cpp/src/tests/perftTests.cpp
-----index 416c221..8fa7bfa 100644
-------- a/Cpp/src/tests/perftTests.cpp
-----+++ b/Cpp/src/tests/perftTests.cpp
-----@@ -24,7 +24,7 @@ uint64_t perftNodes(chessPosition* position, uint16_t depth){
----- 	uint64_t nodes = 0;
----- 	vdt_vector<chessMove> moves = vdt_vector<chessMove>(150);
----- 	generateAllMoves(&moves, position);
------	orderStandardMoves(position, &moves, 0, 0);
-----+	orderStandardMoves(position, &moves, 0, 0, NO_REFUTATION);
----- 	std::sort(moves.data, moves.data+moves.length);
----- 	bool isMate = true;
----- 	for(uint16_t ind=0; ind < moves.length; ind++){
----+ 		}
---- diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
-----index 4069970..5217532 100644
----+index ab5c564..589257e 100644
---- --- a/Cpp/src/userInterface/UIfunctions.cpp
---- +++ b/Cpp/src/userInterface/UIfunctions.cpp
-----@@ -53,6 +53,8 @@ uint64_t runSinglePositionPerformanceTest(std::string position, uint16_t depth,
----- 	int16_t alpha = -32000;
----- 	int16_t beta  = 32000;
----- 	int32_t searchdepth = 3;
-----+	uint64_t start_ts = get_timestamp();
-----+	setTotalTime(100000000, start_ts);
----- 	while(searchdepth <= depth && (searchdepth < 14)) {
----- 
----- 		bool succeeded = false;
-----@@ -632,7 +634,7 @@ bool checkAndMakeMove(chessPosition& position, std::string move){
----- 	vdt_vector<chessMove> moves = vdt_vector<chessMove>(100);
----- 		uint64_t mv = stringToMove(move);
----- 		generateAllMoves(&moves, &position);
------		orderStandardMoves(&position, &moves, 0, 0);
-----+		orderStandardMoves(&position, &moves, 0, 0, NO_REFUTATION);
----- 		std::sort(moves.data, moves.data+moves.length);
----- 		bool found = false;
----- 		chessMove m;
----+@@ -20,6 +20,8 @@
----+ #include <lib/moveGeneration/moveGeneration.hpp>
----+ #include <algorithm>
----+ #include <lib/Evaluation/evaluation.hpp>
----++#include <atomic>
----++
----+ static char figureNames[2][6] = {{'P', 'N', 'B', 'R', 'Q', 'K'},
----+ 		{'p', 'n', 'b', 'r', 'q', 'k'},
----+ };
----+@@ -702,8 +704,10 @@ bool checkAndMakeMove(chessPosition& position, std::string move){
----+ 		moves.free_array();
----+ 		return found;
----+ }
----++extern std::atomic<bool> continueSearch;
----+ 
----+ void runPerformanceTests(){
----++	continueSearch = true;
----+ 	for(int depth = 3; depth < 11; depth++){
----+ 		std::ifstream file;
----+ 		file.open("chesspositionsfixed.txt");
---- diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
-----index c2b6c49..153d6b8 100644
----+index 2fdc19d..4e3b16f 100644
---- --- a/Cpp/src/userInterface/UImainLoop.cpp
---- +++ b/Cpp/src/userInterface/UImainLoop.cpp
-----@@ -25,7 +25,7 @@ extern uint16_t killerMoves[20][2];
----- //#define UCI
----- 
----- 
------bool decideSearchFurther(searchParameters params, uint64_t start_ts, uint64_t searchedNodes, uint16_t depth, playerColor toMove, uint16_t numMadeMoves) {
-----+uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t numMadeMoves, uint32_t* worst_case_time) {
----+@@ -27,6 +27,7 @@
----+ #include <atomic>
----+ #include <thread>
----+ #include "mingw.thread.h"
----++#include <tests/tests.hpp>
----+ 
----+ extern uint8_t searchId;
----+ extern uint16_t killerMoves[20][2];
----+@@ -64,6 +65,11 @@ uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t n
----+ 		return UINT32_MAX;
----+ 	}
----  
----++	if(params.type == fixed_depth) {
----++		*worst_case_time = UINT32_MAX;
----++		return UINT32_MAX;
----++	}
----++
----  	/*if(depth < 7){
----  		return true;
-----@@ -49,24 +49,14 @@ bool decideSearchFurther(searchParameters params, uint64_t start_ts, uint64_t se
----- 		std::cout << completeExpectedTime << std::endl;
----- 		float timeAllotted = completeExpectedTime/(2.0*remainingMoves);
----- 
------		if(timeAllotted > total/20.0){
------			timeAllotted = total/20.0;
-----+		if(timeAllotted > total/10.0){
-----+			timeAllotted = total/10.0;
----- 		}
------		std::cout << timeAllotted << std::endl;
------		uint64_t now = get_timestamp();
------
------		if(now-start_ts < timeAllotted) {
------			return true;
------		}
------
------		return false;
------
-----+		*worst_case_time = total/10.0;
-----+		return timeAllotted;
----- 	}
----- 
------
------	return false;
------
------
-----+	return 100; //some default
----- }
----+ 	} else {
----+@@ -106,12 +112,16 @@ void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth,
----  
----+ bool checkContinue(searchParameters params, uint16_t depth, uint16_t passedTime, uint16_t allottedTime) {
----  
-----@@ -85,21 +75,35 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----- 	uint64_t searchedNodes = 0;
----- #ifdef FIXEDDEPTH
----- 	uint16_t maxdepth = 7;
------	while(depth < maxdepth){ //hacked to get repeatable results - there is a major bug hiding somewhere
-----+	setTotalTime(100000000, start_ts);
-----+	while(depth < maxdepth){
----- #else
-----+	uint32_t worst_case_search_time = 0;
-----+	uint32_t totalTime = calcSearchTime(params, position->toMove, position->madeMoves.length, &worst_case_search_time);
-----+	setTotalTime(worst_case_search_time, start_ts);
-----+	uint16_t madeMoves = position->madeMoves.length;
-----+
----- 	//uint64_t goalNodes = 1800*maximal_time;
------	while(decideSearchFurther(params, start_ts, searchedNodes, depth, position->toMove, position->madeMoves.length)) {
-----+	while(get_timestamp()-start_ts <= totalTime) {
----- #endif
------		*eval = negamax(position, 0, depth+3, depth, alpha, beta, bestMove, true, false);
-----+		try{
-----+			chessMove localBestMove;
-----+			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
----++	if(depth > 27) {
----++		return false;
----++	}
---- +
-----+			if(doAspiration) {
-----+				if ((*eval <= alpha) || (*eval >= beta)) {
-----+					//std::cout << "Aspiration window search failed, researching..." <<std::endl;
-----+					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &localBestMove, true, false);
-----+				}
----+ 	if(params.type == infinite) {
----+ 		return true;
----+ 	}
----  
------		if(doAspiration) {
------			if ((*eval <= alpha) || (*eval >= beta)) {
------				//std::cout << "Aspiration window search failed, researching..." <<std::endl;
------				*eval = negamax(position, 0, depth+3, depth, -32000, 32000, bestMove, true, false);
-----+				alpha = *eval-50;
-----+				beta  = *eval+50;
----- 			}
----+ 	if(params.type == fixed_depth) {
----+-		return (params.depth <= depth) && (depth > 3);
----++		return (params.depth >= depth) || (depth <= 3);
----+ 	}
----  
------			alpha = *eval-50;
------			beta  = *eval+50;
-----+			*bestMove = localBestMove;
-----+		} catch(timeoutException e) {
-----+			std::cout << "Search timed out" << std::endl;
-----+			break;
----- 		}
----+ 	if(params.type == time_until_move) {
----+@@ -142,11 +152,12 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* node
----+ 	uint16_t madeMoves = position->madeMoves.length;
----+ 	while(checkContinue(params, depth, get_timestamp()-start_ts, totalTime)) {
----+ 		try{
----++			//std::cout << "Depth " << depth << std::endl;
----+ 			chessMove localBestMove;
----+ 			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
----+ 			if(doAspiration) {
----+ 				if ((*eval <= alpha) || (*eval >= beta)) {
----+-					//std::cout << "Aspiration window search failed, researching..." <<std::endl;
----++					std::cout << "Aspiration window search failed, researching..." <<std::endl;
----+ 					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &localBestMove, true, false);
----+ 				}
----  
----- 		//std::cout << depth <<std::endl;
-----@@ -158,7 +162,20 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----- 	//std::cout << "Depth searched " << depth << std::endl;
----- 	*mtime = get_timestamp()-start_ts;
----+@@ -204,7 +215,7 @@ void search(chessPosition p, searchParameters params){
----+ 	uint32_t nodeCount = 0;
----+ 	uint64_t mtime = 0;
----+ 	int32_t eval = 0;
----+-	searchMove(&p, &bestMove,&nodeCount, &mtime, &eval, true, params);
----++	searchMove(&p, &bestMove,&nodeCount, &mtime, &eval, false, params);
----+ 	std::cout << "bestmove " << moveToString(bestMove, p) << std::endl;
----+ 	std::cout << "Leaving thread" <<std::endl;
----+ }
----+@@ -351,6 +362,18 @@ void handleGo(std::list<std::string> input) {
----  
-----+	//undo moves until we are back to start
-----+
-----+
-----+#ifndef FIXEDDEPTH
-----+	while(position->madeMoves.length > madeMoves){
-----+		chessMove current = position->madeMoves[position->madeMoves.length-1];
----- 
-----+		if(current.move == 0) {
-----+			undoNullMove(position);
-----+		} else {
-----+			undoMove(position);
-----+		}
-----+	}
-----+#endif
----- 	/*std::cout << "Qnodes " <<  qnodes << " normal nodes " << nodes <<std::endl;
----- 	std::cout << "Forced move " << moveToString(*bestMove, *position) << std::endl;
----- 	std::cout << "Evaluation "  << eval << std::endl;
-----@@ -204,10 +221,10 @@ void UIloop() {
----- 	UI = new networkUserInterface();
----- #endif
----- 	std::string positionstr = "RNBQKBNRPPPPPPPP00000000000000000000000000000000pppppppprnbqkbnrwKQkq";
------	//chessPosition position = stringToChessPosition(positionstr);
-----+	chessPosition position = stringToChessPosition(positionstr);
----- 	/*std::string positionstr = " ";*/
------	std::string fen = "7k/p7/1p5p/3p4/3P4/P5np/1P2R1rK/8 w - - 0";
------	chessPosition position = FENtoChessPosition(fen);
-----+	/*std::string fen = "7k/p7/1p5p/3p4/3P4/P5np/1P2R1rK/8 w - - 0";
-----+	chessPosition position = FENtoChessPosition(fen);*/
----- 
----- 	/*chessMove mv;
----- 	mv.sourceField = 29;
-----@@ -295,7 +312,21 @@ void UIloop() {
----- 			uint64_t mtime;
----- 			int32_t eval = 0;
----- 			searchMove(&position, &bestMove, 4000, &nodeCount, &mtime, &eval, true, params);
-----+			std::cout << "Found move " << moveToString(bestMove, position) << std::endl;
----- 			UI->sendBestMove(moveToString(bestMove, position));
-----+			makeMove(&bestMove, &position);
-----+			int16_t e  = evaluation(&position, -32000, 32000);
-----+			evaluationResult res = getEvaluationResult();
-----+			std::cout << "Eval " << e << std::endl;
-----+			std::cout << "PSQ " << res.PSQ << std::endl;
-----+			std::cout << "mobility " << res.mobility << std::endl;
-----+			std::cout << "static pawn " << res.staticPawn << std::endl;
-----+			std::cout << "passed pawn " << res.passedPawn << std::endl;
-----+			std::cout << "rook files "  << res.rookOpenFiles << std::endl;
-----+			std::cout << "king safety " << res.kingSafety << std::endl;
-----+			std::cout << "bishop pair" << res.bishoppair << std::endl;
-----+			undoMove(&position);
-----+
----- 		}
----- 	}
----  }
-----diff --git a/Cpp/src/userInterface/uciInterface.cpp b/Cpp/src/userInterface/uciInterface.cpp
-----index f6a7380..3b27f0c 100644
-------- a/Cpp/src/userInterface/uciInterface.cpp
-----+++ b/Cpp/src/userInterface/uciInterface.cpp
-----@@ -65,6 +65,17 @@ inputMessage positionInput;
----- inputMessage goInput;
----- inputMessage positionRequest;
----- 
-----+bool handleReady() {
-----+	if(readyInput.valid ){
-----+		readyInput.valid = false;
-----+		std::cout << "readyok" << std::endl;
-----+		return true;
-----+	}
----+ 
----++void handlePerft(std::list<std::string> input){
---- +
-----+	return false;
----++		auto iterator = input.begin();
---- +
----++		if(iterator != input.end()) {
----++			uint16_t depth = StringToNumber<int32_t>(*iterator);
----++			uint32_t perftret = perftNodes(&cposition, depth);
----++			std::cout << "Perft result " << perftret << std::endl;
----++
----++		}
---- +}
---- +
----- void uciInterface::readInput(){
----- 	std::string next = readLine();
----- 	uint16_t pos=next.find(' ',0);
-----@@ -95,19 +106,18 @@ void uciInterface::readInput(){
----- 		positionRequest.valid = true;
----- 	}
----  
------}
------
------bool handleReady() {
------	if(readyInput.valid ){
------		readyInput.valid = false;
------		std::cout << "readyok" << std::endl;
------		return true;
-----+	handleReady();
-----+	if(uciInput.valid){
-----+		std::cout << "id name vabi" << std::endl;
-----+		std::cout << "id author Fabian" << std::endl;
-----+		std::cout << "uciok" << std::endl;
-----+		uciInput.valid = false;
----- 	}
----+ void handlePosition(std::list<std::string> input) {
----+ 
----+@@ -365,10 +388,17 @@ void handlePosition(std::list<std::string> input) {
----+ 		fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
----+ 		iterator++;
----+ 	} else {
----++		if(*iterator != "fen") {
----++			std::cout << "Invalid position request" << std::endl;
----++			return;
----++		}
----++		iterator++;
----+ 		fen = *iterator;
----+ 		iterator++;
----+ 		while((iterator != input.end()) && ("moves" != *iterator)) {
----++			if("fen" != *iterator) {
----+ 			fen = fen+" "+*iterator;
----++			}
----+ 			iterator++;
----+ 		}
----+ 
----+@@ -401,6 +431,21 @@ void handlePosition(std::list<std::string> input) {
----  
------	return false;
------
----  }
----  
----++void handleEval() {
----++	int32_t eval = evaluation(&cposition, -32000, 32000);
----++	evaluationResult res = getEvaluationResult();
----++	std::cout << "Total " << eval;
----++	std::cout << " Material " << cposition.figureEval;
----++	std::cout << " PSQ " << res.PSQ-cposition.figureEval;
----++	std::cout << " King safety " <<  res.kingSafety;
----++	std::cout << " Mobility " << res.mobility;
----++	std::cout << " Pawns " << res.staticPawn;
----++	std::cout << " Passed pawns " << res.passedPawn;
----++	std::cout << " rook open files " << res.rookOpenFiles;
----++	std::cout << " bishoppair " << res.bishoppair;
----++	std::cout << std::endl;
----++}
---- +
-----+
----- void uciInterface::initialize(){
----- 	debugLog.open("/home/vabi/debug.txt");
----- 	uciInput.valid = false;
-----@@ -115,7 +125,7 @@ void uciInterface::initialize(){
----- 	positionInput.valid = false;
----- 	goInput.valid = false;
----- 
------	while(1){
-----+	/*while(1){
----- 		readInput();
----- 
----- 		if(uciInput.valid){
-----@@ -128,7 +138,7 @@ void uciInterface::initialize(){
----- 		if(handleReady()){
----- 			break;
----+ void UIloop() {
----+ 	initUserEvents();
----+ 	bool continueLoop = true;
----+@@ -424,8 +469,15 @@ void UIloop() {
----+ 				handleStop();
----+ 				break;
----+ 			case quit:
----++				handleStop();
----+ 				continueLoop = false;
----+ 				break;
----++			case perft:
----++				handlePerft(ev.data);
----++				break;
----++			case eval:
----++				handleEval();
----++				break;
----+ 			default:
----+ 				std::cout << "Not yet implemented" << std::endl;
----  		}
------	}
-----+	}*/
----- 
----+diff --git a/Cpp/src/userInterface/uciInputHandler.cpp b/Cpp/src/userInterface/uciInputHandler.cpp
----+index 32fb25c..6eb516d 100644
----+--- a/Cpp/src/userInterface/uciInputHandler.cpp
----++++ b/Cpp/src/userInterface/uciInputHandler.cpp
----+@@ -43,6 +43,8 @@ void initUserEvents() {
----+ 	userEventList["stop"] 				= stop;
----+ 	userEventList["ponderhit"] 			= ponderhit;
----+ 	userEventList["quit"] 				= quit;
----++	userEventList["perft"] 				= perft;
----++	userEventList["eval"] 				= eval;
----  }
----  
----+ userEvent getNextUserEvent() {
----+diff --git a/Cpp/src/userInterface/userEvents.hpp b/Cpp/src/userInterface/userEvents.hpp
----+index 18da836..ecec831 100644
----+--- a/Cpp/src/userInterface/userEvents.hpp
----++++ b/Cpp/src/userInterface/userEvents.hpp
----+@@ -10,7 +10,7 @@
----+ #include <string>
----+ #include <list>
----+ 
----+-enum uciInput {invalid, uci, debug, isready, setoption, ucinewgame, position, go, stop, ponderhit, quit};
----++enum uciInput {invalid, uci, debug, isready, setoption, ucinewgame, position, go, stop, ponderhit, quit, perft, eval};
----+ 
----+ struct userEvent {
----+ public:
---- diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
-----index a30e8e7..338d788 100644
----+index d1535d1..dfb428d 100644
---- --- a/chessGui/.idea/workspace.xml
---- +++ b/chessGui/.idea/workspace.xml
-----@@ -67,11 +67,7 @@
----+@@ -72,8 +72,8 @@
----+       <file leaf-file-name="uciEngineHandler.java" pinned="false" current-in-tab="false">
----+         <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
----            <provider selected="true" editor-type-id="text-editor">
-----             <state relative-caret-position="1035">
-----               <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
------              <folding>
------                <element signature="imports" expanded="false" />
------                <element signature="e#1121#1122#0" expanded="false" />
------                <element signature="e#1168#1169#0" expanded="false" />
------              </folding>
-----+              <folding />
----+-            <state relative-caret-position="330">
----+-              <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
----++            <state relative-caret-position="299">
----++              <caret line="79" column="23" selection-start-line="79" selection-start-column="23" selection-end-line="79" selection-end-column="23" />
----+               <folding />
----              </state>
----            </provider>
-----         </entry>
-----@@ -81,21 +77,7 @@
----+@@ -82,8 +82,8 @@
----+       <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
----+         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----            <provider selected="true" editor-type-id="text-editor">
-----             <state relative-caret-position="1290">
-----               <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
------              <folding>
------                <element signature="imports" expanded="false" />
------                <element signature="e#1047#1048#0" expanded="false" />
------                <element signature="e#1117#1118#0" expanded="false" />
------                <element signature="e#1165#1166#0" expanded="false" />
------                <element signature="e#1229#1230#0" expanded="false" />
------                <element signature="e#1540#1541#0" expanded="false" />
------                <element signature="e#1607#1608#0" expanded="false" />
------                <element signature="e#3451#3452#0" expanded="false" />
------                <element signature="e#3517#3518#0" expanded="false" />
------                <element signature="e#6836#6837#0" expanded="false" />
------                <element signature="e#6888#6889#0" expanded="false" />
------                <element signature="e#7967#7968#0" expanded="false" />
------                <element signature="e#8015#8016#0" expanded="false" />
------              </folding>
-----+              <folding />
----+-            <state relative-caret-position="1230">
----+-              <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
----++            <state relative-caret-position="501">
----++              <caret line="109" column="44" selection-start-line="109" selection-start-column="33" selection-end-line="109" selection-end-column="44" />
----+               <folding />
----              </state>
----            </provider>
-----         </entry>
-----@@ -113,8 +95,8 @@
----+@@ -102,8 +102,8 @@
----        <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
----          <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----            <provider selected="true" editor-type-id="text-editor">
------            <state relative-caret-position="555">
------              <caret line="50" column="35" selection-start-line="50" selection-start-column="35" selection-end-line="50" selection-end-column="35" />
-----+            <state relative-caret-position="435">
-----+              <caret line="42" column="8" selection-start-line="42" selection-start-column="8" selection-end-line="42" selection-end-column="8" />
----+-            <state relative-caret-position="870">
----+-              <caret line="74" column="17" selection-start-line="74" selection-start-column="17" selection-end-line="74" selection-end-column="17" />
----++            <state relative-caret-position="660">
----++              <caret line="60" column="30" selection-start-line="60" selection-start-column="30" selection-end-line="60" selection-end-column="30" />
----                <folding />
----              </state>
----            </provider>
-----@@ -125,11 +107,7 @@
-----           <provider selected="true" editor-type-id="text-editor">
-----             <state relative-caret-position="2310">
-----               <caret line="164" column="59" selection-start-line="164" selection-start-column="59" selection-end-line="164" selection-end-column="59" />
------              <folding>
------                <element signature="imports" expanded="false" />
------                <element signature="e#5460#5461#0" expanded="false" />
------                <element signature="e#5486#5487#0" expanded="false" />
------              </folding>
-----+              <folding />
-----             </state>
-----           </provider>
-----         </entry>
-----@@ -139,11 +117,7 @@
-----           <provider selected="true" editor-type-id="text-editor">
-----             <state relative-caret-position="855">
-----               <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
------              <folding>
------                <element signature="imports" expanded="false" />
------                <element signature="e#2569#2570#0" expanded="false" />
------                <element signature="e#2602#2603#0" expanded="false" />
------              </folding>
-----+              <folding />
-----             </state>
-----           </provider>
-----         </entry>
-----@@ -163,9 +137,7 @@
-----           <provider selected="true" editor-type-id="text-editor">
-----             <state relative-caret-position="240">
-----               <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
------              <folding>
------                <element signature="imports" expanded="false" />
------              </folding>
-----+              <folding />
-----             </state>
-----           </provider>
-----         </entry>
-----@@ -185,16 +157,7 @@
----+@@ -113,7 +113,7 @@
----+         <entry file="file://$PROJECT_DIR$/params2/params.txt">
----            <provider selected="true" editor-type-id="text-editor">
-----             <state relative-caret-position="180">
-----               <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
------              <folding>
------                <element signature="e#492#493#0" expanded="false" />
------                <element signature="e#531#532#0" expanded="false" />
------                <element signature="e#575#576#0" expanded="false" />
------                <element signature="e#618#619#0" expanded="false" />
------                <element signature="e#677#678#0" expanded="false" />
------                <element signature="e#713#714#0" expanded="false" />
------                <element signature="e#773#774#0" expanded="false" />
------                <element signature="e#819#820#0" expanded="false" />
------              </folding>
-----+              <folding />
----+             <state relative-caret-position="0">
----+-              <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
----++              <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
----+               <folding />
----              </state>
----            </provider>
-----         </entry>
-----@@ -272,6 +235,7 @@
-----   </component>
-----   <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
-----   <component name="ProjectFrameBounds">
-----+    <option name="x" value="1920" />
-----     <option name="y" value="24" />
-----     <option name="width" value="1920" />
-----     <option name="height" value="1056" />
-----@@ -306,9 +270,8 @@
----+@@ -184,10 +184,10 @@
----+         <option value="$PROJECT_DIR$/src/core/events/EvalDebugEvent.java" />
----+         <option value="$PROJECT_DIR$/src/core/Core.java" />
----+         <option value="$PROJECT_DIR$/src/PlayingGUI/PlayingController.java" />
----+-        <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
----+-        <option value="$PROJECT_DIR$/params2/params.txt" />
----+         <option value="$PROJECT_DIR$/params1/params.txt" />
----+         <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
----++        <option value="$PROJECT_DIR$/params2/params.txt" />
----++        <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
----+         <option value="$PROJECT_DIR$/src/sample/Main.java" />
----+       </list>
----+     </option>
----+@@ -235,6 +235,7 @@
----        <foldersAlwaysOnTop value="true" />
----      </navigator>
----      <panes>
------      <pane id="Scope" />
------      <pane id="PackagesPane" />
-----       <pane id="Scratches" />
---- +      <pane id="Scope" />
----        <pane id="ProjectPane">
----          <subPane>
----            <PATH>
-----@@ -361,6 +324,7 @@
----+@@ -253,71 +254,10 @@
----+               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+             </PATH_ELEMENT>
----            </PATH>
----+-          <PATH>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="src" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-          </PATH>
----+-          <PATH>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="src" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="uciClient" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-          </PATH>
----+-          <PATH>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="params2" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-          </PATH>
----+-          <PATH>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="chessGui" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-            <PATH_ELEMENT>
----+-              <option name="myItemId" value="params1" />
----+-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
----+-            </PATH_ELEMENT>
----+-          </PATH>
----          </subPane>
----        </pane>
-----+      <pane id="PackagesPane" />
----+       <pane id="Scratches" />
----+       <pane id="PackagesPane" />
----+-      <pane id="Scope" />
----      </panes>
----    </component>
----    <component name="PropertiesComponent">
-----@@ -637,7 +601,7 @@
----+@@ -598,8 +538,8 @@
----      <option name="totallyTimeSpent" value="1302000" />
----    </component>
----    <component name="ToolWindowManager">
------    <frame x="0" y="24" width="1920" height="1056" extended-state="7" />
-----+    <frame x="1920" y="24" width="1920" height="1056" extended-state="7" />
-----     <editor active="false" />
----+-    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
----+-    <editor active="false" />
----++    <frame x="0" y="24" width="1920" height="1056" extended-state="7" />
----++    <editor active="true" />
----      <layout>
----        <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-----@@ -647,10 +611,10 @@
-----       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
----+       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
----+@@ -608,10 +548,11 @@
----+       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.060020346" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
----        <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
----        <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
------      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-----+      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----+-      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----++      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32756868" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----        <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
----        <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
------      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
-----+      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
----+       <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
----++      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----        <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----        <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----        <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
-----@@ -979,21 +943,7 @@
-----       <provider selected="true" editor-type-id="text-editor">
-----         <state relative-caret-position="1290">
-----           <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
------          <folding>
------            <element signature="imports" expanded="false" />
------            <element signature="e#1047#1048#0" expanded="false" />
------            <element signature="e#1117#1118#0" expanded="false" />
------            <element signature="e#1165#1166#0" expanded="false" />
------            <element signature="e#1229#1230#0" expanded="false" />
------            <element signature="e#1540#1541#0" expanded="false" />
------            <element signature="e#1607#1608#0" expanded="false" />
------            <element signature="e#3451#3452#0" expanded="false" />
------            <element signature="e#3517#3518#0" expanded="false" />
------            <element signature="e#6836#6837#0" expanded="false" />
------            <element signature="e#6888#6889#0" expanded="false" />
------            <element signature="e#7967#7968#0" expanded="false" />
------            <element signature="e#8015#8016#0" expanded="false" />
------          </folding>
-----+          <folding />
----+@@ -628,7 +569,6 @@
----+       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
----+       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
----+       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
----+-      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----+     </layout>
----+   </component>
----+   <component name="Vcs.Log.UiProperties">
----+@@ -644,7 +584,7 @@
----+   </component>
----+   <component name="XDebuggerManager">
----+     <breakpoint-manager>
----+-      <option name="time" value="14" />
----++      <option name="time" value="17" />
----+     </breakpoint-manager>
----+     <watches-manager />
----+   </component>
----+@@ -1013,50 +953,50 @@
----          </state>
----        </provider>
----      </entry>
-----@@ -1001,11 +951,7 @@
----+-    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
----++    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----        <provider selected="true" editor-type-id="text-editor">
-----         <state relative-caret-position="1035">
-----           <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
------          <folding>
------            <element signature="imports" expanded="false" />
------            <element signature="e#1121#1122#0" expanded="false" />
------            <element signature="e#1168#1169#0" expanded="false" />
------          </folding>
-----+          <folding />
----+-        <state relative-caret-position="195">
----+-          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
----++        <state relative-caret-position="501">
----++          <caret line="109" column="44" selection-start-line="109" selection-start-column="33" selection-end-line="109" selection-end-column="44" />
----+           <folding />
----          </state>
----        </provider>
----      </entry>
-----@@ -1019,8 +965,8 @@
-----     </entry>
-----     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----+-    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----++    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
----        <provider selected="true" editor-type-id="text-editor">
------        <state relative-caret-position="555">
------          <caret line="50" column="35" selection-start-line="50" selection-start-column="35" selection-end-line="50" selection-end-column="35" />
-----+        <state relative-caret-position="435">
-----+          <caret line="42" column="8" selection-start-line="42" selection-start-column="8" selection-end-line="42" selection-end-column="8" />
----+-        <state relative-caret-position="1230">
----+-          <caret line="93" column="51" selection-start-line="93" selection-start-column="35" selection-end-line="93" selection-end-column="51" />
----++        <state relative-caret-position="195">
----++          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
----            <folding />
----          </state>
----        </provider>
-----@@ -1029,11 +975,7 @@
----+     </entry>
----+     <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
----        <provider selected="true" editor-type-id="text-editor">
-----         <state relative-caret-position="2310">
-----           <caret line="164" column="59" selection-start-line="164" selection-start-column="59" selection-end-line="164" selection-end-column="59" />
------          <folding>
------            <element signature="imports" expanded="false" />
------            <element signature="e#5460#5461#0" expanded="false" />
------            <element signature="e#5486#5487#0" expanded="false" />
------          </folding>
-----+          <folding />
----+-        <state relative-caret-position="330">
----+-          <caret line="23" column="11" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="11" />
----++        <state relative-caret-position="299">
----++          <caret line="79" column="23" selection-start-line="79" selection-start-column="23" selection-end-line="79" selection-end-column="23" />
----+           <folding />
----          </state>
----        </provider>
----      </entry>
-----@@ -1041,11 +983,7 @@
----+-    <entry file="file://$PROJECT_DIR$/params1/params.txt">
----++    <entry file="file://$PROJECT_DIR$/params2/params.txt">
----        <provider selected="true" editor-type-id="text-editor">
-----         <state relative-caret-position="855">
-----           <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
------          <folding>
------            <element signature="imports" expanded="false" />
------            <element signature="e#2569#2570#0" expanded="false" />
------            <element signature="e#2602#2603#0" expanded="false" />
------          </folding>
-----+          <folding />
----+-        <state relative-caret-position="135">
----+-          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
----++        <state relative-caret-position="0">
----++          <caret line="0" column="14" selection-start-line="0" selection-start-column="14" selection-end-line="0" selection-end-column="14" />
----+           <folding />
----          </state>
----        </provider>
----      </entry>
-----@@ -1061,9 +999,7 @@
----+-    <entry file="file://$PROJECT_DIR$/params2/params.txt">
----++    <entry file="file://$PROJECT_DIR$/params1/params.txt">
----        <provider selected="true" editor-type-id="text-editor">
-----         <state relative-caret-position="240">
-----           <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
------          <folding>
------            <element signature="imports" expanded="false" />
------          </folding>
-----+          <folding />
----+-        <state relative-caret-position="0">
----+-          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
----++        <state relative-caret-position="135">
----++          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
----+           <folding />
----          </state>
----        </provider>
----      </entry>
-----@@ -1079,16 +1015,7 @@
----+     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----        <provider selected="true" editor-type-id="text-editor">
-----         <state relative-caret-position="180">
-----           <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
------          <folding>
------            <element signature="e#492#493#0" expanded="false" />
------            <element signature="e#531#532#0" expanded="false" />
------            <element signature="e#575#576#0" expanded="false" />
------            <element signature="e#618#619#0" expanded="false" />
------            <element signature="e#677#678#0" expanded="false" />
------            <element signature="e#713#714#0" expanded="false" />
------            <element signature="e#773#774#0" expanded="false" />
------            <element signature="e#819#820#0" expanded="false" />
------          </folding>
-----+          <folding />
----+-        <state relative-caret-position="870">
----+-          <caret line="74" column="17" selection-start-line="74" selection-start-column="17" selection-end-line="74" selection-end-column="17" />
----++        <state relative-caret-position="660">
----++          <caret line="60" column="30" selection-start-line="60" selection-start-column="30" selection-end-line="60" selection-end-column="30" />
----+           <folding />
----          </state>
----        </provider>
-----     </entry>
-----diff --git a/output b/output
-----deleted file mode 100644
-----index e69de29..0000000
-----diff --git a/to_old.diff b/to_old.diff
-----index 3ff35b0..30be9ec 100644
-------- a/to_old.diff
-----+++ b/to_old.diff
-----@@ -1,543 +0,0 @@
------diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
------index 5490276..01b044f 100644
--------- a/Cpp/src/lib/Defines/pieceTables.cpp
------+++ b/Cpp/src/lib/Defines/pieceTables.cpp
------@@ -125,10 +125,10 @@ int16_t pieceTables[7][2][64] = {
------ 		},
------ 		{
------ 				{ //white kings
-------						10,20,5,-5,-5,10,15,10,
-------						0,10,-15,-20,-20,-15,10,0,
-------						-15,-15,-20,-25,-25,-20,-15,-15,
-------						-20,-30,-40,-50,-50,-40,-30,-20,
------+						20,30,0,-15,-15,0,30,20,
------+						0,10,-15,-30,-30,-15,10,0,
------+						-25,-25,-30,-25,-25,-20,-15,-15,
------+						-40,-40,-40,-50,-50,-40,-40,-40,
------ 						-40,-50,-60,-70,-70,-60,-50,-40,
------ 						-50,-70,-70,-70,-70,-70,-70,-50,
------ 						-50,-70,-70,-70,-70,-70,-70,-50,
------@@ -139,10 +139,10 @@ int16_t pieceTables[7][2][64] = {
------ 						-50,-70,-70,-70,-70,-70,-70,-50,
------ 						-50,-70,-70,-70,-70,-70,-70,-50,
------ 						-40,-50,-60,-70,-70,-60,-50,-40,
-------						-20,-30,-40,-50,-50,-40,-30,-20,
-------						-15,-15,-20,-25,-25,-20,-15,-15,
-------						 0,10,-15,-20,-20,-15,10,0,
-------						 10,20,5,-5,-5,10,15,10
------+						-40,-50,-60,-70,-70,-60,-50,-40,
------+						-25,-25,-30,-25,-25,-20,-15,-15,
------+						0,10,-15,-30,-30,-15,10,0,
------+						 20,30,0,-15,-15,0,30,20,
------ 				}
----+diff --git a/chessGui/src/sample/Main.java b/chessGui/src/sample/Main.java
----+index ebf0f54..9a6fb6e 100644
----+--- a/chessGui/src/sample/Main.java
----++++ b/chessGui/src/sample/Main.java
----+@@ -59,7 +59,7 @@ public class Main extends Application {
----+        UciProcessing processesList[] = new UciProcessing[3];
----+ 
----+         for(int ind=0; ind < 3; ind++) {
----+-            processesList[ind] = new UciProcessing("/home/vabi/code/chessEngine/Cpp/uciChallengeRelease/Vabi", "params1", "/home/vabi/code/chessEngine/Cpp/uciDefenderRelease/Vabi", "params2", 10000);
----++            processesList[ind] = new UciProcessing("/home/vabi/code/chessEngine/Cpp/uciDefenderRelease/Vabi", "params1", "/home/vabi/code/chessEngine/Cpp/uciChallengeRelease/Vabi", "params2", 10000);
----+             //final Core cor = new Core(primaryStage);
----+             final int index = ind;
----+             Thread.sleep(1523);
----+diff --git a/chessGui/src/uciClient/UciProcessing.java b/chessGui/src/uciClient/UciProcessing.java
----+index 8bfb448..d706089 100644
----+--- a/chessGui/src/uciClient/UciProcessing.java
----++++ b/chessGui/src/uciClient/UciProcessing.java
----+@@ -117,7 +117,7 @@ public class UciProcessing {
----+ 
----+ 
----+                 vabiHandler.setPosition(startPos, moves);
----+-                String current = vabiHandler.getCurrentPosition();
----++
----+                /* VMPchessPosition position = new VMPchessPosition(new VDTstring(current.getBytes()));
----+                 server.send(position, 0);*/
----+                 vabiHandler.startSearch();
----+@@ -136,7 +136,7 @@ public class UciProcessing {
----+                // System.out.println(eval);
----+                 moves.add(mv[0]);
----+                 vabiHandler.setPosition(startPos, moves);
----+-                current = vabiHandler.getCurrentPosition();
----++
----+                 /*position = new VMPchessPosition(new VDTstring(current.getBytes()));
----+                 server.send(position, 0);*/
----+                 //System.out.println(mv[0]);
----+diff --git a/chessGui/src/uciClient/uciEngineHandler.java b/chessGui/src/uciClient/uciEngineHandler.java
----+index 90e8075..b74d4c3 100644
----+--- a/chessGui/src/uciClient/uciEngineHandler.java
----++++ b/chessGui/src/uciClient/uciEngineHandler.java
----+@@ -77,7 +77,7 @@ public class uciEngineHandler {
----+ 
----+ 
----+     public void startSearch() throws IOException{
----+-        put("go depth 6");
----++        put("go depth 5");
----+     }
----+ 
----+     public int readBestmove(String[] in) throws IOException {
----+diff --git a/to_checkin.diff b/to_checkin.diff
----+index 8ee8277..57e0281 100644
----+--- a/to_checkin.diff
----++++ b/to_checkin.diff
----+@@ -1,1361 +1,1738 @@
----+-diff --git a/Cpp/.cproject b/Cpp/.cproject
----+-index 2efc1dd..c4592e1 100644
----+---- a/Cpp/.cproject
----+-+++ b/Cpp/.cproject
----+-@@ -41,6 +41,9 @@
----+- 							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.debug.169184492" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.debug"/>
----+- 							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug.404430608" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug">
----+- 								<option id="gnu.cpp.link.option.debugging.gprof.1616037315" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----+-+								<option id="gnu.cpp.link.option.libs.1848616475" superClass="gnu.cpp.link.option.libs" useByScannerDiscovery="false" valueType="libs">
----+-+									<listOptionValue builtIn="false" value="pthread"/>
----+-+								</option>
----+- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.624604855" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
----+- 									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
----+- 									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
----+-@@ -88,7 +91,7 @@
----+- 								<option id="gnu.cpp.compiler.option.warnings.toerrors.1369119801" name="Warnings as errors (-Werror)" superClass="gnu.cpp.compiler.option.warnings.toerrors" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----+- 								<option id="gnu.cpp.compiler.option.other.other.1052557102" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
----+- 								<option id="gnu.cpp.compiler.option.optimization.flags.1382838263" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
----+--								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1780748801" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----+-+								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1780748801" name="Extra warnings (-Wextra)" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----+- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.1496015459" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----+- 							</tool>
----+- 							<tool command="gcc" id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.1303530301" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
----+-diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
----+-index d2406d5..b93c9c7 100644
----+---- a/Cpp/src/userInterface/UImainLoop.cpp
----+-+++ b/Cpp/src/userInterface/UImainLoop.cpp
----+-@@ -18,301 +18,277 @@
----+- #include <userInterface/interfaceStructs.hpp>
----+- #include <lib/moveGeneration/moveGeneration.hpp>
----+- #include <logging/logger.hpp>
----+--userInterface* UI;
----+-+#include <iostream>
----+-+#include "userEvents.hpp"
----+-+#include <sstream>
----+-+#include <vector>
----+-+#include <list>
----+-+#include <map>
----+-+#include <atomic>
----+-+#include <thread>
----+-+
----+-+void handleUciInput(std::ostream& stream) {
----+-+	stream << "id name Vabi" << std::endl;
----+-+	stream << "id author Fabian Lenhardt" << std::endl;
----+-+	stream << "uciok" << std::endl;
----+-+}
---- - 
------ 		},
------diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
------index 1aa63f9..5dad464 100644
--------- a/chessGui/.idea/workspace.xml
------+++ b/chessGui/.idea/workspace.xml
------@@ -95,7 +95,7 @@
------       <file leaf-file-name="Main.java" pinned="false" current-in-tab="false">
------         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
------           <provider selected="true" editor-type-id="text-editor">
-------            <state relative-caret-position="254">
------+            <state relative-caret-position="510">
------               <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
------               <folding />
------             </state>
------@@ -105,7 +105,7 @@
------       <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="true">
------         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
------           <provider selected="true" editor-type-id="text-editor">
-------            <state relative-caret-position="393">
------+            <state relative-caret-position="764">
------               <caret line="164" column="59" selection-start-line="164" selection-start-column="59" selection-end-line="164" selection-end-column="59" />
------               <folding />
------             </state>
------@@ -270,6 +270,7 @@
------     </navigator>
------     <panes>
------       <pane id="PackagesPane" />
------+      <pane id="Scratches" />
------       <pane id="Scope" />
------       <pane id="ProjectPane">
------         <subPane>
------@@ -323,7 +324,6 @@
------           </PATH>
------         </subPane>
------       </pane>
-------      <pane id="Scratches" />
------     </panes>
------   </component>
------   <component name="PropertiesComponent">
------@@ -601,24 +601,21 @@
------   </component>
------   <component name="ToolWindowManager">
------     <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
-------    <editor active="true" />
------+    <editor active="false" />
------     <layout>
------       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
------       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
-------      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
------       <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
------       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
------       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
------       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
-------      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
------       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
------       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-------      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
------+      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
------       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
------       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
------       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
------       <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-------      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
------       <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
------       <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
------       <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
------@@ -626,8 +623,11 @@
------       <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
------       <window_info id="Profiler" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
------       <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
------+      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
------       <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
------+      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
------       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
------+      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
------       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
------       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
------       <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
------@@ -877,14 +877,14 @@
------       </provider>
------     </entry>
------     <entry file="file://$PROJECT_DIR$/src/EditorGUI/editorgui.fxml">
------+      <provider editor-type-id="JavaFX-Scene-Builder">
------+        <state />
------+      </provider>
------       <provider selected="true" editor-type-id="text-editor">
------         <state relative-caret-position="270">
------           <caret line="18" column="28" selection-start-line="18" selection-start-column="28" selection-end-line="18" selection-end-column="28" />
------         </state>
------       </provider>
-------      <provider editor-type-id="JavaFX-Scene-Builder">
-------        <state />
-------      </provider>
------     </entry>
------     <entry file="file://$PROJECT_DIR$/src/EditorGUI/EditorGUI.java">
------       <provider selected="true" editor-type-id="text-editor">
------@@ -929,14 +929,14 @@
------       </provider>
------     </entry>
------     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/playinggui.fxml">
------+      <provider editor-type-id="JavaFX-Scene-Builder">
------+        <state />
------+      </provider>
------       <provider selected="true" editor-type-id="text-editor">
------         <state relative-caret-position="679">
------           <caret line="59" column="90" selection-start-line="59" selection-start-column="90" selection-end-line="59" selection-end-column="90" />
------         </state>
------       </provider>
-------      <provider editor-type-id="JavaFX-Scene-Builder">
-------        <state />
-------      </provider>
------     </entry>
------     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingController.java">
------       <provider selected="true" editor-type-id="text-editor">
------@@ -1004,7 +1004,7 @@
------     </entry>
------     <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
------       <provider selected="true" editor-type-id="text-editor">
-------        <state relative-caret-position="254">
------+        <state relative-caret-position="510">
------           <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
------           <folding />
------         </state>
------@@ -1012,7 +1012,7 @@
------     </entry>
------     <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
------       <provider selected="true" editor-type-id="text-editor">
-------        <state relative-caret-position="393">
------+        <state relative-caret-position="764">
------           <caret line="164" column="59" selection-start-line="164" selection-start-column="59" selection-end-line="164" selection-end-column="59" />
------           <folding />
------         </state>
------diff --git a/output b/output
------deleted file mode 100644
------index e69de29..0000000
------diff --git a/to_old.diff b/to_old.diff
------index 2634517..0fc4fe7 100644
--------- a/to_old.diff
------+++ b/to_old.diff
------@@ -1,370 +0,0 @@
-------diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
-------index ee4381a..7de96b7 100644
---------- a/Cpp/src/Search/moveOrdering.cpp
-------+++ b/Cpp/src/Search/moveOrdering.cpp
-------@@ -222,15 +222,15 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
------- 	mv->sortEval = sortEval;
------- }
------- 
--------bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t depth, uint16_t hashedMove) {
-------+bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove) {
------- 
------- 	AttackTable opponentAttackTable = makeAttackTable(position, (playerColor) (1-position->toMove));
------- 	AttackTable ownAttackTable 		= makeAttackTable(position, position->toMove);
------- 	bool isInCheck      = ((opponentAttackTable.completeAttackTable & position->pieceTables[position->toMove][king]) != 0);
------- 	int16_t bestEval = INT16_MIN;
------- 	uint16_t bestIndex = 0;
--------	uint16_t killerMoveA = killerMoves[depth][0];
--------	uint16_t killerMoveB = killerMoves[depth][1];
-------+	uint16_t killerMoveA = killerMoves[ply][0];
-------+	uint16_t killerMoveB = killerMoves[ply][1];
------- 	for (uint16_t ind=0; ind < moves->length; ind++) {
------- 		calcSortEval(position, &(*moves)[ind], &opponentAttackTable, &ownAttackTable, hashedMove, killerMoveA, killerMoveB);
------- 		if((*moves)[ind].sortEval > bestEval){
----+--extern uint8_t searchId;
----+--extern uint16_t killerMoves[20][2];
----+--//#define UCI
----+-+void handleIsReady(std::ostream& stream) {
----+-+	stream << "readyok" <<std::endl;
----+-+}
----++diff --git a/Cpp/src/Search/moveOrdering.cpp b/Cpp/src/Search/moveOrdering.cpp
----++index 12fbe51..a3d58b9 100644
----++--- a/Cpp/src/Search/moveOrdering.cpp
----+++++ b/Cpp/src/Search/moveOrdering.cpp
----++@@ -147,6 +147,8 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----+  
----+-+template <typename T>
----+-+T StringToNumber ( const std::string &Text )//Text not by const reference so that the function can be used with a
----+-+{                               //character array as argument
----+-+	std::stringstream ss(Text);
----+-+	T result;
----+-+	return ss >> result ? result : 0;
----+-+}
----+- 
----+--uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t numMadeMoves, uint32_t* worst_case_time) {
----+-+enum searchType {unknown, fixed_time, time_until_move, fixed_depth, infinite};
----++ 	if(targetAttacked && mv->type == kingMove) {
----++ 		sortEval = ILLEGAL;
----+++		mv->sortEval = sortEval;
----+++		return;
----++ 	}
----+  
----+--	/*if(depth < 7){
----+--		return true;
----+--	} else {
----+--		return false;
----+--	}*/
----+--	if(params.totalTime[toMove] > 0) {
----+--		uint32_t total = params.totalTime[toMove];
----+--		uint32_t increment = params.increment[toMove];
----+--
----+--		//estimate remaining moves
----+--		uint16_t totalExpectedMoves = 1/2*numMadeMoves+60;
----+--		int16_t remainingMoves = totalExpectedMoves-numMadeMoves;
----+--
----+--		if(remainingMoves < 20){
----+--			remainingMoves = 20;
----+--		}
----+-+struct searchParameters {
----+-+	searchType type;
----+-+	int16_t depth;
----+-+	int32_t fixedTime;
----+-+	int32_t totalTime[2];
----+-+	int32_t increment[2];
----+-+	uint16_t movesToGo;
----+-+};
----++ 	if( (mv->captureType != none) && ((BIT64(mv->targetField) & opponentAttackTable->completeAttackTable) == 0)) {
----++@@ -203,11 +205,15 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----++ 		sortEval  = 110;
----++ 		if(kingBlockers[position->toMove] & opponentAttackTable->completeAttackTable) {
----++ 			sortEval = ILLEGAL;
----+++			mv->sortEval = sortEval;
----+++			return;
----++ 		}
----++ 	} else if(mv->type == castlingQueenside) {
----++ 		sortEval  = 70;
----++ 		if(queenBlockers[position->toMove] & opponentAttackTable->completeAttackTable) {
----++ 			sortEval = ILLEGAL;
----+++			mv->sortEval = sortEval;
----+++		    return;
----++ 		}
----++ 	}
----+  
----+--		uint32_t completeExpectedTime = total+remainingMoves*increment;
----+--		std::cout << remainingMoves << std::endl;
----+--		std::cout << completeExpectedTime << std::endl;
----+--		float timeAllotted = completeExpectedTime/(2.0*remainingMoves);
----+-+searchParameters paramsToUse;
----+-+std::atomic<bool> continueSearch;
----+-+chessPosition cposition;
----++@@ -243,8 +249,12 @@ static inline void calcSortEval( chessPosition* position, chessMove* mv, AttackT
----++ 		sortEval = sortEval+100;
----++ 	}
----+  
----+--		if(timeAllotted > total/10.0){
----+--			timeAllotted = total/10.0;
----+--		}
----+--		*worst_case_time = total/10.0;
----+--		return timeAllotted;
----+--	}
----+-+void setSearchParams(searchParameters params) {
----+-+	paramsToUse = params;
----+-+}
----+++	if(sortEval > 20000) {
----+++		std::cout << "????" <<std::endl;
----+++	}
----+ +
----+-+std::thread engineThread;
----++ 	if( ((mv->sourceField) | (mv->targetField << 8)) == hashedMove) {
----++-			sortEval = sortEval+2000;
----+++			sortEval = sortEval+10000;
----++ 	}
----+  
----+--	return 100; //some default
----+-+void search(chessPosition p, searchParameters params){
----+-+	std::cout << "Thread started" <<std::endl;
----+-+	while(continueSearch);
----+-+	std::cout << "Leaving thread" <<std::endl;
----++ 	mv->sortEval = sortEval;
----++diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
----++index 35d6724..9b25c84 100644
----++--- a/Cpp/src/Search/negamax.cpp
----+++++ b/Cpp/src/Search/negamax.cpp
----++@@ -43,6 +43,28 @@ void setTotalTime(uint32_t tTime, uint64_t start){
----+  }
----+  
----+-+void launchSearch() {
----+-+	continueSearch = true;
----+-+	engineThread = std::thread(search);
----+-+	std::cout << "Launched thread" <<std::endl;
----+-+}
----+  
----+--uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* nodeCount, uint64_t* mtime, int32_t* eval, bool doAspiration, searchParameters params) {
----+--	memset(killerMoves,0, 20*2*sizeof(uint16_t));
----+--	resetSearchData();
----+--	resetQuiescenceNodes();
----+--	uint64_t start_ts  = get_timestamp();
----+--	uint16_t depth = 3;
----+--	/*uint64_t qnodes = 0;
----+--	uint64_t nodes = 0;*/
----+--	*eval = 0;
----+--	int32_t alpha = -32000;
----+--	int32_t beta  = 32000;
----+--	searchId++;
----+--	uint64_t searchedNodes = 0;
----+--#ifdef FIXEDDEPTH
----+--	uint16_t maxdepth = 7;
----+--#ifdef EXPERIMENTAL
----+--	maxdepth = 8;
----+--#endif
----+--	setTotalTime(100000000, start_ts);
----+--	while(depth < maxdepth){
----+--#else
----+--	uint32_t worst_case_search_time = 0;
----+--	uint32_t totalTime = calcSearchTime(params, position->toMove, position->madeMoves.length, &worst_case_search_time);
----+--	setTotalTime(worst_case_search_time, start_ts);
----+--	uint16_t madeMoves = position->madeMoves.length;
----+--
----+--	//uint64_t goalNodes = 1800*maximal_time;
----+--	while(get_timestamp()-start_ts <= totalTime) {
----+--		/*setTotalTime(100000000, start_ts);
----+--		while(depth < 14) {*/
----+--#endif
----+--		try{
----+--			chessMove localBestMove;
----+--			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
----+--			if(doAspiration) {
----+--				if ((*eval <= alpha) || (*eval >= beta)) {
----+--					//std::cout << "Aspiration window search failed, researching..." <<std::endl;
----+--					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &localBestMove, true, false);
----+--				}
----+--
----+--				alpha = *eval-50;
----+--				beta  = *eval+50;
----+--			}
----+++uint64_t trueRets = 0;
----+++uint64_t falseRets = 0;
----+++
----+++bool getHashMoveToFront(vdt_vector<chessMove>* moves, uint16_t hashMove, chessMove* mov) {
----+++
----+++	for(uint16_t ind=0; ind < moves->length; ind++) {
----+++		chessMove mv = (*moves)[ind];
----+++		if( ((mv.sourceField) | (mv.targetField << 8)) == hashMove) {
----+++			 chessMove buffer = (*moves)[0];
----+++			 (*moves)[0] = (*moves)[ind];
----+++			 (*moves)[ind] = buffer;
----+++			 *mov = mv;
----+++			 trueRets++;
----+++			 return true;
----+++		}
----+++
----+++	}
----+++	falseRets++;
----+++	return false;
----+++
----+++}
----+++
----++ uint16_t killerMoves[40][2];
----+  
----+--			*bestMove = localBestMove;
----+--		} catch(timeoutException e) {
----+--			std::cout << "Search timed out" << std::endl;
----+--			break;
----+--		}
----++ //static chessMove buffer[5000];
----++@@ -187,23 +209,32 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++ 	if((depth == 1) && (alpha > -2000)) {
----++ 		if(!movingSideInCheck) {
----++ 			searchCounts.futility_tried++;
----++-			int32_t base = evaluation(position, alpha-151, alpha);
----++-			if(base+150 < alpha){
----++-				searchCounts.futility_successful++;
----++-				//in this case, trying a silent move is pointless.
----++-				//std::cout << "Successful futility pruning" << std::endl;
----++-				return  negamaxQuiescence(position, alpha, beta, 0);
----+++			int32_t simpleEval = evaluation(position, alpha-151, alpha, true);
----+++			if(simpleEval < alpha+100) {
----+++				int32_t base = evaluation(position, alpha-151, alpha);
----+++				if(base+150 < alpha){
----+++					searchCounts.futility_successful++;
----+++					//in this case, trying a silent move is pointless.
----+++					//std::cout << "Successful futility pruning" << std::endl;
----+++					return  negamaxQuiescence(position, alpha, beta, 0);
----+++				}
----++ 			}
----++ 		}
----++ 	}
----+  
----+--		//std::cout << depth <<std::endl;
----+--
----+--		//qnodes = getQuiescenceNodes();
----+--		//nodes  = getNodes();
----+--		*mtime = get_timestamp()-start_ts;
----+--		/*double nps = ((double) *nodeCount)/((double) *mtime)*1000.0;
----+--		std::cout << "Searched " <<  *nodeCount << " positions in " << *mtime << " for " << nps << " nodes per second" << std::endl;*/
----+--		uint64_t totalNodes=0;
----+--		searchDebugData data = getSearchData();
----+--		for(uint16_t ind=0; ind < 25; ind++){
----+--/*#ifndef UCI
----+--			std::cout << ind << "  " << data.nodes[ind] << std::endl;
----+--			std::cout << std::setw(16) << " ";
----+ -
----+--			for(int k=0; k < 50; k++){
----+--				std::cout << std::setw(9) << data.bestIndex[ind][k];
----+-+void handleStop() {
----+-+	continueSearch = false;
----+-+	engineThread.join();
----+-+	std::cout << "Joined engine thread" << std::endl;
----+-+}
----+-+
----+-+void handleGo(std::list<std::string> input) {
----++ 	uint16_t stackCounter = qmvStack.getCounter();
----++ 	vdt_vector<chessMove> moves = qmvStack.getNext();
----++ 	generateAllMoves(&moves, position);
----++-	bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
----+++	chessMove mv;
----+++	bool foundHashMove = getHashMoveToFront(&moves, hashVal.bestMove, &mv);
----+ +
----+-+	searchParameters params;
----+-+	params.type = unknown;
----+-+	params.depth = 0;
----+-+	params.fixedTime = 0;
----+-+	params.totalTime[0] = 0;
----+-+	params.totalTime[1] = 0;
----+-+	params.increment[0] = 0;
----+-+	params.increment[1] = 0;
----+-+	params.movesToGo = UINT16_MAX;
----+++	if(!foundHashMove) {
----+++		bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
----+++		assert(isInCheck == movingSideInCheck);
----+++	}
----+ +
----+ +
----+-+	for(auto iterator = input.begin(), end = input.end(); iterator != end; ++iterator) {
----+-+		std::string current = *iterator;
----+-+		if("wtime" == current) {
----+-+			iterator++;
----+-+			if(iterator == input.end()) {
----+-+				std::cout << "Missing parameter for " << current << std::endl;
----+-+				params.type = unknown;
----+-+				break;
----++ 
----++-	assert(isInCheck == movingSideInCheck);
----++ 	bool legalMovesAvailable = false;
----++ 	bool foundGoodMove = false;
----++ 	searchCounts.wentToSearch++;
----++@@ -211,6 +242,10 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++ 	for(uint16_t ind=0; ind < moves.length; ind++){
----++ 
----++ 		if(ind == 1){
----+++			if(foundHashMove) {
----+++				orderStandardMoves(position, &moves, ply, hashVal.bestMove, refutationTarget);
----+ +			}
----+-+			std::string time = *iterator;
----+-+			params.totalTime[0] = StringToNumber<int32_t>(time);
----+-+			params.type = time_until_move;
----+-+		}
----+-+		if("btime" == current) {
----+-+			iterator++;
----+-+			if(iterator == input.end()) {
----+-+				std::cout << "Missing parameter for " << current << std::endl;
----+-+				params.type = unknown;
----+-+				break;
----+++
----++ 			searchCounts.neededSort++;
----++ 			std::sort(moves.data, moves.data+moves.length);
----++ 		}
----++@@ -236,7 +271,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++ 			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
----++ 			uint16_t reduction = 0;
----++ 			uint16_t extension = 0;
----++-			if(!check && !isInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
----+++			if(!check && !movingSideInCheck && (moves[ind].captureType == none) && (depth > 2) && (ply > 0)){
----++ 				if((ind > 3)){
----++ 					reduction = 1;
----++ //#ifdef EXPERIMENTAL
----++@@ -334,7 +369,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++ 	}
----++ 
----++ 	if(!legalMovesAvailable){
----++-		if(isInCheck){
----+++		if(movingSideInCheck){
----++ 			alpha = -30000+ply;
----++ 		} else {
----++ 			alpha = 0;
----++diff --git a/Cpp/src/Search/quiescence.cpp b/Cpp/src/Search/quiescence.cpp
----++index 5aae8de..fede8a4 100644
----++--- a/Cpp/src/Search/quiescence.cpp
----+++++ b/Cpp/src/Search/quiescence.cpp
----++@@ -75,7 +75,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----++ 	}
----++ //#endif
----++ 
----++-	/*hashEntry hashVal      = getHashTableEntry(position->zobristHash);
----+++	hashEntry hashVal      = getHashTableEntry(position->zobristHash);
----++ 
----++ 	uint32_t zobristHigher = (uint32_t) (position->zobristHash >> 32);
----++ 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (position->zobristHash & 0xFFFFFFFF)) >> 16);
----++@@ -102,11 +102,7 @@ int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta,
----++ 				return oldEval;
----+  			}
----+--			std::cout << std::endl;
----+--#endif*/
----+--			totalNodes = totalNodes+data.nodes[ind];
----+-+			std::string time = *iterator;
----+-+			params.totalTime[1] = StringToNumber<int32_t>(time);
----+-+			params.type = time_until_move;
----+  		}
----+--/*#ifndef UCI
----++-	}*/
----+ -
----+--		std::cout << "SEARCH DEBUG DATA" << std::endl;
----+--		std::cout << "negamax called: "  << data.called << std::endl;
----+--		std::cout << "Went to quiescence: " << data.wentToQuiescence << std::endl;
----+--		std::cout << "By depht:"         << std::endl;
----+ -
----+--		std::cout << "Total " <<totalNodes << std::endl;
----+--		std::cout << "Threefold repetition hashhits " << data.fake_3fold_repetitions+data.threefold_repetitions << std::endl;
----+--		std::cout << "Actual repetitions " << data.threefold_repetitions << std::endl;
----+--		std::cout << "Ratio "              << ((float) data.threefold_repetitions)/((float) data.fake_3fold_repetitions+data.threefold_repetitions) << std::endl;
----+--		std::cout << "Futility tries "     << data.futility_tried <<std::endl;
----+--		std::cout << "Successful futility " << data.futility_successful << std::endl;
----+--		std::cout << "Nullmove tries "     << data.nullMovePruningTried <<std::endl;
----+--		std::cout << "Successful nullmove " << data.nullMovePruningSuccessful << std::endl;
----+--		std::cout << "Went to search "     << data.wentToSearch <<std::endl;
----+--		std::cout << "Had to sort " << data.neededSort << std::endl;
----+--#endif*/
----+ -
----+--		*nodeCount = (data.totalNodes+getQuiescenceNodes());
----+--		UI->sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----+--		logSearch(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----+--		depth++;
----+--		searchedNodes = searchedNodes+*nodeCount;
----+--		if(*eval > 29000) {
----+--			break;
----+-+		if("winc" == current) {
----+-+			iterator++;
----+-+			if(iterator == input.end()) {
----+-+				std::cout << "Missing parameter for " << current << std::endl;
----+-+				params.type = unknown;
----+-+				break;
----+-+			}
----+-+			std::string time = *iterator;
----+-+			params.increment[0] = StringToNumber<int32_t>(time);
----+-+			params.type = time_until_move;
----+-+		}
----+-+		if("binc" == current) {
----+-+			iterator++;
----+-+			if(iterator == input.end()) {
----+-+				std::cout << "Missing parameter for " << current << std::endl;
----+-+				params.type = unknown;
----+-+				break;
----+-+			}
----+-+			std::string time = *iterator;
----+-+			params.increment[1] = StringToNumber<int32_t>(time);
----+-+			params.type = time_until_move;
----+- 		}
----++-
----+++	}
----+  
----+--		if((*eval > 500) && (depth > 14)) {
----+--			break;
----+-+		if("infinite" == current) {
----+-+			params.type = infinite;
----+- 		}
----+--	}
----+--	depth--;
----+--	//std::cout << "Depth searched " << depth << std::endl;
----+--	*mtime = get_timestamp()-start_ts;
----++ 	int32_t baseEval = evaluation(position, alpha, beta);
----+  
----+--	//undo moves until we are back to start
----+-+		if("movetime" == current) {
----+-+			iterator++;
----+-+			if(iterator == input.end()) {
----+-+				std::cout << "Missing parameter for " << current << std::endl;
----+-+				params.type = unknown;
----+-+				break;
----+-+			}
----+-+			std::string time = *iterator;
----+-+			params.fixedTime = StringToNumber<int32_t>(time);
----+-+			params.type = fixed_time;
----+-+		}
----++diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
----++index 393a357..d2a6b01 100644
----++--- a/Cpp/src/Vabi.cpp
----+++++ b/Cpp/src/Vabi.cpp
----++@@ -91,8 +91,9 @@ int main() {
----++ 		latexOutput(line, out);
----++ 	}*/
----+  
----+-+		if("depth" == current) {
----+-+			iterator++;
----+-+			if(iterator == input.end()) {
----+-+				std::cout << "Missing parameter for " << current << std::endl;
----+-+				params.type = unknown;
----+-+				break;
----+-+			}
----+-+			std::string d =  *iterator;
----+-+			params.depth = StringToNumber<int32_t>(d);
----+-+			params.type = fixed_depth;
----+-+		}
----++-	/*runPerformanceTests();
----++-	return 0;*/
----+++
----+++	runPerformanceTests();
----+++	return 0;
----++ 	/*std::cout << testPerftTestSuite().passed << std::endl;
----++ 	return 0;*/
----++ 	UIloop();
----++diff --git a/Cpp/src/hashTables/zobristHash.cpp b/Cpp/src/hashTables/zobristHash.cpp
----++index 14d9f64..9d3ad11 100644
----++--- a/Cpp/src/hashTables/zobristHash.cpp
----+++++ b/Cpp/src/hashTables/zobristHash.cpp
----++@@ -33,12 +33,14 @@ static uint16_t permutations[4][4] = {{0,1,2,3}, {1,2,3,0}, {2,3,0,1}, {3,0,1,2}
----++ hashEntry getHashTableEntry(uint64_t zobristKey) {
----++ 	hashBucket current = moveOrderingHashTable[zobristKey & HASHSIZE];
----+  
----+--#ifndef FIXEDDEPTH
----+--	while(position->madeMoves.length > madeMoves){
----+--		chessMove current = position->madeMoves[position->madeMoves.length-1];
----++-	hashEntry ret = current.hashData[0];
----+++	hashEntry ret;
----+++	ret.bestMove = 0;
----+++	ret.depth   = 0;
----+  
----+--		if(current.move == 0) {
----+--			undoNullMove(position);
----+--		} else {
----+--			undoMove(position);
----+-+		if("movestogo" == current) {
----+-+			iterator++;
----+-+			if(iterator == input.end()) {
----+-+				std::cout << "Missing parameter for " << current << std::endl;
----+-+				params.type = unknown;
----+-+				break;
----+-+			}
----+-+			std::string togo =*iterator;
----+-+			params.movesToGo = StringToNumber<int32_t>(togo);
----+-+			params.type = time_until_move;
----+- 		}
----+-+
----+- 	}
----+--#endif
----+--	/*std::cout << "Qnodes " <<  qnodes << " normal nodes " << nodes <<std::endl;
----+--	std::cout << "Forced move " << moveToString(*bestMove, *position) << std::endl;
----+--	std::cout << "Evaluation "  << eval << std::endl;
----+--	std::cout << "Negamax called " << getCalled() << " with depth >0; sort called " << getSortCalled() << " times for ratio " << ((double) getSortCalled())/((double) getCalled()) << std::endl;
----+--	std::cout << "Quiescence called " << getqCalled() << " with depth >0; sort called " << getSortqCalled() << " times for ratio " << ((double) getSortqCalled())/((double) getqCalled()) << std::endl;
----+--
----+--	int32_t* indices = getIndexCounts();
----+--	for(uint16_t k=0; k < 50; k++){
----+--		std::cout << indices[k] << " ";
----+--	}
----+--	std::cout << std::endl;
----+--	int32_t* qindices = getqIndexCounts();
----+--	for(uint16_t k=0; k < 50; k++){
----+--		std::cout << qindices[k] << " ";
----+-+
----+-+
----+-+	std::cout << params.type << std::endl;
----+-+
----+-+	if(params.type == time_until_move) {
----+-+		std::cout << "White time "      << params.totalTime[0] << std::endl;
----+-+		std::cout << "Black time "      << params.totalTime[1] << std::endl;
----+-+		std::cout << "White increment " << params.increment[0] << std::endl;
----+-+		std::cout << "Black increment " << params.increment[1] << std::endl;
----+-+		std::cout << "Moves to go "     << params.movesToGo    << std::endl;
----+- 	}
----+--	std::cout << std::endl;*/
----+--	//int16_t neval = evaluation(position, -32000, 32000);
----+--	//latexOutput(position,  getEvaluationResult(), neval);
----+--	return depth;
----+--}
----++ 	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----++ 	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----++ 
----++-	for(uint8_t ind=1; ind < 4; ind++){
----+++	for(uint8_t ind=0; ind < 4; ind++){
----++ 		hashEntry entry = current.hashData[ind];
----++ 		if((entry.hashHighBits == zobristHigher) && (entry.hashLower == zobristLower)){
----++ 			ret = entry;
----++diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
----++index 02e4fcd..497cb00 100644
----++--- a/Cpp/src/lib/Evaluation/evaluation.cpp
----+++++ b/Cpp/src/lib/Evaluation/evaluation.cpp
----++@@ -69,7 +69,7 @@ static int32_t rookOpenFiles(const chessPosition* position, uint8_t* pawnOccupan
----++ 
----++ //static uint32_t counter = 0;
----++ 
----++-int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----+++int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta, bool PSQ_only){
----+  
----+-+	if(params.type != unknown) {
----+-+		setSearchParams(params);
----+  
----++ 	if( (position->pieceTables[white][pawn] == 0) &&
----++@@ -106,6 +106,10 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----+  
----+--void sendNewPosition(chessPosition* position) {
----+--	std::string newPosition = chessPositionToString(*position);
----+--	UI->sendNewPosition(newPosition);
----+-+		launchSearch();
----++ 	int32_t pieceTableEval = ((256-taperingValues[phase])*bufferEndgame+taperingValues[phase]*bufferMidgame)/256; //division by 256
----++ 	eval = eval+pieceTableEval;
----+++
----+++	if(PSQ_only) {
----+++		return (1-2*position->toMove)*eval;
----+ +	}
----++ 	result.PSQ = pieceTableEval;
----++ 
----++ 	int32_t evalsigned = (1-2*position->toMove)*eval;
----++diff --git a/Cpp/src/lib/Evaluation/evaluation.hpp b/Cpp/src/lib/Evaluation/evaluation.hpp
----++index 14f85cd..bfd44e6 100644
----++--- a/Cpp/src/lib/Evaluation/evaluation.hpp
----+++++ b/Cpp/src/lib/Evaluation/evaluation.hpp
----++@@ -13,7 +13,7 @@
----++ #include <parameters/parameters.hpp>
----+  
----++ 
----++-int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta);
----+++int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta, bool PSQ_only=false);
----++ int32_t pawnEvaluation(const chessPosition* position, uint8_t* pawnColumnOccupancy, uint16_t phase, const evalParameters* evalPars);
----++ int32_t staticPawnEval(uint64_t pawns, playerColor color, const staticPawnEvalParameters* evalPars);
----++ int32_t kingSafety(const chessPosition* position, const uint8_t* pawnColumnOccupancy, const AttackTable* whiteAttackTable, const AttackTable* blackAttackTable, const kingSafetyEvalParameters* par);
----++diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
----++index ab5c564..589257e 100644
----++--- a/Cpp/src/userInterface/UIfunctions.cpp
----+++++ b/Cpp/src/userInterface/UIfunctions.cpp
----++@@ -20,6 +20,8 @@
----++ #include <lib/moveGeneration/moveGeneration.hpp>
----++ #include <algorithm>
----++ #include <lib/Evaluation/evaluation.hpp>
----+++#include <atomic>
----+++
----++ static char figureNames[2][6] = {{'P', 'N', 'B', 'R', 'Q', 'K'},
----++ 		{'p', 'n', 'b', 'r', 'q', 'k'},
----++ };
----++@@ -702,8 +704,10 @@ bool checkAndMakeMove(chessPosition& position, std::string move){
----++ 		moves.free_array();
----++ 		return found;
----+  }
----+++extern std::atomic<bool> continueSearch;
----+  
----+--void UIloop() {
----+--	UI = new uciInterface();
----+--	std::string positionstr = "RNBQKBNRPPPPPPPP00000000000000000000000000000000pppppppprnbqkbnrwKQkq";
----+--	chessPosition position = stringToChessPosition(positionstr);
----+--	/*std::string positionstr = " ";*/
----+--	/*std::string fen = "7k/p7/1p5p/3p4/3P4/P5np/1P2R1rK/8 w - - 0";
----+--	chessPosition position = FENtoChessPosition(fen);*/
----+--
----+--	/*chessMove mv;
----+--	mv.sourceField = 29;
----+--	mv.targetField = 15;
----+--	mv.move = BIT64(29) | BIT64(15);
----+--	mv.type = queenMove;
----+--	mv.captureType = pawn;
----+--	makeMove(&mv, &position);
----+--	std::cout << SEE(&position, &mv) << std::endl;
----+--	undoMove(&position);*/
----+--
----+--
----+--	/*vdt_vector<chessMove> mvVec = vdt_vector<chessMove>(150);
----+--	generateAllMoves(&mvVec, &position);
----+--	orderStandardMoves(&position, &mvVec, 0, 0);*/
----+--
----+--
----+--	std::string move;
----+--	while(1){
----+--		UI->readInput();
----+--		std::vector<std::string> moveList = std::vector<std::string>();
----+--		if(UI->receiveNewPosition(positionstr, moveList)){
----+--			free_position(&position);
----+--			position = FENtoChessPosition(positionstr);
----+--			for(std::string seg: moveList){
----+--				//std::cout << seg << std::endl;
----+--				if(!checkAndMakeMove(position, seg)){
----+--					std::cout << "Illegal move detected" << std::endl;
----+--				}
----+--			}
----+--		}
----++ void runPerformanceTests(){
----+++	continueSearch = true;
----++ 	for(int depth = 3; depth < 11; depth++){
----++ 		std::ifstream file;
----++ 		file.open("chesspositionsfixed.txt");
----++diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
----++index 2fdc19d..91d978f 100644
----++--- a/Cpp/src/userInterface/UImainLoop.cpp
----+++++ b/Cpp/src/userInterface/UImainLoop.cpp
----++@@ -27,6 +27,7 @@
----++ #include <atomic>
----++ #include <thread>
----++ #include "mingw.thread.h"
----+++#include <tests/tests.hpp>
----+  
----+--		if(UI->positionRequested()){
----+--			sendNewPosition(&position);
----+--		}
----+-+void handlePosition(std::list<std::string> input) {
----++ extern uint8_t searchId;
----++ extern uint16_t killerMoves[20][2];
----++@@ -106,6 +107,10 @@ void sendSearchInfo(uint64_t nodes, uint32_t time, int32_t eval, uint32_t depth,
----+  
----+--		if(UI->receiveMove(move)){
----+--			if(checkAndMakeMove(position, move)){
----+--				sendNewPosition(&position);
----+--				/*chessMove bestMove;
----+--				uint32_t nodeCount;
----+--				uint64_t mtime;
----+--				int32_t eval = 0;
----+--				searchMove(&position, &bestMove, 2000, &nodeCount, &mtime, &eval);
----+--				std::cout << eval << std::endl;
----+--				makeMove(&bestMove, &position);*/
----+--				sendNewPosition(&position);
----+--			}
----+-+	std::string fen = "";
----+-+
----+-+	if(input.empty()) {
----+-+		std::cout << "Invalid position request" << std::endl;
----+-+		return;
----+-+	}
----+-+	auto iterator = input.begin();
----+-+	if("startpos" == *iterator){
----+-+		fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
----+-+		iterator++;
----+-+	} else {
----+-+		fen = *iterator;
----+-+		iterator++;
----+-+		while((iterator != input.end()) && ("moves" != *iterator)) {
----+-+			fen = fen+" "+*iterator;
----+-+			iterator++;
----+- 		}
----++ bool checkContinue(searchParameters params, uint16_t depth, uint16_t passedTime, uint16_t allottedTime) {
----+  
----+--		if (UI->receiveUndoMove()) {
----+--			std::cout << "Got undo event!" << std::endl;
----+--			undoMove(&position);
----+--			sendNewPosition(&position);
----+++	if(depth > 27) {
----+++		return false;
----+ +	}
----+ +
----++ 	if(params.type == infinite) {
----++ 		return true;
----++ 	}
----++@@ -351,6 +356,18 @@ void handleGo(std::list<std::string> input) {
----++ 
----++ }
----++ 
----+++void handlePerft(std::list<std::string> input){
----+ +
----+++		auto iterator = input.begin();
----+ +
----+-+	std::vector<std::string> moveList;
----+-+	while(iterator != input.end()) {
----+-+		if("moves" !=*iterator) {
----+-+			moveList.push_back(*iterator);
----+- 		}
----+-+		iterator++;
----+-+	}
----+++		if(iterator != input.end()) {
----+++			uint16_t depth = StringToNumber<int32_t>(*iterator);
----+++			uint32_t perftret = perftNodes(&cposition, depth);
----+++			std::cout << "Perft result " << perftret << std::endl;
----+ +
----+-+	std::cout << fen << std::endl;
----+++		}
----+++}
----+ +
----+-+	for(auto iterator = moveList.begin(); iterator != moveList.end(); iterator++) {
----+-+		std::cout << *iterator << std::endl;
----+-+	}
----+  
----+--		if(UI->receiveForceMove()) {
----+--			chessMove bestMove;
----+--			uint32_t nodeCount;
----+--			uint64_t mtime;
----+--			int32_t eval = 0;
----+--			searchParameters params;
----+--			searchMove(&position, &bestMove, &nodeCount, &mtime, &eval, true, params);
----+--			makeMove(&bestMove, &position);
----+--			sendNewPosition(&position);
----+-+	free_position(&cposition);
----+-+	cposition = FENtoChessPosition(fen);
----+-+	for(std::string seg: moveList){
----+-+		//std::cout << seg << std::endl;
----+-+		if(!checkAndMakeMove(cposition, seg)){
----+-+			std::cout << "Illegal move detected" << std::endl;
----+- 		}
----+-+	}
----++ void handlePosition(std::list<std::string> input) {
----+  
----+--		std::string newPosition;
----+--		searchParameters params;
----+--		if(UI->receiveAnalyze(newPosition, params)){
----+--			std::cout << params.increment[0] << std::endl;
----+--			std::cout << params.increment[1] << std::endl;
----+--			std::cout << params.totalTime[0] << std::endl;
----+--			std::cout << params.totalTime[1] << std::endl;
----+--			chessMove bestMove;
----+--			uint32_t nodeCount;
----+--			uint64_t mtime;
----+--			int32_t eval = 0;
----+--			searchMove(&position, &bestMove, &nodeCount, &mtime, &eval, true, params);
----+--			std::cout << "Found move " << moveToString(bestMove, position) << std::endl;
----+--			UI->sendBestMove(moveToString(bestMove, position));
----+--			makeMove(&bestMove, &position);
----+--			int16_t e  = evaluation(&position, -32000, 32000);
----+--			evaluationResult res = getEvaluationResult();
----+--			std::cout << "Eval " << e << std::endl;
----+--			std::cout << "PSQ " << res.PSQ << std::endl;
----+--			std::cout << "mobility " << res.mobility << std::endl;
----+--			std::cout << "static pawn " << res.staticPawn << std::endl;
----+--			std::cout << "passed pawn " << res.passedPawn << std::endl;
----+--			std::cout << "rook files "  << res.rookOpenFiles << std::endl;
----+--			std::cout << "king safety " << res.kingSafety << std::endl;
----+--			std::cout << "bishop pair" << res.bishoppair << std::endl;
----+--			undoMove(&position);
----+-+}
----++@@ -365,10 +382,17 @@ void handlePosition(std::list<std::string> input) {
----++ 		fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
----++ 		iterator++;
----++ 	} else {
----+++		if(*iterator != "fen") {
----+++			std::cout << "Invalid position request" << std::endl;
----+++			return;
----+++		}
----+++		iterator++;
----++ 		fen = *iterator;
----++ 		iterator++;
----++ 		while((iterator != input.end()) && ("moves" != *iterator)) {
----+++			if("fen" != *iterator) {
----++ 			fen = fen+" "+*iterator;
----+++			}
----++ 			iterator++;
----++ 		}
----+  
----+-+int main() {
----+-+	initUserEvents();
----+-+	bool continueLoop = true;
----+-+	while(continueLoop) {
----+-+		userEvent ev = getNextUserEvent();
----+-+
----+-+		switch(ev.input) {
----+-+			case uci:
----+-+				handleUciInput(std::cout);
----+-+				break;
----+-+			case isready:
----+-+				handleIsReady(std::cout);
----+-+				break;
----+-+			case go:
----+-+				handleGo(ev.data);
----+-+				break;
----+-+			case position:
----+-+				handlePosition(ev.data);
----+-+				break;
----+-+			case stop:
----++@@ -424,8 +448,12 @@ void UIloop() {
----++ 				handleStop();
----++ 				break;
----++ 			case quit:
----+ +				handleStop();
----++ 				continueLoop = false;
----++ 				break;
----+++			case perft:
----+++				handlePerft(ev.data);
----+ +				break;
----+-+			case quit:
----+-+				continueLoop = false;
----+-+				break;
----+-+			default:
----+-+				std::cout << "Not yet implemented" << std::endl;
----++ 			default:
----++ 				std::cout << "Not yet implemented" << std::endl;
----+  		}
----+- 	}
----+-+	return 0;
----++diff --git a/Cpp/src/userInterface/uciInputHandler.cpp b/Cpp/src/userInterface/uciInputHandler.cpp
----++index 32fb25c..8270099 100644
----++--- a/Cpp/src/userInterface/uciInputHandler.cpp
----+++++ b/Cpp/src/userInterface/uciInputHandler.cpp
----++@@ -43,6 +43,7 @@ void initUserEvents() {
----++ 	userEventList["stop"] 				= stop;
----++ 	userEventList["ponderhit"] 			= ponderhit;
----++ 	userEventList["quit"] 				= quit;
----+++	userEventList["perft"] 				= perft;
----+  }
----+  
----++ userEvent getNextUserEvent() {
----++diff --git a/Cpp/src/userInterface/userEvents.hpp b/Cpp/src/userInterface/userEvents.hpp
----++index 18da836..a460051 100644
----++--- a/Cpp/src/userInterface/userEvents.hpp
----+++++ b/Cpp/src/userInterface/userEvents.hpp
----++@@ -10,7 +10,7 @@
----++ #include <string>
----++ #include <list>
----+  
----+-diff --git a/Cpp/src/userInterface/userInterface.hpp b/Cpp/src/userInterface/userInterface.hpp
----+-index 9d8f390..48a9248 100644
----+---- a/Cpp/src/userInterface/userInterface.hpp
----+-+++ b/Cpp/src/userInterface/userInterface.hpp
----+-@@ -12,6 +12,7 @@
----+- #include <vector>
----+- #include "interfaceStructs.hpp"
----++-enum uciInput {invalid, uci, debug, isready, setoption, ucinewgame, position, go, stop, ponderhit, quit};
----+++enum uciInput {invalid, uci, debug, isready, setoption, ucinewgame, position, go, stop, ponderhit, quit, perft};
----+  
----+-+
----+- class userInterface {
----+- 	public:
----+- 		virtual void initialize()=0;
----++ struct userEvent {
----++ public:
----+ diff --git a/output b/output
----+ deleted file mode 100644
----+ index e69de29..0000000
----+ diff --git a/to_checkin.diff b/to_checkin.diff
----+-index f2f092d..ab68531 100644
----++index 8ee8277..6ba681a 100644
----+ --- a/to_checkin.diff
----+ +++ b/to_checkin.diff
----+-@@ -1,782 +0,0 @@
---- --diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
-------index 659ecf0..5804387 100644
----+--index f60c727..12e53ab 100644
---- ----- a/Cpp/src/Search/negamax.cpp
---- --+++ b/Cpp/src/Search/negamax.cpp
-------@@ -34,7 +34,7 @@ void resetSearchData(){
------- }
------- 
------- 
--------uint16_t killerMoves[20][2];
-------+uint16_t killerMoves[40][2];
------- 
------- static chessMove buffer[5000];
------- 
-------@@ -55,13 +55,16 @@ static inline bool backtrack_position_for_repetition(chessPosition* position) {
------- 	return false;
------- }
------- 
--------static inline bool check_nullmove(chessPosition* position, int16_t depth, int32_t beta){
-------+static inline bool check_nullmove(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int32_t beta){
------- 
------- 
------- 	if(beta > 10000){ //TODO: more dynamic condition here?
------- 		return false;
------- 	}
------- 
-------+	/*if(ply > max_ply-2){
-------+		return false;
-------+	}*/
------- 	int32_t eval = evaluation(position, beta-1, beta);
------- 
------- 	if(eval < beta){
-------@@ -76,7 +79,7 @@ static inline bool check_nullmove(chessPosition* position, int16_t depth, int32_
------- 	makeNullMove(position);
------- 	chessMove mv;
------- 	searchCounts.nullMovePruningTried++;
--------	int32_t value = -negamax(position, depth-3, -beta, -beta+1, &mv, false);
-------+	int32_t value = -negamax(position, ply+1, max_ply, depth-3, -beta, -beta+1, &mv, false);
------- 	undoNullMove(position);
------- 	if(value < beta) {
------- 		return false; //didnt manage a cutoff :(
-------@@ -85,9 +88,10 @@ static inline bool check_nullmove(chessPosition* position, int16_t depth, int32_
------- 	return true;
------- }
------- 
--------int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe) {
-------+int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove, bool doHashProbe) {
------- 
------- 	assert(alpha < beta);
-------+	assert(ply+depth <= max_ply);
------- 	searchCounts.called++;
------- 	if(position->data.fiftyMoveRuleCounter >= 100){
------- 		return 0;
-------@@ -138,7 +142,7 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
------- 	}
------- 
------- 	if((depth >= 2) && allowNullMove){
--------		if(check_nullmove(position, depth, beta)){
-------+		if(check_nullmove(position, ply, max_ply, depth, beta)){
------- 			return beta;
------- 		}
------- 	}
-------@@ -161,9 +165,9 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
------- 		}
------- 	}
------- 
--------	vdt_vector<chessMove> moves = vdt_vector<chessMove>(buffer+depth*100,100);
-------+	vdt_vector<chessMove> moves = vdt_vector<chessMove>(buffer+ply*100,100);
------- 	generateAllMoves(&moves, position);
--------	bool isInCheck = orderStandardMoves(position, &moves, depth, hashVal.bestMove);
-------+	bool isInCheck = orderStandardMoves(position, &moves, ply, hashVal.bestMove);
------- 
------- 
------- 	bool legalMovesAvailable = false;
-------@@ -193,29 +197,32 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
------- 			searchCounts.totalNodes++;
------- 			legalMovesAvailable = true;
------- 			chessMove mv;
--------
-------+			uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
-------+			bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField); //the last move gave check!
------- 			uint16_t reduction = 0;
--------
-------+			uint16_t extension = 0;
------- 			if((ind > 5) && (moves[ind].captureType == none) && (depth > 2) && !isInCheck) { //LMR
--------				uint16_t ownkingField = findLSB( position->pieceTables[position->toMove][king]);
--------				bool check = isFieldAttacked(position,  (playerColor) (1-position->toMove), ownkingField);
------- 				if(!check){
------- 					reduction = 1;
----+--@@ -135,15 +135,15 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+-- 			int16_t oldEval  = hashVal.eval;
----+-- 			if((depth <= hashVal.depth) && (oldEval > -10000) && (oldEval < 10000) && (oldEval != 0)){ //TODO: the != 0 is stupid, but somehwere something goes wrong with 3fold rep scores, so excluded ehre for safety
----+-- 				if( ((hashVal.flag == FAILHIGH) || (hashVal.flag == FULLSEARCH)) && (oldEval >= beta)){
----+---					setSearchId(searchId, position->zobristHash);
----+--+					setSearchId(searchId, position->zobristHash, hashVal.index);
----+-- 					return beta;
---- -- 				}
------- 			}
------- 
-------+			/*if(check && 		( (ply+depth < max_ply-1) || ((depth == 1) && (ply+depth < max_ply)) )){
-------+				extension = 1;
-------+				reduction = 0;
-------+			}*/
------- 
------- 			//PVSearch, currently a small gain for us with the > 5
------- 			//-------------------------------------------------
------- 			if((ind > 5) && (depth > 2)) {
--------				int32_t value = -negamax(position, depth-1-reduction, -alpha-1, -alpha, &mv);
-------+				int32_t value = -negamax(position, ply+1, max_ply, depth-1-reduction+extension, -alpha-1, -alpha, &mv);
------- 				if(value < alpha+1){
------- 					undoMove(position);
------- 					continue;
----+-- 				else if( ((hashVal.flag == FAILLOW) || (hashVal.flag == FULLSEARCH)) && (oldEval <= alpha)){
----+---					setSearchId(searchId, position->zobristHash);
----+--+					setSearchId(searchId, position->zobristHash, hashVal.index);
----+-- 					return alpha; //node will fail low
---- -- 				}
------- 			}
------- 
--------			int32_t value = -negamax(position, depth-1, -beta, -alpha, &mv);
-------+			int32_t value = -negamax(position, ply+1, max_ply, depth-1+extension, -beta, -alpha, &mv);
------- 
------- 			if(value > alpha){
------- 				foundGoodMove = true;
-------@@ -236,9 +243,9 @@ int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t b
------- 			if(bestMove->captureType == none){
------- 				uint16_t toRemember = (bestMove->sourceField | (bestMove->targetField << 8));
----+-- 				else if((hashVal.flag == FULLSEARCH)){ //TODO: this condition can be vastly improved
----+---					setSearchId(searchId, position->zobristHash);
----+--+					setSearchId(searchId, position->zobristHash, hashVal.index);
----+-- 					if(oldEval <= alpha){
----+-- 						return alpha;
----+-- 					}
----+--@@ -266,9 +266,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----+-- 		undoMove(position);
---- -- 
--------				if ( (killerMoves[depth][0] != toRemember)) {
--------					killerMoves[depth][1] = killerMoves[depth][0];
--------					killerMoves[depth][0] = toRemember;
-------+				if ( (killerMoves[ply][0] != toRemember)) {
-------+					killerMoves[ply][1] = killerMoves[ply][0];
-------+					killerMoves[ply][0] = toRemember;
------- 				}
----+-- 		if((alpha >= beta)) {
----+---			if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----+---				setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----+---			}
----+--+			setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----+-- 			if(bestIndex != -1){
----+-- 				searchCounts.bestIndex[depth][bestIndex]++;
---- -- 			}
------- 			//moves.free_array();
-------diff --git a/Cpp/src/Search/search.hpp b/Cpp/src/Search/search.hpp
-------index e9974a5..f169451 100644
---------- a/Cpp/src/Search/search.hpp
-------+++ b/Cpp/src/Search/search.hpp
-------@@ -11,10 +11,10 @@
------- #define HISTORY_CUTOFF (1ULL << 12)
------- 
------- void rescaleHistoryTable();
--------int16_t negamax(chessPosition* position, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
-------+int16_t negamax(chessPosition* position,  uint16_t ply, uint16_t max_ply, int16_t depth, int16_t alpha, int16_t beta, chessMove* bestMove, bool allowNullMove = true,  bool allowHashProbe = true);
------- int16_t negamaxQuiescence(chessPosition* position, int16_t alpha, int16_t beta, uint16_t depth);
------- void resetNodes();
--------bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t depth, uint16_t hashedMove);
-------+bool orderStandardMoves(chessPosition* position, vdt_vector<chessMove>* moves, uint16_t ply, uint16_t hashedMove);
------- void orderCaptureMoves(chessPosition* position, vdt_vector<chessMove>* moves);
------- uint32_t getNodes();
------- 
----+--@@ -317,13 +315,9 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++@@ -1,1361 +0,0 @@
----++-diff --git a/Cpp/.cproject b/Cpp/.cproject
----++-index 2efc1dd..c4592e1 100644
----++---- a/Cpp/.cproject
----++-+++ b/Cpp/.cproject
----++-@@ -41,6 +41,9 @@
----++- 							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.debug.169184492" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.debug"/>
----++- 							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug.404430608" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug">
----++- 								<option id="gnu.cpp.link.option.debugging.gprof.1616037315" name="Generate gprof information (-pg)" superClass="gnu.cpp.link.option.debugging.gprof" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----++-+								<option id="gnu.cpp.link.option.libs.1848616475" superClass="gnu.cpp.link.option.libs" useByScannerDiscovery="false" valueType="libs">
----++-+									<listOptionValue builtIn="false" value="pthread"/>
----++-+								</option>
----++- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.624604855" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
----++- 									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
----++- 									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
----++-@@ -88,7 +91,7 @@
----++- 								<option id="gnu.cpp.compiler.option.warnings.toerrors.1369119801" name="Warnings as errors (-Werror)" superClass="gnu.cpp.compiler.option.warnings.toerrors" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----++- 								<option id="gnu.cpp.compiler.option.other.other.1052557102" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" useByScannerDiscovery="false" value="-c -fmessage-length=0" valueType="string"/>
----++- 								<option id="gnu.cpp.compiler.option.optimization.flags.1382838263" name="Other optimization flags" superClass="gnu.cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-funroll-loops" valueType="string"/>
----++--								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1780748801" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----++-+								<option id="gnu.cpp.compiler.option.warnings.extrawarn.1780748801" name="Extra warnings (-Wextra)" superClass="gnu.cpp.compiler.option.warnings.extrawarn" useByScannerDiscovery="false" value="true" valueType="boolean"/>
----++- 								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.1496015459" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
----++- 							</tool>
----++- 							<tool command="gcc" id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.1303530301" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
----++-diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
----++-index d2406d5..b93c9c7 100644
----++---- a/Cpp/src/userInterface/UImainLoop.cpp
----++-+++ b/Cpp/src/userInterface/UImainLoop.cpp
----++-@@ -18,301 +18,277 @@
----++- #include <userInterface/interfaceStructs.hpp>
----++- #include <lib/moveGeneration/moveGeneration.hpp>
----++- #include <logging/logger.hpp>
----++--userInterface* UI;
----++-+#include <iostream>
----++-+#include "userEvents.hpp"
----++-+#include <sstream>
----++-+#include <vector>
----++-+#include <list>
----++-+#include <map>
----++-+#include <atomic>
----++-+#include <thread>
----++-+
----++-+void handleUciInput(std::ostream& stream) {
----++-+	stream << "id name Vabi" << std::endl;
----++-+	stream << "id author Fabian Lenhardt" << std::endl;
----++-+	stream << "uciok" << std::endl;
----++-+}
----+ - 
----++--extern uint8_t searchId;
----++--extern uint16_t killerMoves[20][2];
----++--//#define UCI
----++-+void handleIsReady(std::ostream& stream) {
----++-+	stream << "readyok" <<std::endl;
----++-+}
----+ - 
----+-- 	if(foundGoodMove) {
----+---		if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----+---			setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----+---		}
----+--+		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----+-- 	} else { //we failed low, remember as well
----+---		if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----+-- 			setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
----+---		}
----+-- 	}
----++-+template <typename T>
----++-+T StringToNumber ( const std::string &Text )//Text not by const reference so that the function can be used with a
----++-+{                               //character array as argument
----++-+	std::stringstream ss(Text);
----++-+	T result;
----++-+	return ss >> result ? result : 0;
----++-+}
----+ - 
----+-- 	qmvStack.release();
---- --diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
-------index 8dfc9fd..f3a19ee 100644
----+--index 5d9bd3d..4456608 100644
---- ----- a/Cpp/src/Vabi.cpp
---- --+++ b/Cpp/src/Vabi.cpp
-------@@ -74,8 +74,8 @@ int main() {
------- 
------- 	srand (time(NULL));
------- 	fillZobristHash();
----+--@@ -69,7 +69,11 @@ int main() {
----+-- 	for(uint32_t index=0; index < 7; index++) {
----+-- 		for(uint32_t t=0; t < 2; t++) {
----+-- 			for(uint32_t k=0; k < 64; k++) {
----+--+#ifdef EXPERIMENTAL
----+--+					completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]/2+figureValues[index])) << 16);
----+--+#else
----+-- 					completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]+figureValues[index])) << 16);
----+--+#endif
----+-- 			}
----+-- 		}
----+-- 	}
----+--@@ -86,8 +90,8 @@ int main() {
----+-- 		latexOutput(line, out);
----+-- 	}*/
----++--uint32_t calcSearchTime(searchParameters params,  playerColor toMove, uint16_t numMadeMoves, uint32_t* worst_case_time) {
----++-+enum searchType {unknown, fixed_time, time_until_move, fixed_depth, infinite};
----+ - 
---- ---	/*runPerformanceTests();
---- ---	return 0;*/
---- --+	runPerformanceTests();
---- --+	return 0;
----+-- 	/*std::cout << testPerftTestSuite().passed << std::endl;
----+-- 	return 0;*/
---- -- 	UIloop();
------- 	//00000BNR00000PKQ00000NPR00000N0P000000000000000p0qpN0npnN000000kw0000
----+--diff --git a/Cpp/src/hashTables/hashTables.hpp b/Cpp/src/hashTables/hashTables.hpp
----+--index aded8bc..feea41b 100644
----+----- a/Cpp/src/hashTables/hashTables.hpp
----+--+++ b/Cpp/src/hashTables/hashTables.hpp
----+--@@ -9,7 +9,7 @@
----+-- #define HASHTABLES_HASHTABLES_HPP_
----++--	/*if(depth < 7){
----++--		return true;
----++--	} else {
----++--		return false;
----++--	}*/
----++--	if(params.totalTime[toMove] > 0) {
----++--		uint32_t total = params.totalTime[toMove];
----++--		uint32_t increment = params.increment[toMove];
----++--
----++--		//estimate remaining moves
----++--		uint16_t totalExpectedMoves = 1/2*numMadeMoves+60;
----++--		int16_t remainingMoves = totalExpectedMoves-numMadeMoves;
----++--
----++--		if(remainingMoves < 20){
----++--			remainingMoves = 20;
----++--		}
----++-+struct searchParameters {
----++-+	searchType type;
----++-+	int16_t depth;
----++-+	int32_t fixedTime;
----++-+	int32_t totalTime[2];
----++-+	int32_t increment[2];
----++-+	uint16_t movesToGo;
----++-+};
----+ - 
----++--		uint32_t completeExpectedTime = total+remainingMoves*increment;
----++--		std::cout << remainingMoves << std::endl;
----++--		std::cout << completeExpectedTime << std::endl;
----++--		float timeAllotted = completeExpectedTime/(2.0*remainingMoves);
----++-+searchParameters paramsToUse;
----++-+std::atomic<bool> continueSearch;
----++-+chessPosition cposition;
----+ - 
----+---#define HASHSIZE 0x3FFFFFF //needs to be a power of 2!
----+--+#define HASHSIZE 0xFFFFFF //needs to be a power of 2!
----++--		if(timeAllotted > total/10.0){
----++--			timeAllotted = total/10.0;
----++--		}
----++--		*worst_case_time = total/10.0;
----++--		return timeAllotted;
----++--	}
----++-+void setSearchParams(searchParameters params) {
----++-+	paramsToUse = params;
----++-+}
----++-+
----++-+std::thread engineThread;
----+ - 
----+-- void fillZobristHash();
----+-- uint64_t calcZobristHash(const chessPosition* position);
----+--@@ -18,6 +18,6 @@ void setHashEntry(hashEntry entry, uint64_t zobristKey);
----+-- uint16_t getHashMove(uint64_t zobristKey);
----+-- void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId);
----+-- void setHashEntry(hashFlag flag, int16_t eval, uint8_t depth, uint8_t searchId, uint16_t bestMove, uint64_t key);
----+---void setSearchId(uint8_t searchId, uint64_t key);
----+--+void setSearchId(uint8_t searchId, uint64_t key, uint16_t index);
----++--	return 100; //some default
----++-+void search(chessPosition p, searchParameters params){
----++-+	std::cout << "Thread started" <<std::endl;
----++-+	while(continueSearch);
----++-+	std::cout << "Leaving thread" <<std::endl;
----++- }
----+ - 
----+-- #endif /* HASHTABLES_HASHTABLES_HPP_ */
----+--diff --git a/Cpp/src/hashTables/zobristHash.cpp b/Cpp/src/hashTables/zobristHash.cpp
----+--index 1406c4b..b5b240c 100644
----+----- a/Cpp/src/hashTables/zobristHash.cpp
----+--+++ b/Cpp/src/hashTables/zobristHash.cpp
----+--@@ -12,54 +12,99 @@
----+-- #include <assert.h>
----+-- #include <iostream>
----++-+void launchSearch() {
----++-+	continueSearch = true;
----++-+	engineThread = std::thread(search);
----++-+	std::cout << "Launched thread" <<std::endl;
----++-+}
----+ - 
----+---static hashEntry moveOrderingHashTable[HASHSIZE+1];
----+--+static hashBucket moveOrderingHashTable[HASHSIZE+1];
----++--uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t* nodeCount, uint64_t* mtime, int32_t* eval, bool doAspiration, searchParameters params) {
----++--	memset(killerMoves,0, 20*2*sizeof(uint16_t));
----++--	resetSearchData();
----++--	resetQuiescenceNodes();
----++--	uint64_t start_ts  = get_timestamp();
----++--	uint16_t depth = 3;
----++--	/*uint64_t qnodes = 0;
----++--	uint64_t nodes = 0;*/
----++--	*eval = 0;
----++--	int32_t alpha = -32000;
----++--	int32_t beta  = 32000;
----++--	searchId++;
----++--	uint64_t searchedNodes = 0;
----++--#ifdef FIXEDDEPTH
----++--	uint16_t maxdepth = 7;
----++--#ifdef EXPERIMENTAL
----++--	maxdepth = 8;
----++--#endif
----++--	setTotalTime(100000000, start_ts);
----++--	while(depth < maxdepth){
----++--#else
----++--	uint32_t worst_case_search_time = 0;
----++--	uint32_t totalTime = calcSearchTime(params, position->toMove, position->madeMoves.length, &worst_case_search_time);
----++--	setTotalTime(worst_case_search_time, start_ts);
----++--	uint16_t madeMoves = position->madeMoves.length;
----++--
----++--	//uint64_t goalNodes = 1800*maximal_time;
----++--	while(get_timestamp()-start_ts <= totalTime) {
----++--		/*setTotalTime(100000000, start_ts);
----++--		while(depth < 14) {*/
----++--#endif
----++--		try{
----++--			chessMove localBestMove;
----++--			*eval = negamax(position, 0, depth+3, depth, alpha, beta, &localBestMove, true, false);
----++--			if(doAspiration) {
----++--				if ((*eval <= alpha) || (*eval >= beta)) {
----++--					//std::cout << "Aspiration window search failed, researching..." <<std::endl;
----++--					*eval = negamax(position, 0, depth+3, depth, -32000, 32000, &localBestMove, true, false);
----++--				}
----++--
----++--				alpha = *eval-50;
----++--				beta  = *eval+50;
----++--			}
----+ - 
----+-- uint64_t zobristHash[7][2][64];
----+-- uint64_t movingSideHash[2];
----+-- uint64_t castlingHash[16];
----+-- uint64_t enpassantHash[9];
----++--			*bestMove = localBestMove;
----++--		} catch(timeoutException e) {
----++--			std::cout << "Search timed out" << std::endl;
----++--			break;
----++--		}
----+ - 
----++--		//std::cout << depth <<std::endl;
----++--
----++--		//qnodes = getQuiescenceNodes();
----++--		//nodes  = getNodes();
----++--		*mtime = get_timestamp()-start_ts;
----++--		/*double nps = ((double) *nodeCount)/((double) *mtime)*1000.0;
----++--		std::cout << "Searched " <<  *nodeCount << " positions in " << *mtime << " for " << nps << " nodes per second" << std::endl;*/
----++--		uint64_t totalNodes=0;
----++--		searchDebugData data = getSearchData();
----++--		for(uint16_t ind=0; ind < 25; ind++){
----++--/*#ifndef UCI
----++--			std::cout << ind << "  " << data.nodes[ind] << std::endl;
----++--			std::cout << std::setw(16) << " ";
----++--
----++--			for(int k=0; k < 50; k++){
----++--				std::cout << std::setw(9) << data.bestIndex[ind][k];
----++-+void handleStop() {
----++-+	continueSearch = false;
----++-+	engineThread.join();
----++-+	std::cout << "Joined engine thread" << std::endl;
----++-+}
----+ -+
----+--+static uint16_t permutationIndex = 0;
----+--+
----+--+
----+--+static uint16_t permutations[4][4] = {{0,1,2,3}, {1,2,3,0}, {2,3,0,1}, {3,0,1,2}};
----+--+
----++-+void handleGo(std::list<std::string> input) {
----+ -+
----++-+	searchParameters params;
----++-+	params.type = unknown;
----++-+	params.depth = 0;
----++-+	params.fixedTime = 0;
----++-+	params.totalTime[0] = 0;
----++-+	params.totalTime[1] = 0;
----++-+	params.increment[0] = 0;
----++-+	params.increment[1] = 0;
----++-+	params.movesToGo = UINT16_MAX;
----+ -+
----+ -+
----+-- //TODO: somehow force-inline these functions everywhere
----+-- 
----+-- hashEntry getHashTableEntry(uint64_t zobristKey) {
----+---	return moveOrderingHashTable[zobristKey & HASHSIZE];
----+---}
----+--+	hashBucket current = moveOrderingHashTable[zobristKey & HASHSIZE];
----+-- 
----+---void setHashEntry(hashEntry entry, uint64_t zobristKey){
----+---	moveOrderingHashTable[zobristKey & HASHSIZE] = entry;
----+---}
----+--+	hashEntry ret = current.hashData[0];
----+-- 
----+---void setSearchId(uint8_t searchId, uint64_t key) {
----+---	moveOrderingHashTable[key & HASHSIZE].searchId = searchId;
----+--+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----+--+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----+-- 
----+--+	for(uint8_t ind=1; ind < 4; ind++){
----+--+		hashEntry entry = current.hashData[ind];
----+--+		if((entry.hashHighBits == zobristHigher) && (entry.hashLower == zobristLower)){
----+--+			ret = entry;
----++-+	for(auto iterator = input.begin(), end = input.end(); iterator != end; ++iterator) {
----++-+		std::string current = *iterator;
----++-+		if("wtime" == current) {
----++-+			iterator++;
----++-+			if(iterator == input.end()) {
----++-+				std::cout << "Missing parameter for " << current << std::endl;
----++-+				params.type = unknown;
----++-+				break;
----++-+			}
----++-+			std::string time = *iterator;
----++-+			params.totalTime[0] = StringToNumber<int32_t>(time);
----++-+			params.type = time_until_move;
----+ -+		}
----+--+	}
----+--+	return ret;
----+--+}
----+--+
----+--+void setSearchId(uint8_t searchId, uint64_t key, uint16_t index) {
----+--+	moveOrderingHashTable[key & HASHSIZE].hashData[index].searchId = searchId;
----+-- }
----+-- 
----+-- void setHashEntry(hashFlag flag, int16_t eval, uint8_t depth, uint8_t searchId, uint16_t bestMove, uint64_t key){
----+---	hashEntry entry;
----+---	entry.flag = flag;
----+---	entry.eval  = eval;
----+---	entry.depth = depth;
----+---	entry.searchId = searchId;
----+---	entry.bestMove = bestMove;
----+---	entry.hashHighBits = (uint32_t) (key >> 32);
----+---	entry.hashLower    = (uint16_t) (((uint32_t) (key & 0xFFFFFFFF)) >> 16);
----+---	moveOrderingHashTable[key & HASHSIZE] = entry;
----+--+	hashBucket* current = &moveOrderingHashTable[key & HASHSIZE];
----+--+
----+--+	for(uint8_t ind=0; ind < 4; ind++){
----+--+		hashEntry* entry = &current->hashData[permutations[permutationIndex][ind]];
----+--+		if((entry->depth <= depth) || (entry->searchId != searchId)) {
----+--+			entry->flag = flag;
----+--+			entry->eval  = eval;
----+--+			entry->depth = depth;
----+--+			entry->searchId = searchId;
----+--+			entry->bestMove = bestMove;
----+--+			entry->hashHighBits = (uint32_t) (key >> 32);
----+--+			entry->hashLower    = (uint16_t) (((uint32_t) (key & 0xFFFFFFFF)) >> 16);
----+--+			entry->index        = permutations[permutationIndex][ind];
----+--+			break;
----++-+		if("btime" == current) {
----++-+			iterator++;
----++-+			if(iterator == input.end()) {
----++-+				std::cout << "Missing parameter for " << current << std::endl;
----++-+				params.type = unknown;
----++-+				break;
----++- 			}
----++--			std::cout << std::endl;
----++--#endif*/
----++--			totalNodes = totalNodes+data.nodes[ind];
----++-+			std::string time = *iterator;
----++-+			params.totalTime[1] = StringToNumber<int32_t>(time);
----++-+			params.type = time_until_move;
----++- 		}
----++--/*#ifndef UCI
----++--
----++--		std::cout << "SEARCH DEBUG DATA" << std::endl;
----++--		std::cout << "negamax called: "  << data.called << std::endl;
----++--		std::cout << "Went to quiescence: " << data.wentToQuiescence << std::endl;
----++--		std::cout << "By depht:"         << std::endl;
----++--
----++--		std::cout << "Total " <<totalNodes << std::endl;
----++--		std::cout << "Threefold repetition hashhits " << data.fake_3fold_repetitions+data.threefold_repetitions << std::endl;
----++--		std::cout << "Actual repetitions " << data.threefold_repetitions << std::endl;
----++--		std::cout << "Ratio "              << ((float) data.threefold_repetitions)/((float) data.fake_3fold_repetitions+data.threefold_repetitions) << std::endl;
----++--		std::cout << "Futility tries "     << data.futility_tried <<std::endl;
----++--		std::cout << "Successful futility " << data.futility_successful << std::endl;
----++--		std::cout << "Nullmove tries "     << data.nullMovePruningTried <<std::endl;
----++--		std::cout << "Successful nullmove " << data.nullMovePruningSuccessful << std::endl;
----++--		std::cout << "Went to search "     << data.wentToSearch <<std::endl;
----++--		std::cout << "Had to sort " << data.neededSort << std::endl;
----++--#endif*/
----++--
----++--		*nodeCount = (data.totalNodes+getQuiescenceNodes());
----++--		UI->sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----++--		logSearch(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----++--		depth++;
----++--		searchedNodes = searchedNodes+*nodeCount;
----++--		if(*eval > 29000) {
----++--			break;
----++-+		if("winc" == current) {
----++-+			iterator++;
----++-+			if(iterator == input.end()) {
----++-+				std::cout << "Missing parameter for " << current << std::endl;
----++-+				params.type = unknown;
----++-+				break;
----++-+			}
----++-+			std::string time = *iterator;
----++-+			params.increment[0] = StringToNumber<int32_t>(time);
----++-+			params.type = time_until_move;
----+ -+		}
----+--+	}
----+--+	permutationIndex = (permutationIndex+1) & 3;
----+-- }
----++-+		if("binc" == current) {
----++-+			iterator++;
----++-+			if(iterator == input.end()) {
----++-+				std::cout << "Missing parameter for " << current << std::endl;
----++-+				params.type = unknown;
----++-+				break;
----++-+			}
----++-+			std::string time = *iterator;
----++-+			params.increment[1] = StringToNumber<int32_t>(time);
----++-+			params.type = time_until_move;
----++- 		}
----++- 
----++--		if((*eval > 500) && (depth > 14)) {
----++--			break;
----++-+		if("infinite" == current) {
----++-+			params.type = infinite;
----++- 		}
----++--	}
----++--	depth--;
----++--	//std::cout << "Depth searched " << depth << std::endl;
----++--	*mtime = get_timestamp()-start_ts;
----+ - 
----+-- uint16_t getHashMove(uint64_t zobristKey){
----+---	return moveOrderingHashTable[zobristKey & HASHSIZE].bestMove;
----+--+	hashBucket* current = &moveOrderingHashTable[zobristKey & HASHSIZE];
----+--+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----+--+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----+--+	for(uint8_t ind=0; ind < 4; ind++){
----+--+		hashEntry* entry = &current->hashData[ind];
----+--+		if ((entry->hashHighBits == zobristHigher) && (entry->hashLower == zobristLower)) {
----+--+			return entry->bestMove;
----++--	//undo moves until we are back to start
----++-+		if("movetime" == current) {
----++-+			iterator++;
----++-+			if(iterator == input.end()) {
----++-+				std::cout << "Missing parameter for " << current << std::endl;
----++-+				params.type = unknown;
----++-+				break;
----++-+			}
----++-+			std::string time = *iterator;
----++-+			params.fixedTime = StringToNumber<int32_t>(time);
----++-+			params.type = fixed_time;
----+ -+		}
----+--+	}
----+--+	return 0;
----+--+
----+-- }
----+ - 
----+-- void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId) {
----+---	if(moveOrderingHashTable[zobristKey & HASHSIZE].searchId != searchId) {
----+---		moveOrderingHashTable[zobristKey & HASHSIZE].bestMove = move;
----+---		moveOrderingHashTable[zobristKey & HASHSIZE].depth    = 0;
----+--+	hashBucket* current = &moveOrderingHashTable[zobristKey & HASHSIZE];
----+--+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----+--+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----+--+	for(uint8_t ind=0; ind < 4; ind++){
----+--+		hashEntry* entry = &current->hashData[permutations[permutationIndex][ind]];
----+--+		if ((entry->searchId != searchId)){
----+--+			entry->searchId = searchId;
----+--+			entry->depth    = 0;
----+--+			entry->bestMove = move;
----+--+			entry->hashHighBits = zobristHigher;
----+--+			entry->hashLower    = zobristLower;
----++-+		if("depth" == current) {
----++-+			iterator++;
----++-+			if(iterator == input.end()) {
----++-+				std::cout << "Missing parameter for " << current << std::endl;
----++-+				params.type = unknown;
----++-+				break;
----++-+			}
----++-+			std::string d =  *iterator;
----++-+			params.depth = StringToNumber<int32_t>(d);
----++-+			params.type = fixed_depth;
----+ -+		}
----+-- 	}
----+--+	permutationIndex = (permutationIndex+1) & 3;
---- -- }
----+ - 
----++--#ifndef FIXEDDEPTH
----++--	while(position->madeMoves.length > madeMoves){
----++--		chessMove current = position->madeMoves[position->madeMoves.length-1];
----+ - 
----+-- void clearHashTables() {
----+---	memset(moveOrderingHashTable, 0, sizeof(hashEntry)*(HASHSIZE+1));
----+--+	memset(moveOrderingHashTable, 0, sizeof(hashBucket)*(HASHSIZE+1));
----+-- }
----++--		if(current.move == 0) {
----++--			undoNullMove(position);
----++--		} else {
----++--			undoMove(position);
----++-+		if("movestogo" == current) {
----++-+			iterator++;
----++-+			if(iterator == input.end()) {
----++-+				std::cout << "Missing parameter for " << current << std::endl;
----++-+				params.type = unknown;
----++-+				break;
----++-+			}
----++-+			std::string togo =*iterator;
----++-+			params.movesToGo = StringToNumber<int32_t>(togo);
----++-+			params.type = time_until_move;
----++- 		}
----++-+
----++- 	}
----++--#endif
----++--	/*std::cout << "Qnodes " <<  qnodes << " normal nodes " << nodes <<std::endl;
----++--	std::cout << "Forced move " << moveToString(*bestMove, *position) << std::endl;
----++--	std::cout << "Evaluation "  << eval << std::endl;
----++--	std::cout << "Negamax called " << getCalled() << " with depth >0; sort called " << getSortCalled() << " times for ratio " << ((double) getSortCalled())/((double) getCalled()) << std::endl;
----++--	std::cout << "Quiescence called " << getqCalled() << " with depth >0; sort called " << getSortqCalled() << " times for ratio " << ((double) getSortqCalled())/((double) getqCalled()) << std::endl;
----++--
----++--	int32_t* indices = getIndexCounts();
----++--	for(uint16_t k=0; k < 50; k++){
----++--		std::cout << indices[k] << " ";
----++--	}
----++--	std::cout << std::endl;
----++--	int32_t* qindices = getqIndexCounts();
----++--	for(uint16_t k=0; k < 50; k++){
----++--		std::cout << qindices[k] << " ";
----++-+
----++-+
----++-+	std::cout << params.type << std::endl;
----++-+
----++-+	if(params.type == time_until_move) {
----++-+		std::cout << "White time "      << params.totalTime[0] << std::endl;
----++-+		std::cout << "Black time "      << params.totalTime[1] << std::endl;
----++-+		std::cout << "White increment " << params.increment[0] << std::endl;
----++-+		std::cout << "Black increment " << params.increment[1] << std::endl;
----++-+		std::cout << "Moves to go "     << params.movesToGo    << std::endl;
----++- 	}
----++--	std::cout << std::endl;*/
----++--	//int16_t neval = evaluation(position, -32000, 32000);
----++--	//latexOutput(position,  getEvaluationResult(), neval);
----++--	return depth;
----++--}
----+ - 
----+-- void fillZobristHash(){
----+--diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
----+--index 276a2a6..68809d1 100644
----+----- a/Cpp/src/lib/Defines/pieceTables.cpp
----+--+++ b/Cpp/src/lib/Defines/pieceTables.cpp
----+--@@ -7,7 +7,7 @@
----++-+	if(params.type != unknown) {
----++-+		setSearchParams(params);
----+ - 
----+-- #include <stdint.h>
----+ - 
----+---
----+--+//TODO: We are actually using 1/2 these values - change all values here instead!
----++--void sendNewPosition(chessPosition* position) {
----++--	std::string newPosition = chessPositionToString(*position);
----++--	UI->sendNewPosition(newPosition);
----++-+		launchSearch();
----++-+	}
----+ - 
----+-- int16_t pieceTables[7][2][64] = {
----+-- 		{
----+--@@ -254,12 +254,12 @@ int16_t endGamepieceTables[7][2][64] = {
----+-- 						-15,-5,0,0,0,0,-5,-15,
----+-- 						-10,-5,0,0,0,0,-5,-10,
----+-- 						-15,-5,0,0,0,0,-5,15,
----+---						30,30,40,40,40,40,30,30,
----+--+						10,20,20,20,20,20,20,10,
----+-- 						10,20,20,20,20,20,20,10
----+-- 				},
----+-- 				{ //black rooks
----+-- 						10,20,20,20,20,20,20,10,
----+---						30,30,40,40,40,40,30,30,
----+--+						10,20,20,20,20,20,20,10,
----+-- 						0,0,0,0,0,0,0,0,
----+-- 						0,0,0,0,0,0,0,0,
----+-- 						-15,-5,0,0,0,0,-5,-15,
----+--@@ -276,13 +276,13 @@ int16_t endGamepieceTables[7][2][64] = {
----+-- 						-15,-5,10,30,30,10,-5,-15,
----+-- 						-10,-5,5,20,20,5,-5,-10,
----+-- 						-15,-5,10,15,15,10,-5,15,
----+---						30,30,40,40,40,40,30,30,
----+--+						-20,-10,10,15,15,10,-10,-20,
----+-- 						0,10,20,20,20,20,10,0
----++- }
----+ - 
----+-- 				},
----+-- 				{ //black queens
----+-- 						0,10,20,20,20,20,10,0,
----+---						30,30,40,40,40,40,30,30,
----+--+						-20,-10,10,15,15,10,-10,-20,
----+-- 						-15,-5,10,15,15,10,-5,15,
----+-- 						-10,-5,5,20,20,5,-5,-10,
----+-- 						-15,-5,10,30,30,10,-5,-15,
----+--@@ -293,27 +293,25 @@ int16_t endGamepieceTables[7][2][64] = {
----+-- 		},
----+-- 		{
----+-- 				{ //white kings
----+---						-100,-70,-40,-25,-25,-40,-70,-100,
----+---						-70,-50,-30,-10,-10,-30,-50,-70,
----+---						-40,-30,-10, 10, 10,-10,-30,-40,
----+---						-25,-10, 10, 30, 30, 10,-10,-25,
----+---						-25,-10, 10, 30, 30, 10,-10,-25,
----+---						-40,-30,-10, 10, 10,-10,-30,-40,
----+---						-70,-50,-30,-10,-10,-30,-50,-70,
----+---						-100,-70,-40,-25,-25,-40,-70,-100,
----+--+						-200,-140,-80,-50,-50,-80,-140,-200,
----+--+						-140,-100,-60,-20,-20,-60,-100,-140,
----+--+						-80,-60,-20, 20, 20,-20,-60,-80,
----+--+						-50,-20, 20, 60, 60, 20,-20,-50,
----+--+						-50,-20, 20, 60, 60, 20,-20,-50,
----+--+						-80,-60,-20, 20, 20,-20,-60,-80,
----+--+						-140,-100,-60,-20,-20,-60,-100,-140,
----+--+						-200,-140,-80,-50,-50,-80,-140,-200,
----+-- 				},
----+-- 				{ //black kings
----+---						-100,-70,-40,-25,-25,-40,-70,-100,
----+---						-70,-50,-30,-10,-10,-30,-50,-70,
----+---						-40,-30,-10, 10, 10,-10,-30,-40,
----+---						-25,-10, 10, 30, 30, 10,-10,-25,
----+---						-25,-10, 10, 30, 30, 10,-10,-25,
----+---						-40,-30,-10, 10, 10,-10,-30,-40,
----+---						-70,-50,-30,-10,-10,-30,-50,-70,
----+---						-100,-70,-40,-25,-25,-40,-70,-100,
----+--+						200,-140,-80,-50,-50,-80,-140,-200,
----+--+						-140,-100,-60,-20,-20,-60,-100,-140,
----+--+						-80,-60,-20, 20, 20,-20,-60,-80,
----+--+						-50,-20, 20, 60, 60, 20,-20,-50,
----+--+						-50,-20, 20, 60, 60, 20,-20,-50,
----+--+						-80,-60,-20, 20, 20,-20,-60,-80,
----+--+						-140,-100,-60,-20,-20,-60,-100,-140,
----+--+						-200,-140,-80,-50,-50,-80,-140,-200,
----+-- 				}
----++--void UIloop() {
----++--	UI = new uciInterface();
----++--	std::string positionstr = "RNBQKBNRPPPPPPPP00000000000000000000000000000000pppppppprnbqkbnrwKQkq";
----++--	chessPosition position = stringToChessPosition(positionstr);
----++--	/*std::string positionstr = " ";*/
----++--	/*std::string fen = "7k/p7/1p5p/3p4/3P4/P5np/1P2R1rK/8 w - - 0";
----++--	chessPosition position = FENtoChessPosition(fen);*/
----+ --
----++--	/*chessMove mv;
----++--	mv.sourceField = 29;
----++--	mv.targetField = 15;
----++--	mv.move = BIT64(29) | BIT64(15);
----++--	mv.type = queenMove;
----++--	mv.captureType = pawn;
----++--	makeMove(&mv, &position);
----++--	std::cout << SEE(&position, &mv) << std::endl;
----++--	undoMove(&position);*/
----+ --
----+-- 		},
----+-- 		{			//non-captures
----+-- 					{
----+--@@ -336,10 +334,7 @@ int16_t endGamepieceTables[7][2][64] = {
----+-- 							0,0,0,0,0,0,0,0,
----+-- 							0,0,0,0,0,0,0,0
----+-- 					}
----+ --
----+-- 			}
----++--	/*vdt_vector<chessMove> mvVec = vdt_vector<chessMove>(150);
----++--	generateAllMoves(&mvVec, &position);
----++--	orderStandardMoves(&position, &mvVec, 0, 0);*/
----+ --
----+ --
----+-- };
----++--	std::string move;
----++--	while(1){
----++--		UI->readInput();
----++--		std::vector<std::string> moveList = std::vector<std::string>();
----++--		if(UI->receiveNewPosition(positionstr, moveList)){
----++--			free_position(&position);
----++--			position = FENtoChessPosition(positionstr);
----++--			for(std::string seg: moveList){
----++--				//std::cout << seg << std::endl;
----++--				if(!checkAndMakeMove(position, seg)){
----++--					std::cout << "Illegal move detected" << std::endl;
----++--				}
----++--			}
----++--		}
----+ - 
----+-- int32_t completePieceTables[7][2][64];
---- --diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
-------index 766416a..d633e9e 100644
----+--index 64cf5d8..0d33e3d 100644
---- ----- a/Cpp/src/lib/Evaluation/evaluation.cpp
---- --+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
-------@@ -114,7 +114,7 @@ int32_t evaluation(const chessPosition* position, int32_t alpha, int32_t beta){
----+--@@ -22,7 +22,7 @@ evaluationResult getEvaluationResult(){
----+-- 	return result;
----+-- }
----++--		if(UI->positionRequested()){
----++--			sendNewPosition(&position);
----++--		}
----++-+void handlePosition(std::list<std::string> input) {
----+ - 
----+---//std::ofstream out("/home/vabi/TeX/Chess/positions.tex");
----++--		if(UI->receiveMove(move)){
----++--			if(checkAndMakeMove(position, move)){
----++--				sendNewPosition(&position);
----++--				/*chessMove bestMove;
----++--				uint32_t nodeCount;
----++--				uint64_t mtime;
----++--				int32_t eval = 0;
----++--				searchMove(&position, &bestMove, 2000, &nodeCount, &mtime, &eval);
----++--				std::cout << eval << std::endl;
----++--				makeMove(&bestMove, &position);*/
----++--				sendNewPosition(&position);
----++--			}
----++-+	std::string fen = "";
----+ -+
----++-+	if(input.empty()) {
----++-+		std::cout << "Invalid position request" << std::endl;
----++-+		return;
----++-+	}
----++-+	auto iterator = input.begin();
----++-+	if("startpos" == *iterator){
----++-+		fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
----++-+		iterator++;
----++-+	} else {
----++-+		fen = *iterator;
----++-+		iterator++;
----++-+		while((iterator != input.end()) && ("moves" != *iterator)) {
----++-+			fen = fen+" "+*iterator;
----++-+			iterator++;
----++- 		}
----+ - 
----+-- uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
----+-- 						       	 0,  0,  0,  0,  0,  0,  0,  0,
----+--diff --git a/Cpp/src/lib/basics.hpp b/Cpp/src/lib/basics.hpp
----+--index fd2cb6f..2bd8e39 100644
----+----- a/Cpp/src/lib/basics.hpp
----+--+++ b/Cpp/src/lib/basics.hpp
----+--@@ -66,6 +66,8 @@ struct chessPosition {
---- -- 
------- 	eval = eval+kingSafetyTapered;*/
----+-- enum hashFlag: uint16_t {FULLSEARCH=0,FAILLOW=1,FAILHIGH=2};
---- -- 
--------	//eval = eval+(rand() & 7)-3; //TODO: how is this performance-wise?
-------+	eval = eval+(rand() & 7)-3; //TODO: how is this performance-wise?
------- 	return (1-2*position->toMove)*eval;
----+--+
----++--		if (UI->receiveUndoMove()) {
----++--			std::cout << "Got undo event!" << std::endl;
----++--			undoMove(&position);
----++--			sendNewPosition(&position);
----++-+	}
----+ -+
----+-- struct hashEntry{
----+-- 	uint32_t hashHighBits;
----+-- 	uint16_t hashLower;
----+--@@ -74,8 +76,13 @@ struct hashEntry{
----+-- 	uint16_t eval;
----+-- 	uint8_t depth;
----+-- 	uint8_t searchId;
----+--+	uint16_t index;
----+-- } __attribute__((packed));
---- -- 
------- }
-------diff --git a/Cpp/src/selfPlaying/selfPlaying.cpp b/Cpp/src/selfPlaying/selfPlaying.cpp
-------index db93cbc..a3bdb1f 100644
---------- a/Cpp/src/selfPlaying/selfPlaying.cpp
-------+++ b/Cpp/src/selfPlaying/selfPlaying.cpp
-------@@ -26,7 +26,7 @@ int32_t selfPlayMakeMove(chessPosition* position, uint16_t whitedepth, uint16_t
------- 		depth = blackdepth;
------- 	}
------- 	chessMove bestMove;
--------	int32_t eval = negamax(position, depth, -32000, 32000, &bestMove);
-------+	int32_t eval = negamax(position, 0, depth+3, depth, -32000, 32000, &bestMove);
------- 	if(position->toMove == black) {
------- 		eval = -eval;
------- 	}
----+--+struct hashBucket{
----+--+	hashEntry hashData[4];
----+--+};
----+ -+
----+-- class timeoutException: public std::exception
----+-- {
----+--   virtual const char* what() const throw()
---- --diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
-------index 5f820c4..8db27e3 100644
----+--index 91392c7..e331694 100644
---- ----- a/Cpp/src/userInterface/UIfunctions.cpp
---- --+++ b/Cpp/src/userInterface/UIfunctions.cpp
-------@@ -56,7 +56,7 @@ uint64_t runSinglePositionPerformanceTest(std::string position, uint16_t depth,
------- 	while(searchdepth <= depth && (searchdepth < 14)) {
----+--@@ -24,47 +24,10 @@ static char figureNames[2][6] = {{'P', 'N', 'B', 'R', 'Q', 'K'},
----+-- 		{'p', 'n', 'b', 'r', 'q', 'k'},
----+-- };
----+-- 
----+---void putTableLine(std::ostream& out, int16_t value, std::string name) {
----+---	out << name << " & " << value << "\\\\ \\hline" << std::endl;
----+---}
----+-- 
----+---static int clearPageCounter = 0;
----+---
----+---void latexOutput(const chessPosition* pos, std::ostream& out, evaluationResult ev, int16_t eval) {
----+---
----+---	int16_t figureVal = calcFigureEvaluation(pos);
----+---	out << "\\begin{figure}[!htbp] " << std::endl;
----+---	out << "\\newgame" << std::endl;
----+---	out << "\\fenboard{"+chessPositionToFenString(*pos, false)+"}" << std::endl;
----+---
----+---	out << "\\begin{tabular}{ll}" << std::endl;
----+---	out << "\\raisebox{-.5\\height}{\\showboard}&   \\begin{tabular}{ l | c  }" << std::endl;
----+---
----+---	putTableLine(out, eval, "Total");
----+---	putTableLine(out, figureVal, "Material");
----+---	putTableLine(out, ev.PSQ-figureVal, "Piece Square Tables");
----+---	putTableLine(out, ev.mobility, "Mobility");
----+---	putTableLine(out, ev.kingSafety, "King Safety");
----+---	putTableLine(out, ev.bishoppair, "Bishop pair");
----+---	putTableLine(out, ev.staticPawn, "Pawn structure");
----+---	putTableLine(out, ev.passedPawn, "Passed pawns");
----+---	putTableLine(out, ev.rookOpenFiles, "Rooks on open files");
----+---	out << "\\end{tabular}" << std::endl;
----+---	out << "\\end{tabular}" << std::endl;
----+---	out << "\\end{figure}" << std::endl;
----+---	clearPageCounter++;
----+---	if(clearPageCounter == 3) {
----+---		out << "\\clearpage" << std::endl;
----+---		clearPageCounter = 0;
----+---	}
----+---}
----+-- 
----+---void latexOutput(std::string FEN, std::ostream& out) {
----+---	chessPosition pos = FENtoChessPosition(FEN);
----+---	int16_t eval = evaluation(&pos, -32000, 32000);
----+---	evaluationResult ev = getEvaluationResult();
----+---	latexOutput(&pos, out,  ev, eval);
----+---}
----+ -+
----++-+	std::vector<std::string> moveList;
----++-+	while(iterator != input.end()) {
----++-+		if("moves" !=*iterator) {
----++-+			moveList.push_back(*iterator);
----++- 		}
----++-+		iterator++;
----++-+	}
----+ -+
---- -- 
------- 		bool succeeded = false;
--------		int32_t eval = negamax(&c, searchdepth, alpha, beta, &bestMove);
-------+		int32_t eval = negamax(&c, 0, depth+3, searchdepth, alpha, beta, &bestMove);
---- -- 
------- 		if(useAspiration) {
------- 			if ((eval <= alpha)) {
----+-- uint8_t searchId = 0;
----+--diff --git a/Cpp/src/userInterface/UIlayer.hpp b/Cpp/src/userInterface/UIlayer.hpp
----+--index 8022c27..5f5d2d0 100644
----+----- a/Cpp/src/userInterface/UIlayer.hpp
----+--+++ b/Cpp/src/userInterface/UIlayer.hpp
----+--@@ -23,7 +23,6 @@ uint64_t stringToMove(std::string mv);
----+-- bool checkAndMakeMove(chessPosition& position, std::string move);
----+-- void runPerformanceTests();
----+-- uint64_t get_timestamp();
----+---void latexOutput(std::string FEN, std::ostream& out);
----+---void latexOutput(const chessPosition* pos, std::ostream& out, evaluationResult ev, int16_t eval);
----++-+	std::cout << fen << std::endl;
----+ -+
----+-- std::string moveToExtendedString(chessMove move, chessPosition position);
----+-- #endif /* USERINTERFACE_UILAYER_HPP_ */
---- --diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
-------index d56de05..50cf68d 100644
----+--index 153d6b8..a7b750c 100644
---- ----- a/Cpp/src/userInterface/UImainLoop.cpp
---- --+++ b/Cpp/src/userInterface/UImainLoop.cpp
-------@@ -39,12 +39,12 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
------- 	/*uint64_t goalNodes = 1800*maximal_time;
------- 	while((searchedNodes < goalNodes) && (depth < 31)) {*/
------- 	while(depth < 7){ //hacked to get repeatable results - there is a major bug hiding somewhere
--------		*eval = negamax(position, depth, alpha, beta, bestMove, true, false);
-------+		*eval = negamax(position, 0, depth+3, depth, alpha, beta, bestMove, true, false);
------- 
------- 		if(doAspiration) {
------- 			if ((*eval <= alpha) || (*eval >= beta)) {
------- 				//std::cout << "Aspiration window search failed, researching..." <<std::endl;
--------				*eval = negamax(position, depth, -32000, 32000, bestMove, true, false);
-------+				*eval = negamax(position, 0, depth+3, depth, -32000, 32000, bestMove, true, false);
------- 			}
------- 
------- 			alpha = *eval-50;
----+--@@ -18,6 +18,7 @@
----+-- #include <iomanip>
----+-- #include <userInterface/interfaceStructs.hpp>
----+-- #include <lib/moveGeneration/moveGeneration.hpp>
----+--+#include <logging/logger.hpp>
----+-- userInterface* UI;
----++-+	for(auto iterator = moveList.begin(); iterator != moveList.end(); iterator++) {
----++-+		std::cout << *iterator << std::endl;
----++-+	}
----+ - 
----+-- extern uint8_t searchId;
----+--@@ -85,6 +86,8 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----++--		if(UI->receiveForceMove()) {
----++--			chessMove bestMove;
----++--			uint32_t nodeCount;
----++--			uint64_t mtime;
----++--			int32_t eval = 0;
----++--			searchParameters params;
----++--			searchMove(&position, &bestMove, &nodeCount, &mtime, &eval, true, params);
----++--			makeMove(&bestMove, &position);
----++--			sendNewPosition(&position);
----++-+	free_position(&cposition);
----++-+	cposition = FENtoChessPosition(fen);
----++-+	for(std::string seg: moveList){
----++-+		//std::cout << seg << std::endl;
----++-+		if(!checkAndMakeMove(cposition, seg)){
----++-+			std::cout << "Illegal move detected" << std::endl;
----++- 		}
----++-+	}
----+ - 
----+-- 	//uint64_t goalNodes = 1800*maximal_time;
----+-- 	while(get_timestamp()-start_ts <= totalTime) {
----+--+		/*setTotalTime(100000000, start_ts);
----+--+		while(depth < 14) {*/
----+-- #endif
----+-- 		try{
----+-- 			chessMove localBestMove;
----+--@@ -148,6 +151,7 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----++--		std::string newPosition;
----++--		searchParameters params;
----++--		if(UI->receiveAnalyze(newPosition, params)){
----++--			std::cout << params.increment[0] << std::endl;
----++--			std::cout << params.increment[1] << std::endl;
----++--			std::cout << params.totalTime[0] << std::endl;
----++--			std::cout << params.totalTime[1] << std::endl;
----++--			chessMove bestMove;
----++--			uint32_t nodeCount;
----++--			uint64_t mtime;
----++--			int32_t eval = 0;
----++--			searchMove(&position, &bestMove, &nodeCount, &mtime, &eval, true, params);
----++--			std::cout << "Found move " << moveToString(bestMove, position) << std::endl;
----++--			UI->sendBestMove(moveToString(bestMove, position));
----++--			makeMove(&bestMove, &position);
----++--			int16_t e  = evaluation(&position, -32000, 32000);
----++--			evaluationResult res = getEvaluationResult();
----++--			std::cout << "Eval " << e << std::endl;
----++--			std::cout << "PSQ " << res.PSQ << std::endl;
----++--			std::cout << "mobility " << res.mobility << std::endl;
----++--			std::cout << "static pawn " << res.staticPawn << std::endl;
----++--			std::cout << "passed pawn " << res.passedPawn << std::endl;
----++--			std::cout << "rook files "  << res.rookOpenFiles << std::endl;
----++--			std::cout << "king safety " << res.kingSafety << std::endl;
----++--			std::cout << "bishop pair" << res.bishoppair << std::endl;
----++--			undoMove(&position);
----++-+}
----+ - 
----+-- 		*nodeCount = (data.totalNodes+getQuiescenceNodes());
----+-- 		UI->sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----+--+		logSearch(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----+-- 		depth++;
----+-- 		searchedNodes = searchedNodes+*nodeCount;
----+-- 		if(*eval > 29000) {
----+--@@ -192,6 +196,8 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----+-- 		std::cout << qindices[k] << " ";
----++-+int main() {
----++-+	initUserEvents();
----++-+	bool continueLoop = true;
----++-+	while(continueLoop) {
----++-+		userEvent ev = getNextUserEvent();
----++-+
----++-+		switch(ev.input) {
----++-+			case uci:
----++-+				handleUciInput(std::cout);
----++-+				break;
----++-+			case isready:
----++-+				handleIsReady(std::cout);
----++-+				break;
----++-+			case go:
----++-+				handleGo(ev.data);
----++-+				break;
----++-+			case position:
----++-+				handlePosition(ev.data);
----++-+				break;
----++-+			case stop:
----++-+				handleStop();
----++-+				break;
----++-+			case quit:
----++-+				continueLoop = false;
----++-+				break;
----++-+			default:
----++-+				std::cout << "Not yet implemented" << std::endl;
----++- 		}
----+ - 	}
----+-- 	std::cout << std::endl;*/
----+--+	int16_t neval = evaluation(position, -32000, 32000);
----+--+	latexOutput(position,  getEvaluationResult(), neval);
----+-- 	return depth;
----++-+	return 0;
----+ - }
----+ - 
---- --diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
-------index 408adf7..66d42fa 100644
----+--index fa98113..2908af8 100644
---- ----- a/chessGui/.idea/workspace.xml
---- --+++ b/chessGui/.idea/workspace.xml
-------@@ -92,21 +92,21 @@
----+--@@ -67,11 +67,7 @@
----+--           <provider selected="true" editor-type-id="text-editor">
----+--             <state relative-caret-position="1035">
----+--               <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
----+---              <folding>
----+---                <element signature="imports" expanded="false" />
----+---                <element signature="e#1121#1122#0" expanded="false" />
----+---                <element signature="e#1168#1169#0" expanded="false" />
----+---              </folding>
----+--+              <folding />
----+--             </state>
----+--           </provider>
----+--         </entry>
----+--@@ -81,21 +77,7 @@
----+--           <provider selected="true" editor-type-id="text-editor">
----+--             <state relative-caret-position="1290">
----+--               <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
----+---              <folding>
----+---                <element signature="imports" expanded="false" />
----+---                <element signature="e#1047#1048#0" expanded="false" />
----+---                <element signature="e#1117#1118#0" expanded="false" />
----+---                <element signature="e#1165#1166#0" expanded="false" />
----+---                <element signature="e#1229#1230#0" expanded="false" />
----+---                <element signature="e#1540#1541#0" expanded="false" />
----+---                <element signature="e#1607#1608#0" expanded="false" />
----+---                <element signature="e#3451#3452#0" expanded="false" />
----+---                <element signature="e#3517#3518#0" expanded="false" />
----+---                <element signature="e#6836#6837#0" expanded="false" />
----+---                <element signature="e#6888#6889#0" expanded="false" />
----+---                <element signature="e#7967#7968#0" expanded="false" />
----+---                <element signature="e#8015#8016#0" expanded="false" />
----+---              </folding>
----+--+              <folding />
----+--             </state>
---- --           </provider>
---- --         </entry>
-------       </file>
--------      <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
-------+      <file leaf-file-name="Main.java" pinned="false" current-in-tab="false">
----+--@@ -113,8 +95,8 @@
----+--       <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
---- --         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
---- --           <provider selected="true" editor-type-id="text-editor">
--------            <state relative-caret-position="0">
--------              <caret line="0" column="15" selection-start-line="0" selection-start-column="15" selection-end-line="42" selection-end-column="8" />
-------+            <state relative-caret-position="170">
-------+              <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
----+---            <state relative-caret-position="225">
----+---              <caret line="28" column="26" selection-start-line="28" selection-start-column="26" selection-end-line="28" selection-end-column="26" />
----+--+            <state relative-caret-position="585">
----+--+              <caret line="52" column="0" selection-start-line="52" selection-start-column="0" selection-end-line="52" selection-end-column="0" />
---- --               <folding />
---- --             </state>
---- --           </provider>
----+--@@ -125,11 +107,7 @@
----+--           <provider selected="true" editor-type-id="text-editor">
----+--             <state relative-caret-position="1845">
----+--               <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
----+---              <folding>
----+---                <element signature="imports" expanded="false" />
----+---                <element signature="e#5464#5465#0" expanded="false" />
----+---                <element signature="e#5490#5491#0" expanded="false" />
----+---              </folding>
----+--+              <folding />
----+--             </state>
----+--           </provider>
---- --         </entry>
-------       </file>
--------      <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="false">
-------+      <file leaf-file-name="UciProcessing.java" pinned="false" current-in-tab="true">
-------         <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----+--@@ -139,11 +117,7 @@
---- --           <provider selected="true" editor-type-id="text-editor">
--------            <state relative-caret-position="181">
--------              <caret line="26" column="11" selection-start-line="26" selection-start-column="11" selection-end-line="26" selection-end-column="11" />
-------+            <state relative-caret-position="206">
-------+              <caret line="115" column="37" selection-start-line="115" selection-start-column="37" selection-end-line="115" selection-end-column="37" />
-------               <folding />
----+--             <state relative-caret-position="855">
----+--               <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
----+---              <folding>
----+---                <element signature="imports" expanded="false" />
----+---                <element signature="e#2569#2570#0" expanded="false" />
----+---                <element signature="e#2602#2603#0" expanded="false" />
----+---              </folding>
----+--+              <folding />
---- --             </state>
---- --           </provider>
-------@@ -228,17 +228,16 @@
-------         <option value="$PROJECT_DIR$/src/core/Core.java" />
-------         <option value="$PROJECT_DIR$/src/PlayingGUI/PlayingController.java" />
-------         <option value="$PROJECT_DIR$/src/uciClient/uciEngineHandler.java" />
--------        <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
-------         <option value="$PROJECT_DIR$/src/sample/Main.java" />
-------+        <option value="$PROJECT_DIR$/src/uciClient/UciProcessing.java" />
-------       </list>
-------     </option>
-------   </component>
-------   <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
-------   <component name="ProjectFrameBounds">
--------    <option name="x" value="229" />
--------    <option name="y" value="99" />
--------    <option name="width" value="1910" />
--------    <option name="height" value="998" />
-------+    <option name="y" value="24" />
-------+    <option name="width" value="1920" />
-------+    <option name="height" value="1056" />
-------   </component>
-------   <component name="ProjectLevelVcsManager" settingsEditedManually="false">
-------     <OptionsSetting value="true" id="Add" />
-------@@ -601,7 +600,7 @@
-------     <option name="totallyTimeSpent" value="1302000" />
----+--         </entry>
----+--@@ -163,9 +137,7 @@
----+--           <provider selected="true" editor-type-id="text-editor">
----+--             <state relative-caret-position="240">
----+--               <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
----+---              <folding>
----+---                <element signature="imports" expanded="false" />
----+---              </folding>
----+--+              <folding />
----+--             </state>
----+--           </provider>
----+--         </entry>
----+--@@ -185,16 +157,7 @@
----+--           <provider selected="true" editor-type-id="text-editor">
----+--             <state relative-caret-position="180">
----+--               <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
----+---              <folding>
----+---                <element signature="e#492#493#0" expanded="false" />
----+---                <element signature="e#531#532#0" expanded="false" />
----+---                <element signature="e#575#576#0" expanded="false" />
----+---                <element signature="e#618#619#0" expanded="false" />
----+---                <element signature="e#677#678#0" expanded="false" />
----+---                <element signature="e#713#714#0" expanded="false" />
----+---                <element signature="e#773#774#0" expanded="false" />
----+---                <element signature="e#819#820#0" expanded="false" />
----+---              </folding>
----+--+              <folding />
----+--             </state>
----+--           </provider>
----+--         </entry>
----+--@@ -307,8 +270,6 @@
----+--     </navigator>
----+--     <panes>
----+--       <pane id="Scope" />
----+---      <pane id="Scratches" />
----+---      <pane id="PackagesPane" />
----+--       <pane id="ProjectPane">
----+--         <subPane>
----+--           <PATH>
----+--@@ -361,6 +322,8 @@
----+--           </PATH>
----+--         </subPane>
----+--       </pane>
----+--+      <pane id="PackagesPane" />
----+--+      <pane id="Scratches" />
----+--     </panes>
---- --   </component>
-------   <component name="ToolWindowManager">
--------    <frame x="229" y="99" width="1910" height="998" extended-state="1" />
-------+    <frame x="0" y="24" width="1920" height="1056" extended-state="6" />
-------     <editor active="false" />
----+--   <component name="PropertiesComponent">
----+--@@ -642,21 +605,17 @@
---- --     <layout>
---- --       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-------@@ -611,10 +610,10 @@
-------       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
----+--       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
----+---      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
---- --       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
---- --       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
--------      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.4172973" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
-------+      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----+---      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
---- --       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
---- --       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
--------      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15445027" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
-------+      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
----+---      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
----+---      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----+--+      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
---- --       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
---- --       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
---- --       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
-------@@ -995,26 +994,26 @@
----+--       <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----+---      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
----+--@@ -664,10 +623,14 @@
----+--       <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
----+--       <window_info id="Profiler" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
----+--+      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
----+--+      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
----+--+      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----+--       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
----+--       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
----+--+      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----+--     </layout>
----+--   </component>
----+--   <component name="Vcs.Log.UiProperties">
----+--@@ -914,14 +877,14 @@
----+--       </provider>
----+--     </entry>
----+--     <entry file="file://$PROJECT_DIR$/src/EditorGUI/editorgui.fxml">
----+--+      <provider editor-type-id="JavaFX-Scene-Builder">
----+--+        <state />
----+--+      </provider>
----+--       <provider selected="true" editor-type-id="text-editor">
----+--         <state relative-caret-position="270">
----+--           <caret line="18" column="28" selection-start-line="18" selection-start-column="28" selection-end-line="18" selection-end-column="28" />
---- --         </state>
---- --       </provider>
----+---      <provider editor-type-id="JavaFX-Scene-Builder">
----+---        <state />
----+---      </provider>
---- --     </entry>
--------    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
-------+    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
----+--     <entry file="file://$PROJECT_DIR$/src/EditorGUI/EditorGUI.java">
---- --       <provider selected="true" editor-type-id="text-editor">
--------        <state relative-caret-position="181">
--------          <caret line="26" column="11" selection-start-line="26" selection-start-column="11" selection-end-line="26" selection-end-column="11" />
-------+        <state relative-caret-position="1035">
-------+          <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
-------           <folding />
----+--@@ -966,34 +929,20 @@
----+--       </provider>
----+--     </entry>
----+--     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/playinggui.fxml">
----+--+      <provider editor-type-id="JavaFX-Scene-Builder">
----+--+        <state />
----+--+      </provider>
----+--       <provider selected="true" editor-type-id="text-editor">
----+--         <state relative-caret-position="679">
----+--           <caret line="59" column="90" selection-start-line="59" selection-start-column="90" selection-end-line="59" selection-end-column="90" />
---- --         </state>
---- --       </provider>
----+---      <provider editor-type-id="JavaFX-Scene-Builder">
----+---        <state />
----+---      </provider>
---- --     </entry>
--------    <entry file="file://$PROJECT_DIR$/src/core/Core.java">
-------+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----+--     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingController.java">
---- --       <provider selected="true" editor-type-id="text-editor">
--------        <state relative-caret-position="1035">
--------          <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
-------+        <state relative-caret-position="170">
-------+          <caret line="47" column="47" selection-start-line="47" selection-start-column="34" selection-end-line="47" selection-end-column="47" />
-------           <folding />
----+--         <state relative-caret-position="1290">
----+--           <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
----+---          <folding>
----+---            <element signature="imports" expanded="false" />
----+---            <element signature="e#1047#1048#0" expanded="false" />
----+---            <element signature="e#1117#1118#0" expanded="false" />
----+---            <element signature="e#1165#1166#0" expanded="false" />
----+---            <element signature="e#1229#1230#0" expanded="false" />
----+---            <element signature="e#1540#1541#0" expanded="false" />
----+---            <element signature="e#1607#1608#0" expanded="false" />
----+---            <element signature="e#3451#3452#0" expanded="false" />
----+---            <element signature="e#3517#3518#0" expanded="false" />
----+---            <element signature="e#6836#6837#0" expanded="false" />
----+---            <element signature="e#6888#6889#0" expanded="false" />
----+---            <element signature="e#7967#7968#0" expanded="false" />
----+---            <element signature="e#8015#8016#0" expanded="false" />
----+---          </folding>
----+--+          <folding />
---- --         </state>
---- --       </provider>
---- --     </entry>
--------    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----+--@@ -1001,11 +950,7 @@
----+--       <provider selected="true" editor-type-id="text-editor">
----+--         <state relative-caret-position="1035">
----+--           <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
----+---          <folding>
----+---            <element signature="imports" expanded="false" />
----+---            <element signature="e#1121#1122#0" expanded="false" />
----+---            <element signature="e#1168#1169#0" expanded="false" />
----+---          </folding>
----+--+          <folding />
----+--         </state>
----+--       </provider>
----+--     </entry>
----+--@@ -1017,15 +962,27 @@
----+--         </state>
----+--       </provider>
----+--     </entry>
----+--+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----+--+      <provider selected="true" editor-type-id="text-editor">
----+--+        <state relative-caret-position="585">
----+--+          <caret line="52" column="0" selection-start-line="52" selection-start-column="0" selection-end-line="52" selection-end-column="0" />
----+--+          <folding />
----+--+        </state>
----+--+      </provider>
----+--+    </entry>
---- --+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----+--+      <provider selected="true" editor-type-id="text-editor">
----+--+        <state relative-caret-position="1845">
----+--+          <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
----+--+          <folding />
----+--+        </state>
----+--+      </provider>
----+--+    </entry>
----+--     <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
---- --       <provider selected="true" editor-type-id="text-editor">
--------        <state relative-caret-position="0">
--------          <caret line="0" column="15" selection-start-line="0" selection-start-column="15" selection-end-line="42" selection-end-column="8" />
-------+        <state relative-caret-position="206">
-------+          <caret line="115" column="37" selection-start-line="115" selection-start-column="37" selection-end-line="115" selection-end-column="37" />
----+--         <state relative-caret-position="855">
----+--           <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
----+---          <folding>
----+---            <element signature="imports" expanded="false" />
----+---            <element signature="e#2569#2570#0" expanded="false" />
----+---            <element signature="e#2602#2603#0" expanded="false" />
----+---          </folding>
----+--+          <folding />
----+--         </state>
----+--       </provider>
----+--     </entry>
----+--@@ -1041,9 +998,7 @@
----+--       <provider selected="true" editor-type-id="text-editor">
----+--         <state relative-caret-position="240">
----+--           <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
----+---          <folding>
----+---            <element signature="imports" expanded="false" />
----+---          </folding>
----+--+          <folding />
----+--         </state>
----+--       </provider>
----+--     </entry>
----+--@@ -1059,35 +1014,6 @@
----+--       <provider selected="true" editor-type-id="text-editor">
----+--         <state relative-caret-position="180">
----+--           <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
----+---          <folding>
----+---            <element signature="e#492#493#0" expanded="false" />
----+---            <element signature="e#531#532#0" expanded="false" />
----+---            <element signature="e#575#576#0" expanded="false" />
----+---            <element signature="e#618#619#0" expanded="false" />
----+---            <element signature="e#677#678#0" expanded="false" />
----+---            <element signature="e#713#714#0" expanded="false" />
----+---            <element signature="e#773#774#0" expanded="false" />
----+---            <element signature="e#819#820#0" expanded="false" />
----+---          </folding>
----+---        </state>
----+---      </provider>
----+---    </entry>
----+---    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----+---      <provider selected="true" editor-type-id="text-editor">
----+---        <state relative-caret-position="1845">
----+---          <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
----+---          <folding>
----+---            <element signature="imports" expanded="false" />
----+---            <element signature="e#5464#5465#0" expanded="false" />
----+---            <element signature="e#5490#5491#0" expanded="false" />
----+---          </folding>
----+---        </state>
----+---      </provider>
----+---    </entry>
----+---    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----+---      <provider selected="true" editor-type-id="text-editor">
----+---        <state relative-caret-position="225">
----+---          <caret line="28" column="26" selection-start-line="28" selection-start-column="26" selection-end-line="28" selection-end-column="26" />
---- --           <folding />
---- --         </state>
---- --       </provider>
-------diff --git a/chessGui/src/uciClient/UciProcessing.java b/chessGui/src/uciClient/UciProcessing.java
-------index c0ed5c1..5a5f47e 100644
---------- a/chessGui/src/uciClient/UciProcessing.java
-------+++ b/chessGui/src/uciClient/UciProcessing.java
-------@@ -110,10 +110,10 @@ public class UciProcessing {
------- 
------- 
-------                 eval = vabiHandler.readBestmove(mv);
--------                if (eval > 25000) {
-------+                if (eval > 300) {
-------                     ret = 1;
-------                     break;
--------                } else if (eval < -25000) {
-------+                } else if (eval < -300) {
-------                     ret = -1;
-------                     break;
-------                 }
-------diff --git a/output b/output
-------deleted file mode 100644
-------index e69de29..0000000
----++- 
----++-diff --git a/Cpp/src/userInterface/userInterface.hpp b/Cpp/src/userInterface/userInterface.hpp
----++-index 9d8f390..48a9248 100644
----++---- a/Cpp/src/userInterface/userInterface.hpp
----++-+++ b/Cpp/src/userInterface/userInterface.hpp
----++-@@ -12,6 +12,7 @@
----++- #include <vector>
----++- #include "interfaceStructs.hpp"
----++- 
----++-+
----++- class userInterface {
----++- 	public:
----++- 		virtual void initialize()=0;
----+ -diff --git a/output b/output
----+ -deleted file mode 100644
----+ -index e69de29..0000000
----++-diff --git a/to_checkin.diff b/to_checkin.diff
----++-index f2f092d..ab68531 100644
----++---- a/to_checkin.diff
----++-+++ b/to_checkin.diff
----++-@@ -1,782 +0,0 @@
----++--diff --git a/Cpp/src/Search/negamax.cpp b/Cpp/src/Search/negamax.cpp
----++--index f60c727..12e53ab 100644
----++----- a/Cpp/src/Search/negamax.cpp
----++--+++ b/Cpp/src/Search/negamax.cpp
----++--@@ -135,15 +135,15 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++-- 			int16_t oldEval  = hashVal.eval;
----++-- 			if((depth <= hashVal.depth) && (oldEval > -10000) && (oldEval < 10000) && (oldEval != 0)){ //TODO: the != 0 is stupid, but somehwere something goes wrong with 3fold rep scores, so excluded ehre for safety
----++-- 				if( ((hashVal.flag == FAILHIGH) || (hashVal.flag == FULLSEARCH)) && (oldEval >= beta)){
----++---					setSearchId(searchId, position->zobristHash);
----++--+					setSearchId(searchId, position->zobristHash, hashVal.index);
----++-- 					return beta;
----++-- 				}
----++-- 				else if( ((hashVal.flag == FAILLOW) || (hashVal.flag == FULLSEARCH)) && (oldEval <= alpha)){
----++---					setSearchId(searchId, position->zobristHash);
----++--+					setSearchId(searchId, position->zobristHash, hashVal.index);
----++-- 					return alpha; //node will fail low
----++-- 				}
----++-- 				else if((hashVal.flag == FULLSEARCH)){ //TODO: this condition can be vastly improved
----++---					setSearchId(searchId, position->zobristHash);
----++--+					setSearchId(searchId, position->zobristHash, hashVal.index);
----++-- 					if(oldEval <= alpha){
----++-- 						return alpha;
----++-- 					}
----++--@@ -266,9 +266,7 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++-- 		undoMove(position);
----++-- 
----++-- 		if((alpha >= beta)) {
----++---			if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----++---				setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----++---			}
----++--+			setHashEntry(FAILHIGH, beta, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----++-- 			if(bestIndex != -1){
----++-- 				searchCounts.bestIndex[depth][bestIndex]++;
----++-- 			}
----++--@@ -317,13 +315,9 @@ int16_t negamax(chessPosition* position, uint16_t ply, uint16_t max_ply, int16_t
----++-- 
----++-- 
----++-- 	if(foundGoodMove) {
----++---		if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----++---			setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----++---		}
----++--+		setHashEntry(FULLSEARCH, alpha, depth, searchId, (bestMove->sourceField | (bestMove->targetField << 8)), position->zobristHash);
----++-- 	} else { //we failed low, remember as well
----++---		if((depth >= hashVal.depth) || (searchId != hashVal.searchId)) {
----++-- 			setHashEntry(FAILLOW, alpha, depth, searchId, 0, position->zobristHash);
----++---		}
----++-- 	}
----++-- 
----++-- 	qmvStack.release();
----++--diff --git a/Cpp/src/Vabi.cpp b/Cpp/src/Vabi.cpp
----++--index 5d9bd3d..4456608 100644
----++----- a/Cpp/src/Vabi.cpp
----++--+++ b/Cpp/src/Vabi.cpp
----++--@@ -69,7 +69,11 @@ int main() {
----++-- 	for(uint32_t index=0; index < 7; index++) {
----++-- 		for(uint32_t t=0; t < 2; t++) {
----++-- 			for(uint32_t k=0; k < 64; k++) {
----++--+#ifdef EXPERIMENTAL
----++--+					completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]/2+figureValues[index])) << 16);
----++--+#else
----++-- 					completePieceTables[index][t][k] = ((uint16_t) (pieceTables[index][t][k]/2+figureValues[index])) |  ( ((uint16_t) (endGamepieceTables[index][t][k]+figureValues[index])) << 16);
----++--+#endif
----++-- 			}
----++-- 		}
----++-- 	}
----++--@@ -86,8 +90,8 @@ int main() {
----++-- 		latexOutput(line, out);
----++-- 	}*/
----++-- 
----++---	/*runPerformanceTests();
----++---	return 0;*/
----++--+	runPerformanceTests();
----++--+	return 0;
----++-- 	/*std::cout << testPerftTestSuite().passed << std::endl;
----++-- 	return 0;*/
----++-- 	UIloop();
----++--diff --git a/Cpp/src/hashTables/hashTables.hpp b/Cpp/src/hashTables/hashTables.hpp
----++--index aded8bc..feea41b 100644
----++----- a/Cpp/src/hashTables/hashTables.hpp
----++--+++ b/Cpp/src/hashTables/hashTables.hpp
----++--@@ -9,7 +9,7 @@
----++-- #define HASHTABLES_HASHTABLES_HPP_
----++-- 
----++-- 
----++---#define HASHSIZE 0x3FFFFFF //needs to be a power of 2!
----++--+#define HASHSIZE 0xFFFFFF //needs to be a power of 2!
----++-- 
----++-- void fillZobristHash();
----++-- uint64_t calcZobristHash(const chessPosition* position);
----++--@@ -18,6 +18,6 @@ void setHashEntry(hashEntry entry, uint64_t zobristKey);
----++-- uint16_t getHashMove(uint64_t zobristKey);
----++-- void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId);
----++-- void setHashEntry(hashFlag flag, int16_t eval, uint8_t depth, uint8_t searchId, uint16_t bestMove, uint64_t key);
----++---void setSearchId(uint8_t searchId, uint64_t key);
----++--+void setSearchId(uint8_t searchId, uint64_t key, uint16_t index);
----++-- 
----++-- #endif /* HASHTABLES_HASHTABLES_HPP_ */
----++--diff --git a/Cpp/src/hashTables/zobristHash.cpp b/Cpp/src/hashTables/zobristHash.cpp
----++--index 1406c4b..b5b240c 100644
----++----- a/Cpp/src/hashTables/zobristHash.cpp
----++--+++ b/Cpp/src/hashTables/zobristHash.cpp
----++--@@ -12,54 +12,99 @@
----++-- #include <assert.h>
----++-- #include <iostream>
----++-- 
----++---static hashEntry moveOrderingHashTable[HASHSIZE+1];
----++--+static hashBucket moveOrderingHashTable[HASHSIZE+1];
----++-- 
----++-- uint64_t zobristHash[7][2][64];
----++-- uint64_t movingSideHash[2];
----++-- uint64_t castlingHash[16];
----++-- uint64_t enpassantHash[9];
----++-- 
----++--+
----++--+static uint16_t permutationIndex = 0;
----++--+
----++--+
----++--+static uint16_t permutations[4][4] = {{0,1,2,3}, {1,2,3,0}, {2,3,0,1}, {3,0,1,2}};
----++--+
----++--+
----++--+
----++--+
----++-- //TODO: somehow force-inline these functions everywhere
----++-- 
----++-- hashEntry getHashTableEntry(uint64_t zobristKey) {
----++---	return moveOrderingHashTable[zobristKey & HASHSIZE];
----++---}
----++--+	hashBucket current = moveOrderingHashTable[zobristKey & HASHSIZE];
----++-- 
----++---void setHashEntry(hashEntry entry, uint64_t zobristKey){
----++---	moveOrderingHashTable[zobristKey & HASHSIZE] = entry;
----++---}
----++--+	hashEntry ret = current.hashData[0];
----++-- 
----++---void setSearchId(uint8_t searchId, uint64_t key) {
----++---	moveOrderingHashTable[key & HASHSIZE].searchId = searchId;
----++--+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----++--+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----++-- 
----++--+	for(uint8_t ind=1; ind < 4; ind++){
----++--+		hashEntry entry = current.hashData[ind];
----++--+		if((entry.hashHighBits == zobristHigher) && (entry.hashLower == zobristLower)){
----++--+			ret = entry;
----++--+		}
----++--+	}
----++--+	return ret;
----++--+}
----++--+
----++--+void setSearchId(uint8_t searchId, uint64_t key, uint16_t index) {
----++--+	moveOrderingHashTable[key & HASHSIZE].hashData[index].searchId = searchId;
----++-- }
----++-- 
----++-- void setHashEntry(hashFlag flag, int16_t eval, uint8_t depth, uint8_t searchId, uint16_t bestMove, uint64_t key){
----++---	hashEntry entry;
----++---	entry.flag = flag;
----++---	entry.eval  = eval;
----++---	entry.depth = depth;
----++---	entry.searchId = searchId;
----++---	entry.bestMove = bestMove;
----++---	entry.hashHighBits = (uint32_t) (key >> 32);
----++---	entry.hashLower    = (uint16_t) (((uint32_t) (key & 0xFFFFFFFF)) >> 16);
----++---	moveOrderingHashTable[key & HASHSIZE] = entry;
----++--+	hashBucket* current = &moveOrderingHashTable[key & HASHSIZE];
----++--+
----++--+	for(uint8_t ind=0; ind < 4; ind++){
----++--+		hashEntry* entry = &current->hashData[permutations[permutationIndex][ind]];
----++--+		if((entry->depth <= depth) || (entry->searchId != searchId)) {
----++--+			entry->flag = flag;
----++--+			entry->eval  = eval;
----++--+			entry->depth = depth;
----++--+			entry->searchId = searchId;
----++--+			entry->bestMove = bestMove;
----++--+			entry->hashHighBits = (uint32_t) (key >> 32);
----++--+			entry->hashLower    = (uint16_t) (((uint32_t) (key & 0xFFFFFFFF)) >> 16);
----++--+			entry->index        = permutations[permutationIndex][ind];
----++--+			break;
----++--+		}
----++--+	}
----++--+	permutationIndex = (permutationIndex+1) & 3;
----++-- }
----++-- 
----++-- uint16_t getHashMove(uint64_t zobristKey){
----++---	return moveOrderingHashTable[zobristKey & HASHSIZE].bestMove;
----++--+	hashBucket* current = &moveOrderingHashTable[zobristKey & HASHSIZE];
----++--+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----++--+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----++--+	for(uint8_t ind=0; ind < 4; ind++){
----++--+		hashEntry* entry = &current->hashData[ind];
----++--+		if ((entry->hashHighBits == zobristHigher) && (entry->hashLower == zobristLower)) {
----++--+			return entry->bestMove;
----++--+		}
----++--+	}
----++--+	return 0;
----++--+
----++-- }
----++-- 
----++-- void setHashMove(uint16_t move, uint64_t zobristKey, uint8_t searchId) {
----++---	if(moveOrderingHashTable[zobristKey & HASHSIZE].searchId != searchId) {
----++---		moveOrderingHashTable[zobristKey & HASHSIZE].bestMove = move;
----++---		moveOrderingHashTable[zobristKey & HASHSIZE].depth    = 0;
----++--+	hashBucket* current = &moveOrderingHashTable[zobristKey & HASHSIZE];
----++--+	uint32_t zobristHigher = (uint32_t) (zobristKey  >> 32);
----++--+	uint16_t zobristLower  = (uint16_t) (((uint32_t) (zobristKey  & 0xFFFFFFFF)) >> 16);
----++--+	for(uint8_t ind=0; ind < 4; ind++){
----++--+		hashEntry* entry = &current->hashData[permutations[permutationIndex][ind]];
----++--+		if ((entry->searchId != searchId)){
----++--+			entry->searchId = searchId;
----++--+			entry->depth    = 0;
----++--+			entry->bestMove = move;
----++--+			entry->hashHighBits = zobristHigher;
----++--+			entry->hashLower    = zobristLower;
----++--+		}
----++-- 	}
----++--+	permutationIndex = (permutationIndex+1) & 3;
----++-- }
----++-- 
----++-- 
----++-- void clearHashTables() {
----++---	memset(moveOrderingHashTable, 0, sizeof(hashEntry)*(HASHSIZE+1));
----++--+	memset(moveOrderingHashTable, 0, sizeof(hashBucket)*(HASHSIZE+1));
----++-- }
----++-- 
----++-- void fillZobristHash(){
----++--diff --git a/Cpp/src/lib/Defines/pieceTables.cpp b/Cpp/src/lib/Defines/pieceTables.cpp
----++--index 276a2a6..68809d1 100644
----++----- a/Cpp/src/lib/Defines/pieceTables.cpp
----++--+++ b/Cpp/src/lib/Defines/pieceTables.cpp
----++--@@ -7,7 +7,7 @@
----++-- 
----++-- #include <stdint.h>
----++-- 
----++---
----++--+//TODO: We are actually using 1/2 these values - change all values here instead!
----++-- 
----++-- int16_t pieceTables[7][2][64] = {
----++-- 		{
----++--@@ -254,12 +254,12 @@ int16_t endGamepieceTables[7][2][64] = {
----++-- 						-15,-5,0,0,0,0,-5,-15,
----++-- 						-10,-5,0,0,0,0,-5,-10,
----++-- 						-15,-5,0,0,0,0,-5,15,
----++---						30,30,40,40,40,40,30,30,
----++--+						10,20,20,20,20,20,20,10,
----++-- 						10,20,20,20,20,20,20,10
----++-- 				},
----++-- 				{ //black rooks
----++-- 						10,20,20,20,20,20,20,10,
----++---						30,30,40,40,40,40,30,30,
----++--+						10,20,20,20,20,20,20,10,
----++-- 						0,0,0,0,0,0,0,0,
----++-- 						0,0,0,0,0,0,0,0,
----++-- 						-15,-5,0,0,0,0,-5,-15,
----++--@@ -276,13 +276,13 @@ int16_t endGamepieceTables[7][2][64] = {
----++-- 						-15,-5,10,30,30,10,-5,-15,
----++-- 						-10,-5,5,20,20,5,-5,-10,
----++-- 						-15,-5,10,15,15,10,-5,15,
----++---						30,30,40,40,40,40,30,30,
----++--+						-20,-10,10,15,15,10,-10,-20,
----++-- 						0,10,20,20,20,20,10,0
----++-- 
----++-- 				},
----++-- 				{ //black queens
----++-- 						0,10,20,20,20,20,10,0,
----++---						30,30,40,40,40,40,30,30,
----++--+						-20,-10,10,15,15,10,-10,-20,
----++-- 						-15,-5,10,15,15,10,-5,15,
----++-- 						-10,-5,5,20,20,5,-5,-10,
----++-- 						-15,-5,10,30,30,10,-5,-15,
----++--@@ -293,27 +293,25 @@ int16_t endGamepieceTables[7][2][64] = {
----++-- 		},
----++-- 		{
----++-- 				{ //white kings
----++---						-100,-70,-40,-25,-25,-40,-70,-100,
----++---						-70,-50,-30,-10,-10,-30,-50,-70,
----++---						-40,-30,-10, 10, 10,-10,-30,-40,
----++---						-25,-10, 10, 30, 30, 10,-10,-25,
----++---						-25,-10, 10, 30, 30, 10,-10,-25,
----++---						-40,-30,-10, 10, 10,-10,-30,-40,
----++---						-70,-50,-30,-10,-10,-30,-50,-70,
----++---						-100,-70,-40,-25,-25,-40,-70,-100,
----++--+						-200,-140,-80,-50,-50,-80,-140,-200,
----++--+						-140,-100,-60,-20,-20,-60,-100,-140,
----++--+						-80,-60,-20, 20, 20,-20,-60,-80,
----++--+						-50,-20, 20, 60, 60, 20,-20,-50,
----++--+						-50,-20, 20, 60, 60, 20,-20,-50,
----++--+						-80,-60,-20, 20, 20,-20,-60,-80,
----++--+						-140,-100,-60,-20,-20,-60,-100,-140,
----++--+						-200,-140,-80,-50,-50,-80,-140,-200,
----++-- 				},
----++-- 				{ //black kings
----++---						-100,-70,-40,-25,-25,-40,-70,-100,
----++---						-70,-50,-30,-10,-10,-30,-50,-70,
----++---						-40,-30,-10, 10, 10,-10,-30,-40,
----++---						-25,-10, 10, 30, 30, 10,-10,-25,
----++---						-25,-10, 10, 30, 30, 10,-10,-25,
----++---						-40,-30,-10, 10, 10,-10,-30,-40,
----++---						-70,-50,-30,-10,-10,-30,-50,-70,
----++---						-100,-70,-40,-25,-25,-40,-70,-100,
----++--+						200,-140,-80,-50,-50,-80,-140,-200,
----++--+						-140,-100,-60,-20,-20,-60,-100,-140,
----++--+						-80,-60,-20, 20, 20,-20,-60,-80,
----++--+						-50,-20, 20, 60, 60, 20,-20,-50,
----++--+						-50,-20, 20, 60, 60, 20,-20,-50,
----++--+						-80,-60,-20, 20, 20,-20,-60,-80,
----++--+						-140,-100,-60,-20,-20,-60,-100,-140,
----++--+						-200,-140,-80,-50,-50,-80,-140,-200,
----++-- 				}
----++---
----++---
----++-- 		},
----++-- 		{			//non-captures
----++-- 					{
----++--@@ -336,10 +334,7 @@ int16_t endGamepieceTables[7][2][64] = {
----++-- 							0,0,0,0,0,0,0,0,
----++-- 							0,0,0,0,0,0,0,0
----++-- 					}
----++---
----++-- 			}
----++---
----++---
----++-- };
----++-- 
----++-- int32_t completePieceTables[7][2][64];
----++--diff --git a/Cpp/src/lib/Evaluation/evaluation.cpp b/Cpp/src/lib/Evaluation/evaluation.cpp
----++--index 64cf5d8..0d33e3d 100644
----++----- a/Cpp/src/lib/Evaluation/evaluation.cpp
----++--+++ b/Cpp/src/lib/Evaluation/evaluation.cpp
----++--@@ -22,7 +22,7 @@ evaluationResult getEvaluationResult(){
----++-- 	return result;
----++-- }
----++-- 
----++---//std::ofstream out("/home/vabi/TeX/Chess/positions.tex");
----++--+
----++-- 
----++-- uint16_t taperingValues[81] = {  0,  0,  0,  0,  0,  0,  0,  0,
----++-- 						       	 0,  0,  0,  0,  0,  0,  0,  0,
----++--diff --git a/Cpp/src/lib/basics.hpp b/Cpp/src/lib/basics.hpp
----++--index fd2cb6f..2bd8e39 100644
----++----- a/Cpp/src/lib/basics.hpp
----++--+++ b/Cpp/src/lib/basics.hpp
----++--@@ -66,6 +66,8 @@ struct chessPosition {
----++-- 
----++-- enum hashFlag: uint16_t {FULLSEARCH=0,FAILLOW=1,FAILHIGH=2};
----++-- 
----++--+
----++--+
----++-- struct hashEntry{
----++-- 	uint32_t hashHighBits;
----++-- 	uint16_t hashLower;
----++--@@ -74,8 +76,13 @@ struct hashEntry{
----++-- 	uint16_t eval;
----++-- 	uint8_t depth;
----++-- 	uint8_t searchId;
----++--+	uint16_t index;
----++-- } __attribute__((packed));
----++-- 
----++--+struct hashBucket{
----++--+	hashEntry hashData[4];
----++--+};
----++--+
----++-- class timeoutException: public std::exception
----++-- {
----++--   virtual const char* what() const throw()
----++--diff --git a/Cpp/src/userInterface/UIfunctions.cpp b/Cpp/src/userInterface/UIfunctions.cpp
----++--index 91392c7..e331694 100644
----++----- a/Cpp/src/userInterface/UIfunctions.cpp
----++--+++ b/Cpp/src/userInterface/UIfunctions.cpp
----++--@@ -24,47 +24,10 @@ static char figureNames[2][6] = {{'P', 'N', 'B', 'R', 'Q', 'K'},
----++-- 		{'p', 'n', 'b', 'r', 'q', 'k'},
----++-- };
----++-- 
----++---void putTableLine(std::ostream& out, int16_t value, std::string name) {
----++---	out << name << " & " << value << "\\\\ \\hline" << std::endl;
----++---}
----++-- 
----++---static int clearPageCounter = 0;
----++---
----++---void latexOutput(const chessPosition* pos, std::ostream& out, evaluationResult ev, int16_t eval) {
----++---
----++---	int16_t figureVal = calcFigureEvaluation(pos);
----++---	out << "\\begin{figure}[!htbp] " << std::endl;
----++---	out << "\\newgame" << std::endl;
----++---	out << "\\fenboard{"+chessPositionToFenString(*pos, false)+"}" << std::endl;
----++---
----++---	out << "\\begin{tabular}{ll}" << std::endl;
----++---	out << "\\raisebox{-.5\\height}{\\showboard}&   \\begin{tabular}{ l | c  }" << std::endl;
----++---
----++---	putTableLine(out, eval, "Total");
----++---	putTableLine(out, figureVal, "Material");
----++---	putTableLine(out, ev.PSQ-figureVal, "Piece Square Tables");
----++---	putTableLine(out, ev.mobility, "Mobility");
----++---	putTableLine(out, ev.kingSafety, "King Safety");
----++---	putTableLine(out, ev.bishoppair, "Bishop pair");
----++---	putTableLine(out, ev.staticPawn, "Pawn structure");
----++---	putTableLine(out, ev.passedPawn, "Passed pawns");
----++---	putTableLine(out, ev.rookOpenFiles, "Rooks on open files");
----++---	out << "\\end{tabular}" << std::endl;
----++---	out << "\\end{tabular}" << std::endl;
----++---	out << "\\end{figure}" << std::endl;
----++---	clearPageCounter++;
----++---	if(clearPageCounter == 3) {
----++---		out << "\\clearpage" << std::endl;
----++---		clearPageCounter = 0;
----++---	}
----++---}
----++-- 
----++---void latexOutput(std::string FEN, std::ostream& out) {
----++---	chessPosition pos = FENtoChessPosition(FEN);
----++---	int16_t eval = evaluation(&pos, -32000, 32000);
----++---	evaluationResult ev = getEvaluationResult();
----++---	latexOutput(&pos, out,  ev, eval);
----++---}
----++--+
----++--+
----++-- 
----++-- 
----++-- uint8_t searchId = 0;
----++--diff --git a/Cpp/src/userInterface/UIlayer.hpp b/Cpp/src/userInterface/UIlayer.hpp
----++--index 8022c27..5f5d2d0 100644
----++----- a/Cpp/src/userInterface/UIlayer.hpp
----++--+++ b/Cpp/src/userInterface/UIlayer.hpp
----++--@@ -23,7 +23,6 @@ uint64_t stringToMove(std::string mv);
----++-- bool checkAndMakeMove(chessPosition& position, std::string move);
----++-- void runPerformanceTests();
----++-- uint64_t get_timestamp();
----++---void latexOutput(std::string FEN, std::ostream& out);
----++---void latexOutput(const chessPosition* pos, std::ostream& out, evaluationResult ev, int16_t eval);
----++--+
----++-- std::string moveToExtendedString(chessMove move, chessPosition position);
----++-- #endif /* USERINTERFACE_UILAYER_HPP_ */
----++--diff --git a/Cpp/src/userInterface/UImainLoop.cpp b/Cpp/src/userInterface/UImainLoop.cpp
----++--index 153d6b8..a7b750c 100644
----++----- a/Cpp/src/userInterface/UImainLoop.cpp
----++--+++ b/Cpp/src/userInterface/UImainLoop.cpp
----++--@@ -18,6 +18,7 @@
----++-- #include <iomanip>
----++-- #include <userInterface/interfaceStructs.hpp>
----++-- #include <lib/moveGeneration/moveGeneration.hpp>
----++--+#include <logging/logger.hpp>
----++-- userInterface* UI;
----++-- 
----++-- extern uint8_t searchId;
----++--@@ -85,6 +86,8 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----++-- 
----++-- 	//uint64_t goalNodes = 1800*maximal_time;
----++-- 	while(get_timestamp()-start_ts <= totalTime) {
----++--+		/*setTotalTime(100000000, start_ts);
----++--+		while(depth < 14) {*/
----++-- #endif
----++-- 		try{
----++-- 			chessMove localBestMove;
----++--@@ -148,6 +151,7 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----++-- 
----++-- 		*nodeCount = (data.totalNodes+getQuiescenceNodes());
----++-- 		UI->sendSearchInfo(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----++--+		logSearch(*nodeCount, *mtime, *eval, depth, moveToString(*bestMove, *position));
----++-- 		depth++;
----++-- 		searchedNodes = searchedNodes+*nodeCount;
----++-- 		if(*eval > 29000) {
----++--@@ -192,6 +196,8 @@ uint32_t searchMove(chessPosition* position, chessMove* bestMove, uint32_t maxim
----++-- 		std::cout << qindices[k] << " ";
----++-- 	}
----++-- 	std::cout << std::endl;*/
----++--+	int16_t neval = evaluation(position, -32000, 32000);
----++--+	latexOutput(position,  getEvaluationResult(), neval);
----++-- 	return depth;
----++-- }
----++-- 
----++--diff --git a/chessGui/.idea/workspace.xml b/chessGui/.idea/workspace.xml
----++--index fa98113..2908af8 100644
----++----- a/chessGui/.idea/workspace.xml
----++--+++ b/chessGui/.idea/workspace.xml
----++--@@ -67,11 +67,7 @@
----++--           <provider selected="true" editor-type-id="text-editor">
----++--             <state relative-caret-position="1035">
----++--               <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
----++---              <folding>
----++---                <element signature="imports" expanded="false" />
----++---                <element signature="e#1121#1122#0" expanded="false" />
----++---                <element signature="e#1168#1169#0" expanded="false" />
----++---              </folding>
----++--+              <folding />
----++--             </state>
----++--           </provider>
----++--         </entry>
----++--@@ -81,21 +77,7 @@
----++--           <provider selected="true" editor-type-id="text-editor">
----++--             <state relative-caret-position="1290">
----++--               <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
----++---              <folding>
----++---                <element signature="imports" expanded="false" />
----++---                <element signature="e#1047#1048#0" expanded="false" />
----++---                <element signature="e#1117#1118#0" expanded="false" />
----++---                <element signature="e#1165#1166#0" expanded="false" />
----++---                <element signature="e#1229#1230#0" expanded="false" />
----++---                <element signature="e#1540#1541#0" expanded="false" />
----++---                <element signature="e#1607#1608#0" expanded="false" />
----++---                <element signature="e#3451#3452#0" expanded="false" />
----++---                <element signature="e#3517#3518#0" expanded="false" />
----++---                <element signature="e#6836#6837#0" expanded="false" />
----++---                <element signature="e#6888#6889#0" expanded="false" />
----++---                <element signature="e#7967#7968#0" expanded="false" />
----++---                <element signature="e#8015#8016#0" expanded="false" />
----++---              </folding>
----++--+              <folding />
----++--             </state>
----++--           </provider>
----++--         </entry>
----++--@@ -113,8 +95,8 @@
----++--       <file leaf-file-name="Main.java" pinned="false" current-in-tab="true">
----++--         <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----++--           <provider selected="true" editor-type-id="text-editor">
----++---            <state relative-caret-position="225">
----++---              <caret line="28" column="26" selection-start-line="28" selection-start-column="26" selection-end-line="28" selection-end-column="26" />
----++--+            <state relative-caret-position="585">
----++--+              <caret line="52" column="0" selection-start-line="52" selection-start-column="0" selection-end-line="52" selection-end-column="0" />
----++--               <folding />
----++--             </state>
----++--           </provider>
----++--@@ -125,11 +107,7 @@
----++--           <provider selected="true" editor-type-id="text-editor">
----++--             <state relative-caret-position="1845">
----++--               <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
----++---              <folding>
----++---                <element signature="imports" expanded="false" />
----++---                <element signature="e#5464#5465#0" expanded="false" />
----++---                <element signature="e#5490#5491#0" expanded="false" />
----++---              </folding>
----++--+              <folding />
----++--             </state>
----++--           </provider>
----++--         </entry>
----++--@@ -139,11 +117,7 @@
----++--           <provider selected="true" editor-type-id="text-editor">
----++--             <state relative-caret-position="855">
----++--               <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
----++---              <folding>
----++---                <element signature="imports" expanded="false" />
----++---                <element signature="e#2569#2570#0" expanded="false" />
----++---                <element signature="e#2602#2603#0" expanded="false" />
----++---              </folding>
----++--+              <folding />
----++--             </state>
----++--           </provider>
----++--         </entry>
----++--@@ -163,9 +137,7 @@
----++--           <provider selected="true" editor-type-id="text-editor">
----++--             <state relative-caret-position="240">
----++--               <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
----++---              <folding>
----++---                <element signature="imports" expanded="false" />
----++---              </folding>
----++--+              <folding />
----++--             </state>
----++--           </provider>
----++--         </entry>
----++--@@ -185,16 +157,7 @@
----++--           <provider selected="true" editor-type-id="text-editor">
----++--             <state relative-caret-position="180">
----++--               <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
----++---              <folding>
----++---                <element signature="e#492#493#0" expanded="false" />
----++---                <element signature="e#531#532#0" expanded="false" />
----++---                <element signature="e#575#576#0" expanded="false" />
----++---                <element signature="e#618#619#0" expanded="false" />
----++---                <element signature="e#677#678#0" expanded="false" />
----++---                <element signature="e#713#714#0" expanded="false" />
----++---                <element signature="e#773#774#0" expanded="false" />
----++---                <element signature="e#819#820#0" expanded="false" />
----++---              </folding>
----++--+              <folding />
----++--             </state>
----++--           </provider>
----++--         </entry>
----++--@@ -307,8 +270,6 @@
----++--     </navigator>
----++--     <panes>
----++--       <pane id="Scope" />
----++---      <pane id="Scratches" />
----++---      <pane id="PackagesPane" />
----++--       <pane id="ProjectPane">
----++--         <subPane>
----++--           <PATH>
----++--@@ -361,6 +322,8 @@
----++--           </PATH>
----++--         </subPane>
----++--       </pane>
----++--+      <pane id="PackagesPane" />
----++--+      <pane id="Scratches" />
----++--     </panes>
----++--   </component>
----++--   <component name="PropertiesComponent">
----++--@@ -642,21 +605,17 @@
----++--     <layout>
----++--       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----++--       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
----++---      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
----++---      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----++---      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
----++---      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----++--+      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.15364583" sideWeight="0.6703755" order="0" side_tool="false" content_ui="combo" />
----++--       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----++--       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----++---      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
----++--@@ -664,10 +623,14 @@
----++--       <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
----++--       <window_info id="Profiler" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
----++--+      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.26754832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
----++--+      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.34994912" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
----++--+      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3926755" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
----++--       <window_info id="JetGradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
----++--       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
----++--+      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960325" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
----++--     </layout>
----++--   </component>
----++--   <component name="Vcs.Log.UiProperties">
----++--@@ -914,14 +877,14 @@
----++--       </provider>
----++--     </entry>
----++--     <entry file="file://$PROJECT_DIR$/src/EditorGUI/editorgui.fxml">
----++--+      <provider editor-type-id="JavaFX-Scene-Builder">
----++--+        <state />
----++--+      </provider>
----++--       <provider selected="true" editor-type-id="text-editor">
----++--         <state relative-caret-position="270">
----++--           <caret line="18" column="28" selection-start-line="18" selection-start-column="28" selection-end-line="18" selection-end-column="28" />
----++--         </state>
----++--       </provider>
----++---      <provider editor-type-id="JavaFX-Scene-Builder">
----++---        <state />
----++---      </provider>
----++--     </entry>
----++--     <entry file="file://$PROJECT_DIR$/src/EditorGUI/EditorGUI.java">
----++--       <provider selected="true" editor-type-id="text-editor">
----++--@@ -966,34 +929,20 @@
----++--       </provider>
----++--     </entry>
----++--     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/playinggui.fxml">
----++--+      <provider editor-type-id="JavaFX-Scene-Builder">
----++--+        <state />
----++--+      </provider>
----++--       <provider selected="true" editor-type-id="text-editor">
----++--         <state relative-caret-position="679">
----++--           <caret line="59" column="90" selection-start-line="59" selection-start-column="90" selection-end-line="59" selection-end-column="90" />
----++--         </state>
----++--       </provider>
----++---      <provider editor-type-id="JavaFX-Scene-Builder">
----++---        <state />
----++---      </provider>
----++--     </entry>
----++--     <entry file="file://$PROJECT_DIR$/src/PlayingGUI/PlayingController.java">
----++--       <provider selected="true" editor-type-id="text-editor">
----++--         <state relative-caret-position="1290">
----++--           <caret line="106" column="54" selection-start-line="106" selection-start-column="54" selection-end-line="106" selection-end-column="54" />
----++---          <folding>
----++---            <element signature="imports" expanded="false" />
----++---            <element signature="e#1047#1048#0" expanded="false" />
----++---            <element signature="e#1117#1118#0" expanded="false" />
----++---            <element signature="e#1165#1166#0" expanded="false" />
----++---            <element signature="e#1229#1230#0" expanded="false" />
----++---            <element signature="e#1540#1541#0" expanded="false" />
----++---            <element signature="e#1607#1608#0" expanded="false" />
----++---            <element signature="e#3451#3452#0" expanded="false" />
----++---            <element signature="e#3517#3518#0" expanded="false" />
----++---            <element signature="e#6836#6837#0" expanded="false" />
----++---            <element signature="e#6888#6889#0" expanded="false" />
----++---            <element signature="e#7967#7968#0" expanded="false" />
----++---            <element signature="e#8015#8016#0" expanded="false" />
----++---          </folding>
----++--+          <folding />
----++--         </state>
----++--       </provider>
----++--     </entry>
----++--@@ -1001,11 +950,7 @@
----++--       <provider selected="true" editor-type-id="text-editor">
----++--         <state relative-caret-position="1035">
----++--           <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
----++---          <folding>
----++---            <element signature="imports" expanded="false" />
----++---            <element signature="e#1121#1122#0" expanded="false" />
----++---            <element signature="e#1168#1169#0" expanded="false" />
----++---          </folding>
----++--+          <folding />
----++--         </state>
----++--       </provider>
----++--     </entry>
----++--@@ -1017,15 +962,27 @@
----++--         </state>
----++--       </provider>
----++--     </entry>
----++--+    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----++--+      <provider selected="true" editor-type-id="text-editor">
----++--+        <state relative-caret-position="585">
----++--+          <caret line="52" column="0" selection-start-line="52" selection-start-column="0" selection-end-line="52" selection-end-column="0" />
----++--+          <folding />
----++--+        </state>
----++--+      </provider>
----++--+    </entry>
----++--+    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----++--+      <provider selected="true" editor-type-id="text-editor">
----++--+        <state relative-caret-position="1845">
----++--+          <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
----++--+          <folding />
----++--+        </state>
----++--+      </provider>
----++--+    </entry>
----++--     <entry file="file://$PROJECT_DIR$/src/uciClient/uciEngineHandler.java">
----++--       <provider selected="true" editor-type-id="text-editor">
----++--         <state relative-caret-position="855">
----++--           <caret line="58" column="51" selection-start-line="58" selection-start-column="51" selection-end-line="58" selection-end-column="51" />
----++---          <folding>
----++---            <element signature="imports" expanded="false" />
----++---            <element signature="e#2569#2570#0" expanded="false" />
----++---            <element signature="e#2602#2603#0" expanded="false" />
----++---          </folding>
----++--+          <folding />
----++--         </state>
----++--       </provider>
----++--     </entry>
----++--@@ -1041,9 +998,7 @@
----++--       <provider selected="true" editor-type-id="text-editor">
----++--         <state relative-caret-position="240">
----++--           <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="17" selection-end-column="0" />
----++---          <folding>
----++---            <element signature="imports" expanded="false" />
----++---          </folding>
----++--+          <folding />
----++--         </state>
----++--       </provider>
----++--     </entry>
----++--@@ -1059,35 +1014,6 @@
----++--       <provider selected="true" editor-type-id="text-editor">
----++--         <state relative-caret-position="180">
----++--           <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
----++---          <folding>
----++---            <element signature="e#492#493#0" expanded="false" />
----++---            <element signature="e#531#532#0" expanded="false" />
----++---            <element signature="e#575#576#0" expanded="false" />
----++---            <element signature="e#618#619#0" expanded="false" />
----++---            <element signature="e#677#678#0" expanded="false" />
----++---            <element signature="e#713#714#0" expanded="false" />
----++---            <element signature="e#773#774#0" expanded="false" />
----++---            <element signature="e#819#820#0" expanded="false" />
----++---          </folding>
----++---        </state>
----++---      </provider>
----++---    </entry>
----++---    <entry file="file://$PROJECT_DIR$/src/uciClient/UciProcessing.java">
----++---      <provider selected="true" editor-type-id="text-editor">
----++---        <state relative-caret-position="1845">
----++---          <caret line="133" column="28" selection-start-line="133" selection-start-column="28" selection-end-line="133" selection-end-column="28" />
----++---          <folding>
----++---            <element signature="imports" expanded="false" />
----++---            <element signature="e#5464#5465#0" expanded="false" />
----++---            <element signature="e#5490#5491#0" expanded="false" />
----++---          </folding>
----++---        </state>
----++---      </provider>
----++---    </entry>
----++---    <entry file="file://$PROJECT_DIR$/src/sample/Main.java">
----++---      <provider selected="true" editor-type-id="text-editor">
----++---        <state relative-caret-position="225">
----++---          <caret line="28" column="26" selection-start-line="28" selection-start-column="26" selection-end-line="28" selection-end-column="26" />
----++--           <folding />
----++--         </state>
----++--       </provider>
----++--diff --git a/output b/output
----++--deleted file mode 100644
----++--index e69de29..0000000
